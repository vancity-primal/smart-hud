{"version":3,"sources":["lib/winner.ts","styles/opacity.ts","lib/stats/definitions/firstBlood.ts","lib/stats/definitions/lCancelAccuracy.ts","lib/stats/definitions/neutralOpenerMoves.ts","lib/stats/definitions/killMoves.ts","lib/stats/definitions/selfDestructs.ts","lib/exists.ts","lib/stats/definitions/highestDamagePunish.ts","lib/stats/definitions/highestDamageCombo.ts","lib/stats/definitions/averageTimeToKill.ts","lib/stats/definitions/index.js","lib/stats/compute.ts","lib/stats/params.ts","lib/stats/filterGames.js","lib/readFile.ts","containers/StatOptions/index.tsx","styles/images/powered-by.png","containers/StatOptions/Option.tsx","containers/StatOptions/StatOptionItem.tsx","containers/StatOptions/StatOptionList.tsx","lib/demo.ts","styles/theme.tsx","lib/searchParams.ts","views/RandomView.tsx","store/reducers.ts","store/context.tsx","components/DropPad.tsx","components/ErrorMessage.tsx","lib/resources.ts","components/FileList/FileItem.tsx","components/FileList/index.tsx","containers/FileListInput.tsx","lib/hooks/useParam.ts","lib/hooks/useKeyPress.ts","containers/StatDisplay/StatDisplayItem.tsx","components/InlineEdit/index.tsx","lib/hooks/useOnClickOutside.ts","components/Stat.tsx","containers/StatDisplay/Statistic.tsx","containers/StatDisplay/StatDisplayList.tsx","containers/RenderDisplay.tsx","views/MainView.tsx","components/ExternalLink.tsx","components/Header.tsx","views/RenderView.tsx","App.tsx","serviceWorker.ts","index.tsx","lib/util.ts","components/Buttons.tsx","lib/stats/types.ts","lib/portColor.ts"],"names":["findWinner","lastFrame","Object","keys","players","map","i","post","reduce","a","b","stocksRemaining","percent","playerIndex","hasOpacity","initial","final","transition","css","firstBlood","name","type","betterDirection","recommendedRounding","calculate","games","firstBloodStocks","game","deathStocks","stats","stocks","filter","stock","endPercent","firstStock","_","orderBy","ratio","count","item","length","result","simple","text","isNaN","toFixed","this","number","lCancelAccuracy","totalLCancels","actionCounts","find","counts","lCancelCount","success","fail","tally","val","neutralOpenerMoves","neutralMoves","flatMap","conversions","get","conversion","isForPlayer","lastHitBy","isNeutralWin","openingType","moves","neutralMovesByMove","groupBy","neutralMoveCounts","move","first","moveId","id","moveUtil","getMoveName","shortName","getMoveShortName","orderedNeutralMoveCounts","topNeutralMove","simpleText","toUpperCase","killMoves","didKill","last","killMovesByMove","killMoveCounts","orderedKillMoveCounts","topKillMove","selfDestructs","sdCounts","playerEndedStocks","isPlayer","hasEndPercent","oppKillConversions","isOpp","sdSum","sum","exists","value","highDamagePunishes","punishes","getDamageDone","punish","startPercent","orderedPunishes","topPunish","take","highDamageCombos","combos","combosPerGame","combo","orderedCombos","topCombo","averageTimeToKill","oppStocks","total","sumBy","require","openingsPerKill","genOverallRatioStat","damagePerOpening","neutralWins","earlyKills","orderedOppStocks","earliestKillStock","lateDeaths","playerStocks","orderedPlayerStocks","latestDeathStock","inputsPerMinute","averageKillPercent","genSimpleFromRatio","damageDone","field","fixedNum","statRatios","overallStats","keyBy","avg","averageRatios","ratios","STAT_DEFINITIONS","Map","computeStats","statsList","firstGame","orderIndices","settings","indices","chain","clone","reverse","statKey","def","output","results","iIndices","port","generateGameInfo","orderedGames","metadata","startAt","getResultForPlayer","gameEnd","gameEndMethod","lrasInitiatorIndex","latestFrame","playerInfoGen","player","characterName","characterId","characterUtil","getCharacterName","characterColor","getCharacterColorName","nametag","gameResult","generatePlayerInfo","stage","stageId","stageUtil","getStageName","startTime","duration","convertFrameCountToDurationString","set","Stat","OPENINGS_PER_KILL","DAMAGE_PER_OPENING","NEUTRAL_WINS","KILL_MOVES","NEUTRAL_OPENER_MOVES","FIRST_BLOOD","L_CANCEL","EARLY_KILLS","LATE_DEATHS","SELF_DESTRUCTS","INPUTS_PER_MINUTE","AVG_KILL_PERCENT","AVG_TIME_TO_KILL","HIGH_DAMAGE_PUNISHES","HIGH_DAMAGE_COMBOS","DAMAGE_DONE","extractNameAndCode","playerPort","details","index","playerTag","netplayName","generateStatParams","gameDetails","filtered","gamesByIsSingles","nonSinglesGames","some","console","log","forEach","filePath","singlesGames","gamesByPorts","ports","join","gamesWithSamePorts","shift","flatGames","flatten","isEmpty","Error","filterGames","summary","generateOutput","err","error","params","lastGame","leftPlayer","rightPlayer","leftColor","getPortColor","rightColor","char1","char2","color1","color2","lastGameDetails","leftTag","leftCode","rightTag","rightCode","name1","name2","sub1","sub2","gt","gameKey","gameDuration","playerInfo","p","gameValue","s","readFileAsGameDetails","file","readFileAsSlippiGame","generateGameDetails","readFileAsArrayBuffer","data","arr","Int8Array","buf","Buffer","from","SlippiGame","getSettings","getStats","getMetadata","frames","getFrames","getLatestFrame","getGameEnd","Promise","resolve","reject","fr","FileReader","onabort","onerror","readAsBinaryString","addEventListener","string","resultString","Uint8Array","charCodeAt","buffer","readAsArrayBuffer","StatOptions","props","align","onClick","onClose","onChange","color","hideReset","onReset","module","exports","Outer","styled","div","checked","isDragging","Option","draggable","handleProps","rest","children","className","xmlns","width","height","viewBox","d","fill","StatOptionItem","stat","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","StatOptionList","statOptions","onDragEnd","destination","source","droppableId","newArray","reorder","droppableProps","option","key","statId","enabled","optionIndex","findIndex","o","newOptions","Array","toggle","placeholder","LEGAL_STAGE_IDS","Stage","FOUNTAIN_OF_DREAMS","POKEMON_STADIUM","YOSHIS_STORY","DREAMLAND","BATTLEFIELD","FINAL_DESTINATION","getRandomArbitrary","min","max","Math","random","getRandomInt","ceil","floor","generateDemoValues","paramMap","generateRandomCharacter","totalGames","sampleSize","leftWillWin","playerInfos","undefined","stageIndex","generateRandomStageId","generateRandomDuration","generateRandomGame","demoStats","Boolean","generateRandomMove","toString","generateRandomStat","charId","charInfo","getCharacterInfo","colorIndex","colors","defaultTheme","primaryColor","secondaryColor","GlobalTheme","styles","generateSearchParams","restoredParams","res","localStorage","getItem","getStoredValues","URLSearchParams","Types","RandomView","search","to","pathname","initialState","files","AppContext","createContext","state","dispatch","mainReducer","action","SET_DETAILS","payload","filename","fileToReplace","f","loading","SET_ERROR","ADD_FILES","currentFiles","newFiles","existingFile","REMOVE_FILE","CLEAR_ALL","reducer","AppProvider","useReducer","Provider","Container","DropPad","useDropzone","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","ErrorMessage","sanitize","replacement","toLowerCase","replace","getCharacterFolderFromId","character","charFolder","colorFolder","process","getCharacterFolderFromName","BasicFileItem","onRemove","title","CharacterIcon","winner","src","folder","getCharacterStockIcon","style","alt","FileItem","message","stageName","frame","winnerIndex","icons","FileList","timer","ALL_STATS","DEFAULT_STATS","getDefaultStats","current","validateStatOptions","newItems","currentItems","c","includes","generateStatsList","options","FileListInput","history","useHistory","useContext","React","useState","setError","showOptions","setShowOptions","defaultStats","statsModified","restoredStatsString","JSON","stringify","parse","setStatOptions","onStatOptionChange","setItem","fadeLoop","element","hidden","classList","add","setTimeout","remove","nextSibling","nextElementSibling","document","getElementById","onDrop","useCallback","acceptedFiles","Date","getTime","promises","all","then","time","finishedProcessing","buttonText","accept","push","disabled","welcomeMessage","clearTimeout","useParam","defaultValue","setValue","location","useLocation","useEffect","currentValue","setParam","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","window","removeEventListener","StatDisplayItem","InlineEdit","handler","onSetText","textAlign","isInputActive","_setIsInputActive","inputValue","setInputValue","setIsInputActive","isActive","onFocus","onBlur","wrapperRef","useRef","textRef","inputRef","tab","enter","esc","listener","event","contains","target","focus","maxWidth","e","defaultProps","StatLabel","StatContent","TextContent","OuterStat","label","leftComponent","backgroundColor","rightComponent","NumberStat","TextStat","ConnectedNumberStat","param1","param2","field1","setField1","field2","setField2","ConnectedTextStat","Statistic","theme","statInfo","StatDisplayList","setStats","split","items","setItems","hasItem","RenderDisplay","PortColor","P1","P2","MasterContainer","GameFrame","ReplayControlsContainer","ControlsTitle","MainView","ExternalLink","rel","Header","h1","RenderView","showSlippiLogo","href","poweredByImage","Settings","Fragment","hot","basename","exact","path","component","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","frameCount","totalFrames","moment","utc","as","format","list","startIndex","endIndex","splice","removed","ControlsButton","button","ResetButton","SecondaryButton","alignment","portNumber","P3","P4"],"mappings":"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","file":"static/js/main.41683e29.chunk.js","sourcesContent":["import { FrameEntryType } from \"@slippi/slippi-js\";\n\n/**\n * Given the last frame of the game, determine the winner first based on stock count\n * then based on remaining percent.\n * If percents are tied, return the player with the lower port number by default.\n *\n * @returns the player index of the winner\n */\nexport const findWinner = (lastFrame: FrameEntryType): number => {\n  const postFrameEntries = Object.keys(lastFrame.players).map((i: any) => (lastFrame.players[i] as any).post);\n  const winnerPostFrame = postFrameEntries.reduce((a, b) => {\n    // Determine winner based on stock count\n    if (a.stocksRemaining > b.stocksRemaining) {\n      return a;\n    }\n    if (a.stocksRemaining < b.stocksRemaining) {\n      return b;\n    }\n\n    // Stocks are the same so determine winner based off remaining percent\n    if (a.percent < b.percent) {\n      return a;\n    }\n    if (a.percent > b.percent) {\n      return b;\n    }\n\n    // Just return a by default\n    return a;\n  });\n\n  return winnerPostFrame.playerIndex;\n};\n","import { css } from \"@emotion/core\";\n\nexport const hasOpacity = (initial: number, final = 1, transition = \"opacity 0.2s ease-in-out\") => css`\n  opacity: ${initial};\n  transition: ${transition};\n  &:hover {\n    opacity: ${final};\n  }\n`;\n","import _ from \"lodash\";\n\nimport { StatDefinition } from \"../types\";\n\nexport const firstBlood: StatDefinition = {\n  name: \"First Blood\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    // For each game return either the first blood stock if taken or null if lost\n    const firstBloodStocks = games.map((game, i) => {\n      const deathStocks = game.stats.stocks.filter((stock) => {\n        const hasEndPercent = stock.endPercent !== null;\n        return hasEndPercent;\n      });\n      const orderedDeathStocks = _.orderBy(deathStocks, [\"endFrame\"], [\"asc\"]);\n      const firstStock = orderedDeathStocks[0];\n      if (!firstStock || firstStock.playerIndex === playerIndex) {\n        // console.log(`player ${playerIndex} did not draw first blood in game ${i + 1}`);\n        return null;\n      }\n      return firstStock;\n    });\n    const firstBloodCount = firstBloodStocks.reduce((count, item) => (item !== null ? count + 1 : count), 0);\n    const ratio = firstBloodCount / firstBloodStocks.length;\n\n    const simple = {\n      text: isNaN(ratio) ? \"N/A\" : `${(ratio * 100).toFixed(this.recommendedRounding)}%`,\n      number: ratio,\n    };\n\n    return {\n      result: firstBloodStocks,\n      simple,\n    };\n  },\n};\n","import { StatDefinition } from \"../types\";\n\nexport const lCancelAccuracy: StatDefinition = {\n  name: \"L-Cancel Accuracy\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    const lCancelsPerGame = games.map((game) => {\n      const actionCounts = game.stats.actionCounts.find((counts) => counts.playerIndex === playerIndex);\n      if (!actionCounts) {\n        return {\n          success: 0,\n          fail: 0,\n        };\n      }\n\n      return actionCounts.lCancelCount;\n    });\n\n    const totalLCancels = lCancelsPerGame.reduce(\n      (tally, val) => ({\n        success: tally.success + val.success,\n        fail: tally.fail + val.fail,\n      }),\n      { success: 0, fail: 0 }\n    );\n    const ratio = totalLCancels.success / (totalLCancels.success + totalLCancels.fail);\n\n    return {\n      result: totalLCancels,\n      simple: {\n        text: isNaN(ratio) ? \"N/A\" : `${(ratio * 100).toFixed(this.recommendedRounding)}%`,\n        number: ratio,\n      },\n    };\n  },\n};\n","import { moves as moveUtil } from \"@slippi/slippi-js\";\nimport _ from \"lodash\";\n\nimport { StatDefinition } from \"../types\";\n\nexport const neutralOpenerMoves: StatDefinition = {\n  name: \"Most Common Neutral Opener\",\n  type: \"text\",\n  calculate(games, playerIndex) {\n    const neutralMoves = _.flatMap(games, (game) => {\n      const conversions = _.get(game, [\"stats\", \"conversions\"]) ?? [];\n      const conversionsForPlayer = _.filter(conversions, (conversion) => {\n        const isForPlayer = conversion.lastHitBy === playerIndex;\n        const isNeutralWin = conversion.openingType === \"neutral-win\";\n        return isForPlayer && isNeutralWin;\n      });\n\n      return conversionsForPlayer.filter(({ moves }) => moves.length > 0).map((conversion) => conversion.moves[0]);\n    });\n\n    // TODO: This following code is repeated from kill move code, put in function\n    const neutralMovesByMove = _.groupBy(neutralMoves, \"moveId\");\n    const neutralMoveCounts = _.map(neutralMovesByMove, (moves) => {\n      const move = _.first(moves);\n      const moveId = move ? move.moveId : -1;\n      return {\n        count: moves.length,\n        id: moveId,\n        name: moveUtil.getMoveName(moveId),\n        shortName: moveUtil.getMoveShortName(moveId),\n      };\n    });\n\n    const orderedNeutralMoveCounts = _.orderBy(neutralMoveCounts, [\"count\"], [\"desc\"]);\n    const topNeutralMove = _.first(orderedNeutralMoveCounts);\n    let simpleText = \"N/A\";\n    if (topNeutralMove) {\n      simpleText = `${topNeutralMove.shortName} - ${topNeutralMove.count}`;\n    }\n\n    return {\n      result: orderedNeutralMoveCounts,\n      simple: {\n        text: simpleText.toUpperCase(),\n      },\n    };\n  },\n};\n","import { moves as moveUtil } from \"@slippi/slippi-js\";\nimport _ from \"lodash\";\n\nimport { StatDefinition } from \"../types\";\n\nexport const killMoves: StatDefinition = {\n  name: \"Most Common Kill Move\",\n  type: \"text\",\n  calculate(games, playerIndex) {\n    const killMoves = _.flatMap(games, (game) => {\n      const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n      const conversionsForPlayer = _.filter(conversions, (conversion) => {\n        const isForPlayer = conversion.lastHitBy === playerIndex;\n        const didKill = conversion.didKill;\n        return isForPlayer && didKill;\n      });\n\n      return conversionsForPlayer.map((conversion) => _.last(conversion.moves));\n    });\n\n    const killMovesByMove = _.groupBy(killMoves, \"moveId\");\n    const killMoveCounts = _.map(killMovesByMove, (moves) => {\n      const move = moves[0];\n      if (move) {\n        return {\n          count: moves.length,\n          id: move.moveId,\n          name: moveUtil.getMoveName(move.moveId),\n          shortName: moveUtil.getMoveShortName(move.moveId),\n        };\n      }\n\n      // Move is undefined so apparently this means it was a grab release??\n      return {\n        count: moves.length,\n        id: -1,\n        name: \"Grab Release\",\n        shortName: \"grab release\",\n      };\n    });\n\n    const orderedKillMoveCounts = _.orderBy(killMoveCounts, [\"count\"], [\"desc\"]);\n    const topKillMove = _.first(orderedKillMoveCounts);\n    let simpleText = \"N/A\";\n    if (topKillMove) {\n      simpleText = `${topKillMove.shortName} - ${topKillMove.count}`;\n    }\n\n    return {\n      result: orderedKillMoveCounts,\n      simple: {\n        text: simpleText.toUpperCase(),\n      },\n    };\n  },\n};\n","import _ from \"lodash\";\n\nimport { StatDefinition } from \"../types\";\n\nexport const selfDestructs: StatDefinition = {\n  // Only show this one if greater than 2 for one player\n  name: \"Total Self-Destructs\",\n  type: \"number\",\n  betterDirection: \"lower\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    const sdCounts = _.map(games, (game) => {\n      const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n      const playerEndedStocks = _.filter(stocks, (stock) => {\n        const isPlayer = stock.playerIndex === playerIndex;\n        const hasEndPercent = stock.endPercent !== null;\n        return isPlayer && hasEndPercent;\n      });\n\n      const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n      const oppKillConversions = _.filter(conversions, (conversion) => {\n        const isOpp = conversion.playerIndex === playerIndex;\n        const didKill = conversion.didKill;\n        return isOpp && didKill;\n      });\n\n      return playerEndedStocks.length - oppKillConversions.length;\n    });\n\n    const sdSum = _.sum(sdCounts);\n\n    return {\n      result: sdSum,\n      simple: {\n        number: sdSum,\n        text: `${sdSum}`,\n      },\n    };\n  },\n};\n","// Based on https://github.com/wilsonzlin/edgesearch/blob/d03816dd4b18d3d2eb6d08cb1ae14f96f046141d/demo/wiki/client/src/util/util.ts\n\n// Ensures value is not null or undefined.\n// != does no type validation so we don't need to explcitly check for undefined.\nexport function exists<T>(value: T | null | undefined): value is T {\n  return value != null;\n}\n","import { ConversionType } from \"@slippi/slippi-js\";\nimport { exists } from \"lib/exists\";\nimport _ from \"lodash\";\n\nimport { StatDefinition } from \"../types\";\n\nexport const highDamagePunishes: StatDefinition = {\n  name: \"Highest Damage Punish\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 1,\n  calculate(games, playerIndex) {\n    const punishes = _.flatMap(games, (game) => {\n      const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n      return _.filter(conversions, (conversion) => {\n        const isForPlayer = conversion.playerIndex !== playerIndex;\n        const hasEndPercent = conversion.endPercent !== null;\n        return isForPlayer && hasEndPercent;\n      });\n    });\n\n    const getDamageDone = (punish: ConversionType) => {\n      if (exists(punish.endPercent)) {\n        return punish.endPercent - punish.startPercent;\n      }\n      return 0;\n    };\n\n    const orderedPunishes = _.orderBy(punishes, [getDamageDone], \"desc\");\n    const topPunish = _.first(orderedPunishes);\n    const simple = {\n      text: \"N/A\",\n      number: null as number | null,\n    };\n\n    if (topPunish) {\n      simple.number = getDamageDone(topPunish);\n      simple.text = simple.number.toFixed(this.recommendedRounding);\n    }\n\n    return {\n      result: _.take(orderedPunishes, 5),\n      simple: simple,\n    };\n  },\n};\n","import { ComboType } from \"@slippi/slippi-js\";\nimport { exists } from \"lib/exists\";\nimport _ from \"lodash\";\n\nimport { StatDefinition } from \"../types\";\n\nexport const highDamageCombos: StatDefinition = {\n  name: \"Highest Damage Combo\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 1,\n  calculate(games, playerIndex) {\n    const combos = _.flatMap(games, (game) => {\n      const combosPerGame = _.get(game, [\"stats\", \"combos\"]) || [];\n      return _.filter(combosPerGame, (combo) => {\n        const isForPlayer = combo.playerIndex !== playerIndex;\n        const hasEndPercent = combo.endPercent !== null;\n        return isForPlayer && hasEndPercent;\n      });\n    });\n\n    const getDamageDone = (combo: ComboType) => {\n      if (exists(combo.endPercent)) {\n        return combo.endPercent - combo.startPercent;\n      }\n      return 0;\n    };\n\n    const orderedCombos = _.orderBy(combos, [getDamageDone], \"desc\");\n    const topCombo = _.first(orderedCombos);\n    const simple = {\n      text: \"N/A\",\n      number: null as number | null,\n    };\n\n    if (topCombo) {\n      simple.number = getDamageDone(topCombo);\n      simple.text = simple.number.toFixed(this.recommendedRounding);\n    }\n\n    return {\n      result: _.take(orderedCombos, 5),\n      simple: simple,\n    };\n  },\n};\n","import _ from \"lodash\";\n\nimport { StatDefinition } from \"../types\";\n\nexport const averageTimeToKill: StatDefinition = {\n  name: \"Average Time to Kill\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 1,\n  calculate(games, playerIndex) {\n    const oppStocks = _.flatMap(games, (game) => {\n      const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n      return _.filter(stocks, (stock) => {\n        const isOpp = stock.playerIndex !== playerIndex;\n        const hasEndPercent = stock.endPercent !== null;\n        return isOpp && hasEndPercent;\n      });\n    });\n\n    const result = {\n      total: oppStocks.length,\n      count: _.sumBy(oppStocks, \"endFrame\") - _.sumBy(oppStocks, \"startFrame\") || 0,\n      ratio: null as number | null,\n    };\n\n    result.ratio = result.total ? result.count / result.total / 60 : null; //Convert to seconds.\n    const simple = {\n      number: result.ratio,\n      text: result.ratio !== null ? result.ratio.toFixed(this.recommendedRounding) : \"N/A\",\n    };\n\n    return {\n      result: result,\n      simple: simple,\n    };\n  },\n};\n","/* eslint-disable */\n\n/*\n * Taken from: https://github.com/project-slippi/slippi-set-stats/blob/master/main.js\n */\n\nconst _ = require(\"lodash\");\n\nexport * from \"./firstBlood\";\nexport * from \"./lCancelAccuracy\";\nexport * from \"./neutralOpenerMoves\";\nexport * from \"./killMoves\";\nexport * from \"./selfDestructs\";\nexport * from \"./highestDamagePunish\";\nexport * from \"./highestDamageCombo\";\nexport * from \"./averageTimeToKill\";\n\nexport const openingsPerKill = {\n  name: \"Openings / Kill\",\n  type: \"number\",\n  betterDirection: \"lower\",\n  recommendedRounding: 1,\n  calculate(games, playerIndex) {\n    return genOverallRatioStat(games, playerIndex, \"openingsPerKill\", this.recommendedRounding);\n  },\n};\n\nexport const damagePerOpening = {\n  name: \"Damage / Opening\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 1,\n  calculate(games, playerIndex) {\n    return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", this.recommendedRounding);\n  },\n};\n\nexport const neutralWins = {\n  name: \"Neutral Wins\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    return genOverallRatioStat(games, playerIndex, \"neutralWinRatio\", this.recommendedRounding, \"count\");\n  },\n};\n\nexport const earlyKills = {\n  name: \"Earliest Kill\",\n  type: \"number\",\n  betterDirection: \"lower\",\n  recommendedRounding: 1,\n  calculate(games, playerIndex) {\n    const oppStocks = _.flatMap(games, (game) => {\n      const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n      return _.filter(stocks, (stock) => {\n        const isOpp = stock.playerIndex !== playerIndex;\n        const hasEndPercent = stock.endPercent !== null;\n        return isOpp && hasEndPercent;\n      });\n    });\n\n    const orderedOppStocks = _.orderBy(oppStocks, [\"endPercent\"], [\"asc\"]);\n    const earliestKillStock = _.first(orderedOppStocks);\n    const simple = {\n      text: \"N/A\",\n      number: null,\n    };\n\n    if (earliestKillStock) {\n      simple.number = earliestKillStock.endPercent;\n      simple.text = simple.number.toFixed(this.recommendedRounding);\n    }\n\n    return {\n      result: _.take(orderedOppStocks, 5),\n      simple: simple,\n    };\n  },\n};\n\nexport const lateDeaths = {\n  name: \"Latest Death\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    const playerStocks = _.flatMap(games, (game) => {\n      const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n      return _.filter(stocks, (stock) => {\n        const isPlayer = stock.playerIndex === playerIndex;\n        const hasEndPercent = stock.endPercent !== null;\n        return isPlayer && hasEndPercent;\n      });\n    });\n\n    const orderedPlayerStocks = _.orderBy(playerStocks, [\"endPercent\"], [\"desc\"]);\n    const latestDeathStock = _.first(orderedPlayerStocks);\n    const simple = {\n      text: \"N/A\",\n      number: null,\n    };\n\n    if (latestDeathStock) {\n      simple.number = latestDeathStock.endPercent;\n      simple.text = simple.number.toFixed(this.recommendedRounding);\n    }\n\n    return {\n      result: _.take(orderedPlayerStocks, 5),\n      simple: simple,\n    };\n  },\n};\n\nexport const inputsPerMinute = {\n  name: \"Inputs / Minute\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    return genOverallRatioStat(games, playerIndex, \"inputsPerMinute\", this.recommendedRounding);\n  },\n};\n\nexport const averageKillPercent = {\n  name: \"Average Kill Percent\",\n  type: \"number\",\n  betterDirection: \"lower\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    const oppStocks = _.flatMap(games, (game) => {\n      const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n      return _.filter(stocks, (stock) => {\n        const isOpp = stock.playerIndex !== playerIndex;\n        const hasEndPercent = stock.endPercent !== null;\n        return isOpp && hasEndPercent;\n      });\n    });\n\n    const result = {\n      total: oppStocks.length,\n      count: _.sumBy(oppStocks, \"endPercent\") || 0,\n    };\n\n    result.ratio = result.total ? result.count / result.total : null;\n\n    return {\n      result: result,\n      simple: genSimpleFromRatio(result, this.recommendedRounding),\n    };\n  },\n};\n\nexport const damageDone = {\n  name: \"Total Damage Done\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", this.recommendedRounding, \"count\");\n  },\n};\n\nfunction genOverallRatioStat(games, playerIndex, field, fixedNum, type = \"ratio\") {\n  const statRatios = _.map(games, (game) => {\n    const overallStats = _.get(game, [\"stats\", \"overall\"]);\n    const overallStatsByPlayer = _.keyBy(overallStats, \"playerIndex\");\n    const overallStatsForPlayer = overallStatsByPlayer[playerIndex];\n    return overallStatsForPlayer[field];\n  });\n\n  const avg = averageRatios(statRatios);\n  const simple = genSimpleFromRatio(avg, fixedNum, type);\n\n  return {\n    result: avg,\n    simple: simple,\n  };\n}\n\nfunction averageRatios(ratios) {\n  const result = {};\n\n  result.count = _.sumBy(ratios, \"count\") || 0;\n  result.total = _.sumBy(ratios, \"total\") || 0;\n  result.ratio = result.total ? result.count / result.total : null;\n\n  return result;\n}\n\nfunction genSimpleFromRatio(ratio, fixedNum, type = \"ratio\") {\n  const result = {};\n\n  switch (type) {\n    case \"ratio\":\n      result.number = ratio.ratio;\n      result.text = ratio.ratio !== null ? ratio.ratio.toFixed(fixedNum) : \"N/A\";\n      break;\n    case \"count\":\n      result.number = ratio.count;\n      result.text = ratio.count.toFixed(fixedNum);\n      break;\n  }\n\n  return result;\n}\n","/*\n * Based on: https://github.com/project-slippi/slippi-set-stats/blob/master/main.js\n */\n\nimport { characters as characterUtil, stages as stageUtil } from \"@slippi/slippi-js\";\nimport { PlayerType } from \"@slippi/slippi-js\";\nimport _ from \"lodash\";\n\nimport { convertFrameCountToDurationString } from \"../util\";\nimport { findWinner } from \"../winner\";\nimport {\n  averageKillPercent,\n  averageTimeToKill,\n  damageDone,\n  damagePerOpening,\n  earlyKills,\n  firstBlood,\n  highDamageCombos,\n  highDamagePunishes,\n  inputsPerMinute,\n  killMoves,\n  lateDeaths,\n  lCancelAccuracy,\n  neutralOpenerMoves,\n  neutralWins,\n  openingsPerKill,\n  selfDestructs,\n} from \"./definitions\";\nimport { GameDetails, Stat, StatDefinition } from \"./types\";\n\nexport const STAT_DEFINITIONS = new Map<string, StatDefinition>();\nSTAT_DEFINITIONS.set(Stat.OPENINGS_PER_KILL, openingsPerKill);\nSTAT_DEFINITIONS.set(Stat.DAMAGE_PER_OPENING, damagePerOpening);\nSTAT_DEFINITIONS.set(Stat.NEUTRAL_WINS, neutralWins);\nSTAT_DEFINITIONS.set(Stat.KILL_MOVES, killMoves);\nSTAT_DEFINITIONS.set(Stat.NEUTRAL_OPENER_MOVES, neutralOpenerMoves);\nSTAT_DEFINITIONS.set(Stat.FIRST_BLOOD, firstBlood);\nSTAT_DEFINITIONS.set(Stat.L_CANCEL, lCancelAccuracy);\nSTAT_DEFINITIONS.set(Stat.EARLY_KILLS, earlyKills);\nSTAT_DEFINITIONS.set(Stat.LATE_DEATHS, lateDeaths);\nSTAT_DEFINITIONS.set(Stat.SELF_DESTRUCTS, selfDestructs);\nSTAT_DEFINITIONS.set(Stat.INPUTS_PER_MINUTE, inputsPerMinute);\nSTAT_DEFINITIONS.set(Stat.AVG_KILL_PERCENT, averageKillPercent);\nSTAT_DEFINITIONS.set(Stat.AVG_TIME_TO_KILL, averageTimeToKill);\nSTAT_DEFINITIONS.set(Stat.HIGH_DAMAGE_PUNISHES, highDamagePunishes);\nSTAT_DEFINITIONS.set(Stat.HIGH_DAMAGE_COMBOS, highDamageCombos);\nSTAT_DEFINITIONS.set(Stat.DAMAGE_DONE, damageDone);\n\nfunction computeStats(statsList: string[], games: GameDetails[]) {\n  const firstGame = _.first(games);\n  if (!firstGame) {\n    return [];\n  }\n\n  // console.log(firstGame);\n  const orderIndices = _.map(firstGame.settings.players, \"playerIndex\");\n  const reversedIndices = _.chain(orderIndices).clone().reverse().value();\n  const indices = [orderIndices, reversedIndices];\n\n  const statResults = statsList.map((statKey) => {\n    const def = STAT_DEFINITIONS.get(statKey);\n    if (!def || !def.calculate) {\n      return null;\n    }\n\n    const { calculate, ...output } = def;\n    const results = _.map(indices, (iIndices) => {\n      const result: any = def.calculate(games, iIndices[0] /*, iIndices[1]*/);\n      result.port = iIndices[0] + 1;\n      return result;\n    });\n\n    return {\n      ...output,\n      id: statKey,\n      results,\n    };\n  });\n\n  return statResults;\n}\n\nfunction generateGameInfo(games: GameDetails[]) {\n  const getStartAt = (game: GameDetails) => game.metadata.startAt;\n  const orderedGames = _.orderBy(games, [getStartAt], [\"asc\"]);\n\n  const getResultForPlayer = (game: GameDetails, playerIndex: number): \"winner\" | \"loser\" | \"unknown\" => {\n    const gameEnd = game.gameEnd;\n    if (gameEnd) {\n      // Handle LRAS\n      switch (gameEnd.gameEndMethod) {\n        case 7:\n          return gameEnd.lrasInitiatorIndex === playerIndex ? \"loser\" : \"winner\";\n      }\n    }\n\n    const latestFrame = game.latestFrame;\n    if (!latestFrame) {\n      return \"unknown\";\n    }\n    const winner = findWinner(latestFrame);\n    return winner === playerIndex ? \"winner\" : \"loser\";\n  };\n\n  const generatePlayerInfo = (game: GameDetails) => (player: PlayerType) => {\n    // console.log(player);\n    const characterName =\n      player.characterId !== null ? characterUtil.getCharacterName(player.characterId) : `Player ${player.port}`;\n    const characterColor =\n      player.characterId !== null && player.characterColor !== null\n        ? characterUtil.getCharacterColorName(player.characterId, player.characterColor)\n        : \"Default\";\n\n    return {\n      port: player.port,\n      characterId: player.characterId,\n      nametag: player.nametag,\n      characterName,\n      characterColor,\n      gameResult: getResultForPlayer(game, player.playerIndex),\n    };\n  };\n\n  return _.map(orderedGames, (game: GameDetails) => {\n    const playerInfoGen = generatePlayerInfo(game);\n\n    return {\n      stage: {\n        id: game.settings.stageId,\n        name: game.settings.stageId !== null ? stageUtil.getStageName(game.settings.stageId) : \"\",\n      },\n      players: _.map(game.settings.players, playerInfoGen),\n      startTime: game.metadata.startAt,\n      duration: convertFrameCountToDurationString(game.stats.lastFrame),\n    };\n  });\n}\n\nexport function generateOutput(statsList: string[], games: GameDetails[]) {\n  return {\n    games: generateGameInfo(games),\n    summary: computeStats(statsList, games),\n  };\n}\n","import { get } from \"lodash\";\n\nimport { getPortColor } from \"../portColor\";\nimport { generateOutput } from \"./compute\";\nimport { filterGames } from \"./filterGames\";\nimport { GameDetails } from \"./types\";\n\nconst extractNameAndCode = (playerPort: number, details: GameDetails) => {\n  const settings = details.settings;\n  const metadata = details.metadata;\n  const index = playerPort - 1;\n  const player = settings.players.find((player) => player.playerIndex === index);\n  const playerTag = player ? player.nametag : null;\n  const netplayName: string | null = get(metadata, [\"players\", index, \"names\", \"netplay\"], null);\n  const netplayCode: string | null = get(metadata, [\"players\", index, \"names\", \"code\"], null);\n  const name = playerTag || netplayName || \"\";\n  return [name, netplayCode || \"\"] as const;\n};\n\nexport function generateStatParams(gameDetails: GameDetails[], statsList: string[]): Record<string, any> {\n  const filtered = filterGames(gameDetails);\n  if (!filtered || filtered.length === 0) {\n    throw new Error(\"No valid games\");\n  }\n\n  let stats;\n  try {\n    stats = generateOutput(statsList, filtered);\n  } catch (err) {\n    console.error(err);\n    throw new Error(err);\n  }\n\n  const { games, summary } = stats;\n  console.log(\"generated stats: \", stats);\n  const params: Record<string, any> = {}; // \"mckm1\": , \"mckm2\", \"mcno1\", \"mcno2\", \"opk1\", \"opk2\", \"tdd1\", \"tdd2\", \"dpo1\", \"dpo2\", \"ipm1\", \"ipm2\", \"akp1\", \"akp2\", \"nw1\", \"nw2\"};\n\n  // Set character info\n  const lastGame = games[games.length - 1];\n  const leftPlayer = lastGame.players[0];\n  const rightPlayer = lastGame.players[1];\n  params.leftColor = getPortColor(leftPlayer.port);\n  params.rightColor = getPortColor(rightPlayer.port);\n\n  params.char1 = leftPlayer.characterId;\n  params.char2 = rightPlayer.characterId;\n  params.color1 = leftPlayer.characterColor;\n  params.color2 = rightPlayer.characterColor;\n\n  // Set name tags\n  const lastGameDetails = filtered[filtered.length - 1];\n  const [leftTag, leftCode] = extractNameAndCode(leftPlayer.port, lastGameDetails);\n  const [rightTag, rightCode] = extractNameAndCode(rightPlayer.port, lastGameDetails);\n  params.name1 = leftTag.toUpperCase() || leftPlayer.characterName;\n  params.name2 = rightTag.toUpperCase() || rightPlayer.characterName;\n  params.sub1 = leftCode;\n  params.sub2 = rightCode;\n\n  // Set game info\n  params.gt = games.length; // Set the total number of games\n\n  games.forEach((game, i) => {\n    // console.log(\"processing game: \", game);\n    const gameKey = `g${i + 1}`;\n    const stageId = game.stage.id as number;\n    const gameDuration: string = game.duration;\n    const playerInfo = game.players.map((p: any) => [p.characterId, p.characterColor, p.gameResult].join(\",\"));\n    const gameValue = [stageId, gameDuration, ...playerInfo].join(\",\");\n    // console.log(`${gameKey} : ${gameValue}`);\n    params[gameKey] = gameValue;\n  });\n\n  params.stats = statsList.join(\",\");\n  // Set the stat values\n  summary.forEach((s) => {\n    // Stats can be null if the id is invalid or not specified\n    if (!s) {\n      return;\n    }\n\n    switch (s.id) {\n      // Put any custom logic here\n      default: {\n        (s.results as any[]).forEach((result, i) => {\n          params[`${s.id}${i + 1}`] = result.simple.text;\n        });\n        break;\n      }\n    }\n  });\n\n  console.log(\"returning these params: \", params);\n  return params;\n}\n","/* eslint-disable */\n\n/*\n * Taken from: https://github.com/project-slippi/slippi-set-stats/blob/master/main.js\n */\n\nimport _ from \"lodash\";\n\nexport function filterGames(games) {\n  // console.log(games);\n  const gamesByIsSingles = _.groupBy(games, (game) => {\n    const numberOfPlayers = game.settings.players.length;\n    return numberOfPlayers === 2;\n  });\n\n  const nonSinglesGames = _.get(gamesByIsSingles, false) || [];\n  if (_.some(nonSinglesGames)) {\n    console.log(\"The following games have been excluded because they are not singles games:\");\n    _.forEach(nonSinglesGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  const singlesGames = _.get(gamesByIsSingles, true) || [];\n  const gamesByPorts = _.chain(singlesGames)\n    .groupBy((game) => {\n      const ports = _.map(game.settings.players, \"port\");\n      return _.join(ports, \"-\");\n    })\n    .orderBy([\"length\"], [\"desc\"])\n    .value();\n\n  const gamesWithSamePorts = gamesByPorts.shift();\n  if (_.some(gamesByPorts)) {\n    console.log(\"The following games have been excluded because the player ports differ:\");\n    const flatGames = _.flatten(gamesByPorts);\n    _.forEach(flatGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  if (_.isEmpty(gamesWithSamePorts)) {\n    throw new Error(\"There were no valid games found to compute stats from.\");\n  }\n\n  console.log(`Including ${gamesWithSamePorts.length} games for stat calculation...`);\n\n  return gamesWithSamePorts;\n}\n","import { SlippiGame } from \"@slippi/slippi-js\";\n\nimport { GameDetails } from \"./stats/types\";\n\nexport async function readFileAsGameDetails(file: File): Promise<GameDetails> {\n  const game = await readFileAsSlippiGame(file);\n  return generateGameDetails(file.name, game);\n}\n\nasync function readFileAsSlippiGame(file: File): Promise<SlippiGame> {\n  const data = (await readFileAsArrayBuffer(file)) as ArrayBuffer;\n  const arr = new Int8Array(data);\n  const buf = Buffer.from(arr);\n  return new SlippiGame(buf);\n}\n\nfunction generateGameDetails(name: string, game: SlippiGame): GameDetails {\n  // For a valid SLP game, at the very least we should have valid settings\n  const settings = game.getSettings();\n  if (!settings) {\n    throw new Error(`Invalid SLP file. Could not find game settings in file: ${name}`);\n  }\n\n  const stats = game.getStats();\n  if (!stats) {\n    throw new Error(`Failed to process game stats for file: ${name}`);\n  }\n\n  const metadata = game.getMetadata();\n  if (!metadata) {\n    throw new Error(`Failed to load metadata for file: ${name}`);\n  }\n\n  return {\n    filePath: name,\n    settings,\n    frames: game.getFrames(),\n    stats,\n    metadata,\n    latestFrame: game.getLatestFrame(),\n    gameEnd: game.getGameEnd(),\n  };\n}\n\nasync function readFileAsArrayBuffer(file: File): Promise<string | ArrayBufferLike> {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onabort = () => reject(\"file reading was aborted\");\n    fr.onerror = () => reject(\"file reading has failed\");\n    if (fr.readAsBinaryString) {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          const string = (this as any).resultString != null ? (this as any).resultString : this.result;\n          const result = new Uint8Array(string.length);\n          for (let i = 0; i < string.length; i++) {\n            result[i] = string.charCodeAt(i);\n          }\n          resolve(result.buffer);\n        },\n        false\n      );\n      fr.readAsBinaryString(file);\n    } else {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          if (this.result) {\n            resolve(this.result);\n          } else {\n            reject(\"no data read\");\n          }\n        },\n        false\n      );\n      fr.readAsArrayBuffer(file);\n    }\n  });\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { ControlsButton, SecondaryButton } from \"components/Buttons\";\nimport React from \"react\";\n\nimport { StatOptionList } from \"./StatOptionList\";\nimport { StatOption } from \"./types\";\n\nexport * from \"./types\";\n\ninterface StatOptionsProps {\n  onClose: () => void;\n  value: StatOption[];\n  onChange: (stats: StatOption[]) => void;\n  onReset: () => void;\n  hideReset?: boolean;\n}\n\nexport const StatOptions: React.FC<StatOptionsProps> = (props) => {\n  return (\n    <div\n      css={css`\n        display: flex;\n        flex-direction: column;\n        flex-wrap: nowrap;\n        height: 100%;\n        width: 100%;\n      `}\n    >\n      <SecondaryButton align=\"right\" onClick={props.onClose}>\n        close\n      </SecondaryButton>\n      <div\n        css={css`\n          overflow: auto;\n          display: flex;\n          flex-direction: column;\n          margin-bottom: 2rem;\n        `}\n      >\n        <StatOptionList value={props.value} onChange={props.onChange} />\n      </div>\n      <ControlsButton color=\"black\" onClick={props.onClose}>\n        CLOSE\n      </ControlsButton>\n      {!props.hideReset && <SecondaryButton onClick={props.onReset}>restore defaults</SecondaryButton>}\n    </div>\n  );\n};\n","module.exports = __webpack_public_path__ + \"static/media/powered-by.61867ea8.png\";","import styled from \"@emotion/styled\";\nimport React from \"react\";\n\nconst Outer = styled.div<{\n  checked?: boolean;\n  isDragging?: boolean;\n}>`\n  opacity: ${(p) => (p.checked ? \"1\" : \"0.5\")};\n  background-color: ${(p) => (p.isDragging ? \"rgba(0, 0, 0, 0.6)\" : \"rgba(0, 0, 0, 0.3)\")};\n  color: white;\n  padding: 0.5rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  font-weight: ${(p) => (p.checked ? \"600\" : \"100\")};\n  ${(p) =>\n    p.isDragging\n      ? `\n    box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);\n    opacity: 1;\n`\n      : \"\"}\n\n  .title {\n    cursor: pointer;\n    user-select: none;\n    & > input[type=\"checkbox\"] {\n      margin-right: 1rem;\n    }\n  }\n  .handle {\n    display: flex;\n  }\n`;\n\nexport interface OptionProps extends Record<string, any> {\n  name: string;\n  checked?: boolean;\n  draggable?: boolean;\n  onChange: (checked: boolean) => void;\n  handleProps?: Record<string, any>;\n}\n\nexport const Option: React.FC<OptionProps> = (props) => {\n  const { name, checked, draggable, onChange, handleProps, children, ...rest } = props;\n  const toggle = () => props.onChange(!props.checked);\n  return (\n    <Outer checked={props.checked} {...rest}>\n      <label className=\"title\">\n        <input type=\"checkbox\" checked={props.checked} onChange={toggle} />\n        {name}\n      </label>\n      {draggable && (\n        <div className=\"handle\" {...handleProps}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n            <path d=\"M20 9H4v2h16V9zM4 15h16v-2H4v2z\" fill=\"#ffffff\" />\n          </svg>\n        </div>\n      )}\n    </Outer>\n  );\n};\n","import { STAT_DEFINITIONS } from \"lib/stats\";\nimport React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nimport { Option } from \"./Option\";\n\nexport const StatOptionItem: React.FC<{\n  checked: boolean;\n  index: number;\n  id: string;\n  onChange: (checked: boolean) => void;\n}> = (props) => {\n  const stat = STAT_DEFINITIONS.get(props.id);\n  if (!stat) {\n    return null;\n  }\n  return (\n    <Draggable draggableId={props.id} index={props.index}>\n      {(provided, snapshot) => (\n        <div ref={provided.innerRef}>\n          <Option\n            {...provided.draggableProps}\n            isDragging={snapshot.isDragging}\n            checked={props.checked}\n            onChange={props.onChange}\n            draggable={true}\n            name={stat.name}\n            handleProps={provided.dragHandleProps}\n          />\n        </div>\n      )}\n    </Draggable>\n  );\n};\n","import { reorder } from \"lib/util\";\nimport React from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nimport { StatOptionItem } from \"./StatOptionItem\";\nimport { StatOption } from \"./types\";\n\ninterface StatOptionListProps {\n  value: StatOption[];\n  onChange: (options: StatOption[]) => void;\n}\n\nexport const StatOptionList: React.FC<StatOptionListProps> = (props) => {\n  const statOptions = props.value;\n  const onDragEnd = (result: any) => {\n    const { destination, source } = result;\n    if (!destination) {\n      return;\n    }\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n    const newArray = reorder(props.value, source.index, destination.index);\n    props.onChange(newArray);\n  };\n\n  const toggle = (statId: string) => {\n    const optionIndex = statOptions.findIndex((o) => o.statId === statId);\n    if (optionIndex === -1) {\n      return;\n    }\n    const newOptions = Array.from(statOptions);\n    const option = newOptions[optionIndex];\n    option.enabled = !option.enabled;\n    props.onChange(newOptions);\n  };\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"stat-option-list\">\n        {(provided) => (\n          <div ref={provided.innerRef} {...provided.droppableProps}>\n            {statOptions.map((option, i) => {\n              return (\n                <StatOptionItem\n                  key={option.statId}\n                  index={i}\n                  id={option.statId}\n                  checked={option.enabled}\n                  onChange={() => toggle(option.statId)}\n                />\n              );\n            })}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n","import { characters as characterUtil, moves as moveUtil, Stage } from \"@slippi/slippi-js\";\nimport { sampleSize } from \"lodash\";\n\nimport { Stat, STAT_DEFINITIONS } from \"./stats\";\nimport { convertFrameCountToDurationString } from \"./util\";\n\nconst LEGAL_STAGE_IDS = [\n  Stage.FOUNTAIN_OF_DREAMS,\n  Stage.POKEMON_STADIUM,\n  Stage.YOSHIS_STORY,\n  Stage.DREAMLAND,\n  Stage.BATTLEFIELD,\n  Stage.FINAL_DESTINATION,\n];\n\n/*\n * Random functions are taken from: https://stackoverflow.com/questions/1527803/generating-random-whole-numbers-in-javascript-in-a-specific-range\n */\n\n/**\n * Returns a random number between min (inclusive) and max (exclusive)\n */\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\n/**\n * Returns a random integer between min (inclusive) and max (inclusive).\n * The value is no lower than min (or the next integer greater than min\n * if min isn't an integer) and no greater than max (or the next integer\n * lower than max if max isn't an integer).\n * Using Math.round() will give you a non-uniform distribution!\n */\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function generateDemoValues(): Record<string, any> {\n  const paramMap: Record<string, any> = {};\n\n  // Set names\n  paramMap.name1 = \"FOLLOW\";\n  paramMap.name2 = \"ON\";\n  paramMap.sub1 = \"@_vinceau\";\n  paramMap.sub2 = \"TWITTER\";\n\n  // Set colors\n  const [char1, color1] = generateRandomCharacter();\n  const [char2, color2] = generateRandomCharacter();\n  paramMap.char1 = char1;\n  paramMap.color1 = color1;\n  paramMap.char2 = char2;\n  paramMap.color2 = color2;\n\n  // Random games\n  const totalGames = getRandomInt(3, 5);\n  paramMap.gt = totalGames;\n  sampleSize(LEGAL_STAGE_IDS, totalGames).forEach((stage, i) => {\n    const gameKey = `g${i + 1}`;\n    const leftWillWin = Math.random() < 0.5;\n    const leftPlayerInfo = [char1, color1, leftWillWin ? \"winner\" : \"loser\"].join(\",\");\n    const rightPlayerInfo = [char2, color2, leftWillWin ? \"loser\" : \"winner\"].join(\",\");\n    const gameValue = generateRandomGame([leftPlayerInfo, rightPlayerInfo], stage);\n    paramMap[gameKey] = gameValue;\n  });\n\n  const demoStats = [\n    Stat.KILL_MOVES,\n    Stat.NEUTRAL_OPENER_MOVES,\n    \"\",\n    Stat.OPENINGS_PER_KILL,\n    Stat.DAMAGE_DONE,\n    Stat.AVG_KILL_PERCENT,\n    Stat.NEUTRAL_WINS,\n  ];\n\n  paramMap.stats = demoStats.join(\",\");\n\n  demoStats\n    .filter((s) => Boolean(s))\n    .forEach((statId) => {\n      [1, 2].forEach((player) => {\n        const key = statId + player;\n        paramMap[key] = generateRandomStat(statId);\n      });\n    });\n  return paramMap;\n}\n\nfunction generateRandomStat(statId: string): string {\n  const stat = STAT_DEFINITIONS.get(statId);\n  if (!stat) {\n    return \"\";\n  }\n  switch (statId) {\n    case Stat.NEUTRAL_OPENER_MOVES:\n      return generateRandomMove();\n    case Stat.KILL_MOVES:\n      return generateRandomMove();\n    case Stat.OPENINGS_PER_KILL:\n      return getRandomArbitrary(5, 15).toFixed(stat.recommendedRounding);\n    case Stat.DAMAGE_DONE:\n      return getRandomArbitrary(1000, 2000).toFixed(stat.recommendedRounding);\n    case Stat.AVG_KILL_PERCENT:\n      return getRandomArbitrary(50, 200).toFixed(stat.recommendedRounding);\n    case Stat.NEUTRAL_WINS:\n      return getRandomInt(30, 80).toString();\n    default:\n      return \"\";\n  }\n}\n\nfunction generateRandomMove(): string {\n  const move = getRandomInt(7, 21);\n  const name = moveUtil.getMoveShortName(move).toUpperCase();\n  return `${name} - ${move}`;\n}\n\nfunction generateRandomCharacter() {\n  const charId = getRandomInt(0, 25);\n  const charInfo = characterUtil.getCharacterInfo(charId);\n  const colorIndex = getRandomInt(0, charInfo.colors.length - 1);\n  const color = charInfo.colors[colorIndex];\n  return [charId, color] as const;\n}\n\nfunction generateRandomStageId(): number {\n  const stageIndex = getRandomInt(0, LEGAL_STAGE_IDS.length - 1);\n  return LEGAL_STAGE_IDS[stageIndex];\n}\n\nfunction generateRandomDuration(): string {\n  // The number of frames in 30 seconds\n  const minFrames = 30 * 60;\n  // The number of frames in 8 minutes\n  const maxFrames = 8 * 60 * 60;\n  const frames = getRandomInt(minFrames, maxFrames);\n  return convertFrameCountToDurationString(frames);\n}\n\nfunction generateRandomGame(playerInfos: string[], stage?: Stage): string {\n  const stageId = stage !== undefined ? stage : generateRandomStageId();\n  const gameDuration = generateRandomDuration();\n  const gameValue = [stageId, gameDuration, ...playerInfos].join(\",\");\n  return gameValue;\n}\n","/** @jsx jsx */\nimport { css, Global, jsx } from \"@emotion/core\";\n\nexport interface Theme {\n  primaryColor: string;\n  secondaryColor: string;\n}\n\nexport const defaultTheme: Theme = {\n  primaryColor: \"#286163\",\n  secondaryColor: \"#121020\",\n};\n\nexport const GlobalTheme: React.FC = () => {\n  return (\n    <Global\n      styles={css`\n          * {\n            box-sizing: border-box;\n            margin: 0;\n            padding: 0;\n          }\n      `}\n    />\n  );\n};\n","import { defaultTheme } from \"styles/theme\";\n\nfunction getStoredValues(keys: string[]): Record<string, string | null> {\n  const res: Record<string, string | null> = {};\n  keys.forEach((key) => {\n    const value = localStorage.getItem(key);\n    if (value) {\n      res[key] = value;\n    }\n  });\n  return res;\n}\n\nexport function generateSearchParams(params: Record<string, any>): URLSearchParams {\n  const restoredParams = getStoredValues([\"primaryColor\", \"secondaryColor\", \"leftColor\", \"rightColor\"]);\n  const searchParams = new URLSearchParams({\n    ...defaultTheme,\n    ...restoredParams,\n    ...params,\n  });\n  return searchParams;\n}\n","import { generateDemoValues } from \"lib/demo\";\nimport { generateSearchParams } from \"lib/searchParams\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nexport const RandomView: React.FC = () => {\n  const params = generateDemoValues();\n  const search = \"?\" + generateSearchParams(params).toString();\n  return (\n    <Redirect\n      to={{\n        pathname: \"/render\",\n        search,\n      }}\n    />\n  );\n};\n","import { GameDetails } from \"lib/stats/types\";\n\nimport { InitialStateType, ProcessedFile } from \"./types\";\n\ntype ActionMap<M extends { [index: string]: any }> = {\n  [Key in keyof M]: M[Key] extends undefined\n    ? {\n        type: Key;\n      }\n    : {\n        type: Key;\n        payload: M[Key];\n      };\n};\n\nexport enum Types {\n  ADD_FILES = \"ADD_FILES\",\n  SET_DETAILS = \"SET_DETAILS\",\n  SET_ERROR = \"SET_ERROR\",\n  REMOVE_FILE = \"REMOVE_FILE\",\n  CLEAR_ALL = \"CLEAR_ALL\",\n}\n\ntype ActionPayload = {\n  [Types.SET_DETAILS]: {\n    filename: string;\n    details: GameDetails;\n  };\n  [Types.SET_ERROR]: {\n    filename: string;\n    error: any;\n  };\n  [Types.ADD_FILES]: {\n    files: File[];\n  };\n  [Types.REMOVE_FILE]: {\n    filename: string;\n  };\n  [Types.CLEAR_ALL]: never;\n};\n\nexport type ReducerActions = ActionMap<ActionPayload>[keyof ActionMap<ActionPayload>];\n\nexport const reducer = (state: InitialStateType, action: ReducerActions) => {\n  switch (action.type) {\n    case Types.SET_DETAILS: {\n      const { filename, details } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.filename === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].details = details;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.SET_ERROR: {\n      const { filename, error } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.filename === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].error = error;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.ADD_FILES: {\n      const { files } = action.payload;\n      const currentFiles = state.files;\n      let newFiles: ProcessedFile[] = files.map((f) => ({\n        filename: f.name,\n        loading: true,\n        details: null,\n      }));\n\n      // Make sure there are no duplicate filenames\n      newFiles = newFiles.filter((f) => !currentFiles.find((existingFile) => f.filename === existingFile.filename));\n\n      return {\n        ...state,\n        files: [...currentFiles, ...newFiles],\n      };\n    }\n    case Types.REMOVE_FILE: {\n      const { filename } = action.payload;\n      const files = state.files.filter((f) => f.filename !== filename);\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.CLEAR_ALL: {\n      return {\n        ...state,\n        files: [],\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { createContext, Dispatch, useReducer } from \"react\";\n\nimport { reducer, ReducerActions } from \"./reducers\";\nimport { InitialStateType } from \"./types\";\n\nconst initialState: InitialStateType = {\n  files: [],\n};\n\nconst AppContext = createContext<{\n  state: InitialStateType;\n  dispatch: Dispatch<ReducerActions>;\n}>({\n  state: initialState,\n  dispatch: () => null,\n});\n\nconst mainReducer = (state: InitialStateType, action: ReducerActions) => reducer(state, action);\n\nconst AppProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(mainReducer, initialState);\n\n  return <AppContext.Provider value={{ state, dispatch }}>{children}</AppContext.Provider>;\n};\n\nexport { AppProvider, AppContext };\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { DropzoneOptions, useDropzone } from \"react-dropzone\";\n\nconst Container = styled.div`\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-width: 2px;\n  width: 700px;\n\theight: 85px;\n\tbackground-color: gray;\n\tmargin: 15px auto;\n  p {\n    text-align: center;\n    text-transform: uppercase;\n    font-weight: bold;\n    margin-top: 35px;\n  }\n`;\n\nexport const DropPad: React.FC<Partial<DropzoneOptions>> = (props) => {\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone(props);\n\n  return (\n    <Container {...getRootProps({ isDragActive, isDragAccept, isDragReject })}>\n      <input {...getInputProps()} />\n      <p>Drag replay file here or click to select</p>\n    </Container>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\n\nexport const ErrorMessage: React.FC = (props) => {\n  return (\n    <span\n      css={css`\n        color: #bf2600;\n        font-weight: bold;\n      `}\n    >\n      ERROR: {props.children}\n    </span>\n  );\n};\n","import { characters as characterUtil, stages as stageUtil } from \"@slippi/slippi-js\";\n\nexport type Side = \"left\" | \"right\";\n\nfunction sanitize(text: string, replacement = \"-\"): string {\n  return text.toLowerCase().replace(/[. &]+/gi, replacement);\n}\n\nfunction getCharacterFolderFromId(characterId: string | number, color?: string) {\n  const characterName = characterUtil.getCharacterName(+characterId);\n  return getCharacterFolderFromName(characterName, color);\n}\n\nfunction getCharacterFolderFromName(character: string, color = \"Default\") {\n  const charFolder = sanitize(character);\n  const colorFolder = sanitize(color);\n  return `${process.env.PUBLIC_URL}/images/characters/${charFolder}/${colorFolder}`;\n}\n\nexport function getCharacterPortrait(characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/portrait.png`;\n}\n\nexport function getCharacterVSScreen(side: Side, characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/vs-${side}.png`;\n}\n\nexport function getCharacterStockIcon(characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/stock.png`;\n}\n\nexport function getStageIcon(stageId: string | number): string {\n  const stageName = stageUtil.getStageName(+stageId);\n  return `${process.env.PUBLIC_URL}/images/stages/${stageName}.png`;\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { characters as characterUtil, stages as stageUtil } from \"@slippi/slippi-js\";\nimport { ErrorMessage } from \"components/ErrorMessage\";\nimport { getCharacterStockIcon } from \"lib/resources\";\nimport { convertFrameCountToDurationString } from \"lib/util\";\nimport { findWinner } from \"lib/winner\";\nimport React from \"react\";\nimport { ProcessedFile } from \"store/types\";\nimport { hasOpacity } from \"styles/opacity\";\nimport { defaultTheme } from \"styles/theme\";\n\nconst BasicFileItem: React.FC<{ name: string; onRemove?: () => void }> = (props) => {\n  const { onRemove, name, children } = props;\n  return (\n    <div\n      css={css`\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        width: 700px;\n        height: 85px;\n        background-color: gray;\n        margin: 15px auto;\n        &:hover {\n          .remove-button {\n            opacity: 1;\n          }\n        }\n        .remove-button {\n          opacity: 0;\n          transition: opacity 0.2s ease-in-out;\n          background: white;\n          color: ${defaultTheme.secondaryColor};\n          border: none;\n          font-weight: bold;\n          font-size: 2.5rem;\n          cursor: pointer;\n          padding: 0.2rem 1rem;\n          margin: 0;\n        }\n      `}\n    >\n      <div\n        css={css`\n          flex: 1;\n          padding: 0rem 0 0 0rem;\n        `}\n      >\n        <div\n          css={css`\n            padding: 0.5rem 0 0 2rem;\n            font-size: 1.6rem;\n            font-weight: bold;\n            margin-bottom: 1rem;\n            font-family: monospace;\n          `}\n        >\n          {name}\n        </div>\n        <div\n          css={css`\n            padding: 0 0 0 10rem;\n          `}\n        >{children}</div>\n      </div>\n      {onRemove && (\n        <button className=\"remove-button\" onClick={onRemove} title=\"Remove\">\n          ✕\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst CharacterIcon: React.FC<{\n  charId: string | number;\n  color: string;\n  winner?: boolean;\n}> = ({ charId, color, winner }) => {\n  const src = getCharacterStockIcon(charId, color);\n  return (\n    <div\n      css={css`\n        position: relative;\n        display: inline-block;\n        margin-top: 0.5rem;\n        ${winner &&\n        `&::after {\n          position: absolute;\n          content: \" \";\n          height: 0.7rem;\n          width: 60%;\n          background-color: #ffa700;\n          left: 20%;\n          bottom: 110%;\n          clip-path: polygon(50% 0%, 75% 35%, 100% 0, 100% 100%, 0 100%, 0 0, 25% 35%);\n        }\n      `}\n      `}\n    >\n      <img src={src} style={{ height: \"3rem\" }} alt=\"stock icon\" />\n    </div>\n  );\n};\n\nexport interface FileItemProps {\n  file: ProcessedFile;\n  onRemove: () => void;\n}\n\nexport const FileItem: React.FC<FileItemProps> = (props) => {\n  const { file, onRemove } = props;\n  const { filename, loading, error, details } = file;\n  if (loading) {\n    return (\n      <BasicFileItem name={filename}>\n        <span\n          css={css`\n            font-weight: bold;\n          `}\n        >\n          LOADING...\n        </span>\n      </BasicFileItem>\n    );\n  }\n  if (error || !details) {\n    return (\n      <BasicFileItem onRemove={onRemove} name={filename}>\n        <ErrorMessage>{error.message}</ErrorMessage>\n      </BasicFileItem>\n    );\n  }\n\n  const stageName = stageUtil.getStageName(details.settings.stageId as number);\n  const players = details.settings.players;\n  const duration = details.latestFrame ? convertFrameCountToDurationString(details.latestFrame.frame) : \"N/A\";\n  const winnerIndex = details.latestFrame ? findWinner(details.latestFrame) : null;\n  const icons = players.map((player) => {\n    const winner = player.playerIndex === winnerIndex;\n    const charId = player.characterId as number;\n    const color = characterUtil.getCharacterColorName(charId, player.characterColor as number);\n    return <CharacterIcon key={`${player.port}-icon`} charId={charId} color={color} winner={winner} />;\n  });\n  return (\n    <BasicFileItem onRemove={onRemove} name={filename}>\n      <div\n        css={css`\n          display: grid;\n          justify-items: center;\n          align-items: center;\n          grid-template-columns: repeat(3, 1fr);\n          font-weight: bold;\n        `}\n      >\n        <div>{stageName}</div>\n        <div\n          css={css`\n            display: grid;\n            grid-auto-flow: column;\n            grid-column-gap: 1rem;\n          `}\n        >\n          {icons}\n        </div>\n        <div>{duration}</div>\n      </div>\n    </BasicFileItem>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { ProcessedFile } from \"store/types\";\n\nimport { FileItem } from \"./FileItem\";\n\nexport interface FileListProps {\n  files: ProcessedFile[];\n  onRemove: (filename: string) => void;\n}\n\nexport const FileList: React.FC<FileListProps> = (props) => {\n  const { files, onRemove } = props;\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-template-columns: 100%;\n        grid-row-gap: 1rem;\n      `}\n    >\n      {files.map((f) => (\n        <FileItem key={f.filename} file={f} onRemove={() => onRemove(f.filename)} />\n      ))}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { ControlsButton, ResetButton } from \"components/Buttons\";\nimport { DropPad } from \"components/DropPad\";\nimport { ErrorMessage } from \"components/ErrorMessage\";\nimport { FileList } from \"components/FileList\";\nimport { readFileAsGameDetails } from \"lib/readFile\";\nimport { generateSearchParams } from \"lib/searchParams\";\nimport { generateStatParams } from \"lib/stats\";\nimport { GameDetails, Stat } from \"lib/stats/types\";\nimport React, { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { AppContext, Types } from \"../store\";\nimport { StatOption, StatOptions } from \"./StatOptions\";\n\nlet timer: any = null;\n\nconst STAT_OPTIONS_STORE_KEY = \"statOptions\";\n\nconst ALL_STATS: string[] = [\n  Stat.INPUTS_PER_MINUTE,\n  Stat.DAMAGE_PER_OPENING,\n  Stat.OPENINGS_PER_KILL,\n  Stat.DAMAGE_DONE,\n  Stat.AVG_KILL_PERCENT,\n  Stat.NEUTRAL_WINS,\n  Stat.L_CANCEL,\n  Stat.FIRST_BLOOD,\n  Stat.EARLY_KILLS,\n  Stat.LATE_DEATHS,\n  Stat.SELF_DESTRUCTS,\n  Stat.HIGH_DAMAGE_PUNISHES,\n  Stat.HIGH_DAMAGE_COMBOS,\n  Stat.AVG_TIME_TO_KILL,\n];\n\nconst DEFAULT_STATS = [Stat.INPUTS_PER_MINUTE, Stat.OPENINGS_PER_KILL, Stat.AVG_KILL_PERCENT, Stat.HIGH_DAMAGE_COMBOS];\n\nconst getDefaultStats = (): StatOption[] => {\n  const current = DEFAULT_STATS.map((s) => ({\n    statId: s,\n    enabled: true,\n  }));\n  return validateStatOptions(current);\n};\n\nconst validateStatOptions = (current: StatOption[]): StatOption[] => {\n  const newItems: StatOption[] = ALL_STATS.filter(\n    (statId) => !current.find((option) => option.statId === statId)\n  ).map((statId) => ({ statId, enabled: false }));\n\n  // Make sure the ones we're showing are supported\n  const currentItems = current.filter((c) => ALL_STATS.includes(c.statId));\n  return [...currentItems, ...newItems];\n};\n\nconst generateStatsList = (options: StatOption[]): string[] => {\n  // const statsList = options.filter((s) => s.enabled).map((s) => s.statId);\n  return [\n    Stat.INPUTS_PER_MINUTE,\n    Stat.OPENINGS_PER_KILL,\n    Stat.AVG_TIME_TO_KILL,\n    Stat.HIGH_DAMAGE_COMBOS,\n    Stat.KILL_MOVES,\n  ];\n};\n\nexport const FileListInput: React.FC = () => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(AppContext);\n  const [error, setError] = React.useState<any>(null);\n  const [showOptions, setShowOptions] = React.useState(false);\n\n  const clearAll = () => {\n    dispatch({\n      type: Types.CLEAR_ALL,\n    });\n    history.push({\n      pathname: \"/\"\n    });\n    const welcomeMessage = document.getElementById(\"welcome-message\");\n    const element = (welcomeMessage as HTMLElement)\n    element.hidden = false;\n    element.classList.remove('fadeIn');\n    element.classList.remove('fadeOut');\n    clearTimeout(timer);\n  };\n\n  let defaultStats = getDefaultStats();\n  let statsModified = false;\n  // Since we're persisting user options in localStorage, we need to be able to\n  // handle the case where new options are available, yet not in their localStorage.\n  const restoredStatsString = localStorage.getItem(STAT_OPTIONS_STORE_KEY);\n  if (restoredStatsString) {\n    statsModified = restoredStatsString !== JSON.stringify(defaultStats);\n    defaultStats = validateStatOptions(JSON.parse(restoredStatsString));\n  }\n\n  const [statOptions, setStatOptions] = React.useState<StatOption[]>(defaultStats);\n\n  const onStatOptionReset = () => {\n    onStatOptionChange(getDefaultStats());\n  };\n\n  const onStatOptionChange = (options: StatOption[]) => {\n    localStorage.setItem(STAT_OPTIONS_STORE_KEY, JSON.stringify(options));\n    setStatOptions(options);\n  };\n\n  const onClick = () => {\n    try {\n      const gameDetails = state.files.filter((f) => f.details !== null).map((f) => f.details as GameDetails);\n      const params = generateStatParams(gameDetails, generateStatsList(statOptions));\n      const search = \"?\" + generateSearchParams(params).toString();\n      history.push({\n        search,\n      });\n      const welcomeMessage = document.getElementById(\"welcome-message\");\n      fadeLoop(welcomeMessage as HTMLElement);\n    } catch (err) {\n      console.error(error);\n      setError(err);\n    }\n  };\n\n  const fadeLoop = (element: HTMLElement) => {\n    element.hidden = false;\n    element.classList.add('fadeIn');\n    timer = setTimeout(() => {\n      element.classList.remove('fadeIn');\n      element.classList.add('fadeOut');\n      timer = setTimeout(() => {\n        element.hidden = true;\n        let nextSibling = element.nextElementSibling;\n        if(nextSibling == null)\n        {\n          nextSibling = document.getElementById(\"welcome-message\");\n        }\n        fadeLoop(nextSibling as HTMLElement);\n      }, 1000);\n    }, 1000);\n  };\n\n  const onRemove = (filename: string) => {\n    const gameDetails = state.files.filter((f) => f.details !== null).map((f) => f.details as GameDetails);\n    const params = generateStatParams(gameDetails, generateStatsList(statOptions));\n    const search = \"?\" + generateSearchParams(params).toString();\n    history.push({\n      search,\n    });\n    dispatch({\n      type: Types.REMOVE_FILE,\n      payload: {\n        filename,\n      },\n    });\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      // Track how long processing takes\n      const startTime = new Date().getTime();\n\n      // First add all the files to the store\n      dispatch({\n        type: Types.ADD_FILES,\n        payload: {\n          files: acceptedFiles,\n        },\n      });\n\n      const promises = acceptedFiles.map(async (file) => {\n        try {\n          const details = await readFileAsGameDetails(file);\n          dispatch({\n            type: Types.SET_DETAILS,\n            payload: {\n              filename: file.name,\n              details,\n            },\n          });\n        } catch (err) {\n          console.error(error);\n          dispatch({\n            type: Types.SET_ERROR,\n            payload: {\n              filename: file.name,\n              error: err,\n            },\n          });\n        }\n      });\n\n      // Print the time taken when complete\n      Promise.all(promises).then(() => {\n        const time = new Date().getTime() - startTime;\n        console.log(`Finished processing in ${time}ms`);\n      });\n    },\n    [dispatch, error]\n  );\n\n  const finishedProcessing = !state.files.find((f) => f.loading);\n  const buttonText =\n    state.files.length === 0 ? \"Start Stats Bar\" : finishedProcessing ? \"Start Stats Bar\" : \"Please Wait\";\n\n  if (showOptions) {\n    return (\n      <StatOptions\n        onClose={() => setShowOptions(false)}\n        value={statOptions}\n        onChange={onStatOptionChange}\n        onReset={onStatOptionReset}\n        hideReset={!statsModified}\n      />\n    );\n  }\n\n  return (\n    <div\n      css={css`\n        display: flex;\n        flex-direction: column;\n        flex-wrap: nowrap;\n        width: 100%;\n        height: 100%;\n      `}\n    >\n      <DropPad accept=\".slp\" onDrop={onDrop} />\n      <div\n        css={css`\n          overflow: auto;\n          display: flex;\n          flex-direction: column;\n          margin: 1rem 0;\n        `}\n      >\n        <FileList files={state.files} onRemove={onRemove} />\n      </div>\n      <ControlsButton\n        css={css`\n          margin-bottom: 5px;\n        `}\n        color=\"white\"\n        disabled={state.files.length === 0 || !finishedProcessing}\n        onClick={onClick}\n      >\n        {buttonText}\n      </ControlsButton>\n      {state.files.length > 0 && <ResetButton onClick={clearAll}>Reset</ResetButton>}\n      {error && <ErrorMessage>{error.message}</ErrorMessage>}\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport function useParam(key: string, defaultValue = \"\") {\n  const [value, setValue] = useState<string>(defaultValue);\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const currentValue = params.get(key);\n    if (currentValue !== value) {\n      setValue(currentValue || defaultValue);\n    }\n  }, [key, defaultValue, location, value]);\n\n  const setParam = (val: string) => {\n    const params = new URLSearchParams(location.search);\n    params.set(key, val);\n    const search = \"?\" + params.toString();\n    history.push({\n      pathname: location.pathname,\n      search,\n    });\n  };\n\n  return [value, setParam] as const;\n}\n","// From: https://usehooks.com/useKeyPress/\n\nimport { useEffect, useState } from \"react\";\n\nexport function useKeyPress(targetKey: any) {\n  // State for keeping track of whether key is pressed\n\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // Add event listeners\n\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n\n    function downHandler({ key }: any) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n\n    // If released key is our target key then set to false\n\n    const upHandler = ({ key }: any) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n\n    window.addEventListener(\"keyup\", upHandler);\n\n    // Remove event listeners on cleanup\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [targetKey]); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}\n","import styled from \"@emotion/styled\";\n\nexport const StatDisplayItem = styled.div<{\n  hasItem: boolean;\n  isDragging?: boolean;\n  isDraggingOver?: boolean;\n}>`\n  width: 1200px;\n  height: 55px;\n\n  padding: 5px;\n\n  background-color: #09001e;\n  text-align: center;\n`;\n","// From: https://dev.to/joelmturner/build-an-inline-edit-text-input-with-react-hooks-4nah\n\nimport \"./index.scss\";\n\nimport { useKeyPress, useOnClickOutside } from \"lib/hooks\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nexport interface InlineEditProps {\n  text: string;\n  textAlign?: \"left\" | \"right\";\n  onSetText: (text: string) => void;\n  onBlur?: () => void;\n  onFocus?: () => void;\n  placeholder?: string;\n}\n\nexport const InlineEdit: React.FC<InlineEditProps> = (props) => {\n  const { text, onSetText, textAlign, placeholder } = props;\n  const [isInputActive, _setIsInputActive] = useState(false);\n  const [inputValue, setInputValue] = useState(text);\n\n  const setIsInputActive = React.useCallback(\n    (isActive: boolean) => {\n      if (isActive !== isInputActive) {\n        // Value has changed\n        if (isActive && props.onFocus) {\n          props.onFocus();\n        }\n\n        if (!isActive && props.onBlur) {\n          props.onBlur();\n        }\n      }\n      _setIsInputActive(isActive);\n    },\n    [isInputActive, props]\n  );\n\n  const wrapperRef = useRef(null);\n  const textRef = useRef(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const tab = useKeyPress(\"Tab\");\n  const enter = useKeyPress(\"Enter\");\n  const esc = useKeyPress(\"Escape\");\n\n  useEffect(() => {\n    setInputValue(text);\n  }, [text]);\n\n  // check to see if the user clicked outside of this component\n  useOnClickOutside(wrapperRef, () => {\n    if (isInputActive) {\n      onSetText(inputValue);\n      setIsInputActive(false);\n    }\n  });\n\n  // focus the cursor in the input field on edit start\n  useEffect(() => {\n    if (isInputActive && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isInputActive]);\n\n  useEffect(() => {\n    if (isInputActive) {\n      // if Enter or tab is pressed, save the text and case the editor\n      if (enter || tab) {\n        onSetText(inputValue);\n        setIsInputActive(false);\n      }\n      // if Escape is pressed, revert the text and close the editor\n      if (esc) {\n        setInputValue(props.text);\n        setIsInputActive(false);\n      }\n    }\n  }, [tab, enter, esc, isInputActive, onSetText, setIsInputActive, inputValue, props.text]); // watch for key presses\n\n  return (\n    <span className=\"inline-text\" ref={wrapperRef}>\n      <span\n        ref={textRef}\n        onClick={() => setIsInputActive(true)}\n        className={`inline-text_copy inline-text_copy--${!isInputActive ? \"active\" : \"hidden\"}`}\n      >\n        {props.text || placeholder}\n      </span>\n      <input\n        ref={inputRef}\n        style={{ textAlign, maxWidth: \"100%\" }}\n        value={inputValue}\n        onChange={(e) => {\n          setInputValue(e.target.value);\n        }}\n        className={`inline-text_input inline-text_input--${isInputActive ? \"active\" : \"hidden\"}`}\n      />\n    </span>\n  );\n};\n\nInlineEdit.defaultProps = {\n  text: \"\",\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onSetText: () => {},\n};\n","// From: https://usehooks.com/useOnClickOutside/\n\nimport { useEffect } from \"react\";\n\nexport function useOnClickOutside(ref: any, handler: any) {\n  useEffect(\n    () => {\n      const listener = (event: any) => {\n        // Do nothing if clicking ref's element or descendent elements\n\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n\n      document.addEventListener(\"touchstart\", listener);\n\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    },\n\n    // Add ref and handler to effect dependencies\n\n    // It's worth noting that because passed in handler is a new\n    // function on every render that will cause this effect\n    // callback/cleanup to run every render. It's not a big deal\n    // but to optimize you can wrap handler in useCallback before\n    // passing it into this hook.\n\n    [ref, handler]\n  );\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\n\nexport interface StatProps {\n  label: string;\n  color: string;\n  leftComponent: React.ReactNode;\n  rightComponent: React.ReactNode;\n}\n\nconst StatLabel = styled.div`\n  font-weight: 900;\n  font-size: 24px;\n`;\n\nconst StatContent = styled.div`\n  font-weight: 900;\n  font-size: 30px;\n`;\n\nconst TextContent = styled(StatContent)`\n  font-weight: 900;\n  font-size: 30px;\n`;\n\nconst OuterStat = styled.div`\n  display: grid;\n  grid-template-columns: 20% 60% 20%;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.4), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nconst Stat: React.FC<StatProps & Record<string, any>> = (props) => {\n  const { label, backgroundColor, color, leftComponent, rightComponent, children, ...rest } = props;\n  return (\n    <OuterStat>\n      <div\n        css={css`\n          width: 100%;\n          justify-self: start;\n        `}\n      >\n        {leftComponent}\n      </div>\n      <StatLabel>\n        {label}\n      </StatLabel>\n      <div\n        css={css`\n          width: 100%;\n          justify-self: end;\n          text-align: right;\n        `}\n      >\n        {rightComponent}\n      </div>\n    </OuterStat>\n  );\n};\n\nStat.defaultProps = {\n  color: \"black\",\n  backgroundColor: \"white\",\n};\n\nexport const NumberStat: React.FC<StatProps> = (props) => {\n  const { leftComponent, rightComponent, ...rest } = props;\n  return (\n    <Stat\n      leftComponent={<StatContent>{leftComponent}</StatContent>}\n      rightComponent={<StatContent>{rightComponent}</StatContent>}\n      {...rest}\n    />\n  );\n};\n\nexport const TextStat: React.FC<StatProps> = (props) => {\n  const { leftComponent, rightComponent, ...rest } = props;\n  return (\n    <Stat\n      leftComponent={<TextContent>{leftComponent}</TextContent>}\n      rightComponent={<TextContent>{rightComponent}</TextContent>}\n      {...rest}\n    />\n  );\n};\n","import { InlineEdit } from \"components/InlineEdit\";\nimport { NumberStat, TextStat } from \"components/Stat\";\nimport { useParam } from \"lib/hooks\";\nimport { STAT_DEFINITIONS } from \"lib/stats\";\nimport React from \"react\";\nimport { Theme } from \"styles/theme\";\n\ninterface ConnectedStatProps {\n  param1: string;\n  param2: string;\n  label: string;\n}\n\nconst ConnectedNumberStat: React.FC<ConnectedStatProps & Record<string, any>> = (props) => {\n  const { param1, param2, label, children, ...rest } = props;\n  const defaultValue = \"0\";\n  const [field1, setField1] = useParam(param1, defaultValue);\n  const [field2, setField2] = useParam(param2, defaultValue);\n  return (\n    <NumberStat\n      label={label}\n      color=\"white\"\n      leftComponent={<InlineEdit text={field1} onSetText={setField1} />}\n      rightComponent={<InlineEdit text={field2} textAlign=\"right\" onSetText={setField2} />}\n      {...rest}\n    />\n  );\n};\n\nconst ConnectedTextStat: React.FC<ConnectedStatProps & Theme & Record<string, any>> = (props) => {\n  const { param1, param2, label, primaryColor, children, ...rest } = props;\n  const defaultValue = \"-\";\n  const [field1, setField1] = useParam(param1, defaultValue);\n  const [field2, setField2] = useParam(param2, defaultValue);\n  return (\n    <TextStat\n      label={label}\n      color=\"white\"\n      leftComponent={<InlineEdit text={field1} onSetText={setField1} />}\n      rightComponent={<InlineEdit text={field2} textAlign=\"right\" onSetText={setField2} />}\n      {...rest}\n    />\n  );\n};\n\nexport const Statistic: React.FC<\n  {\n    statId: string;\n  } & Record<string, any>\n> = (props) => {\n  const { statId, theme, children, ...rest } = props;\n  const statInfo = STAT_DEFINITIONS.get(statId);\n  if (!statInfo) {\n    return null;\n  }\n\n  const { name, type } = statInfo;\n  const label = (name as string).toUpperCase();\n  if (type === \"number\") {\n    return <ConnectedNumberStat param1={`${statId}1`} param2={`${statId}2`} label={label} {...rest} />;\n  } else if (type === \"text\") {\n    return <ConnectedTextStat param1={`${statId}1`} param2={`${statId}2`} label={label} {...theme} {...rest} />;\n  }\n\n  return null;\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { reorder } from \"lib/util\";\nimport React from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Theme } from \"styles/theme\";\n\nimport { Divider } from \"./Divider\";\nimport { StatDisplayItem } from \"./StatDisplayItem\";\nimport { Statistic } from \"./Statistic\";\n\ninterface StatDisplayListProps {\n  stats: string;\n  setStats: (s: string) => void;\n}\n\nexport const StatDisplayList: React.FC<StatDisplayListProps> = (props) => {\n  const { stats, setStats } = props;\n  const [items, setItems] = React.useState<string[]>(stats.split(\",\"));\n  React.useEffect(() => {\n    setItems(stats.split(\",\"));\n  }, [stats]);\n\n  return (\n    <div\n      className=\"hud-container\"\n      css={css`\n      `}\n    >\n      <div\n        id=\"welcome-message\"\n        css={css`\n          margin-left: auto;\n          margin-right: auto;\n          width: 1200px;\n          height: 55px;\n\n          padding: 5px;\n\n          background-color: #09001e;\n          text-align: center;\n        `}\n      >\n        <p \n          css={css`\n            font-family: 'Lato', sans-serif;\n            font-weight: 900;\n            color: white;\n            text-align: center;\n            font-size: 25px;\n            margin-top: 6px;\n          `}\n        >\n          Welcome from Vancouver, BC!\n        </p>\n      </div>\n      <div \n        id=\"smarthud-logo\"\n        hidden={true}\n        css={css`\n          margin-left: auto;\n          margin-right: auto;\n          width: 1200px;\n          height: 55px;\n\n          padding: 5px;\n\n          background-color: #09001e;\n          text-align: center;\n        `}\n      >\n        <img \n          css={css`\n            margin-top: 6px;\n            max-height: 34px;\n          `}\n          src=\"SMART-HUD-LOGO.svg\" \n          alt=\"smartHUD\"\n        />\t\n      </div>\n      {items.map((item, index) => {\n        return (\n                <StatDisplayItem\n                  hasItem={Boolean(item)}\n                  key={index}\n                  hidden={true}\n                >\n                  <Statistic statId={item} />\n                </StatDisplayItem>\n        );\n      })}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useParam } from \"lib/hooks\";\nimport { PortColor } from \"lib/portColor\";\nimport React from \"react\";\nimport { Theme } from \"styles/theme\";\n\nimport { CharDisplay } from \"./CharDisplay\";\nimport { NameBlock } from \"./NameBlock\";\nimport { StatDisplayList } from \"./StatDisplay/StatDisplayList\";\n\nconst NameBlockContainer = styled.div<{\n  align: \"left\" | \"right\";\n}>`\n  ${(p) => `\n  width: 20%;\n  position: absolute;\n  ${p.align}: 0;\n  margin-${p.align}: 2rem;\n  bottom: 15%;\n  `}\n`;\n\nexport const RenderDisplay: React.FC = (theme) => {\n  const [leftColor] = useParam(\"leftColor\", PortColor.P1);\n  const [rightColor] = useParam(\"rightColor\", PortColor.P2);\n  const [stats, setStats] = useParam(\"stats\");\n\n  return (\n    <StatDisplayList stats={stats} setStats={setStats} />\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { ExternalLink as A } from \"components/ExternalLink\";\nimport { Header } from \"components/Header\";\nimport { FileListInput } from \"containers/FileListInput\";\nimport React from \"react\";\nimport { hasOpacity } from \"styles/opacity\";\nimport { GlobalTheme } from \"styles/theme\";\n\nimport { RenderDisplay } from \"../containers/RenderDisplay\";\n\nconst linkStyle = css`\n  display: block;\n  text-align: center;\n  text-decoration: none;\n  background: white;\n  padding: 1rem 0rem;\n  width: 100%;\n  font-weight: 700;\n  font-size: 2.3rem;\n  cursor: pointer;\n  ${hasOpacity(0.8)};\n`;\n\nconst MasterContainer = styled.div`\n  width: 1920px;\n  height: 1080px;\n  padding-top: 45px;\n  font-family: 'Lato', sans-serif;\n  font-weight: 900;\n  color: white;\n`;\n\nconst GameFrame = styled.div`\n  width: 1200px;\n  height: 990px;\n  border: 5px solid #09001e;\n  margin-left: auto;\n\tmargin-right: auto;\n`;\n\nconst ReplayControlsContainer = styled.div`\n  width: 850px;\n  margin: 150px auto;\n  padding-top: 25px;\n  padding-bottom: 25px;\n  background-color: #09001e40;\n`;\n\nconst ControlsTitle = styled.div`\n  font-family: 'Lato', sans-serif;\n  font-weight: 900;\n  color: black;\n  text-align: center;\n  font-size: 25px;\n`;\n\nexport const MainView: React.FC = () => {\n  return (\n    <div\n      css={css`\n        height: 100%;\n        width: 100%;\n      `}\n    >\n      <GlobalTheme />\n      <MasterContainer>\n        <GameFrame>\n          <ReplayControlsContainer>\n            <ControlsTitle>Upload Replay Files</ControlsTitle>\n            <FileListInput />\n          </ReplayControlsContainer>\n        </GameFrame>\n        <RenderDisplay />        \n      </MasterContainer>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const ExternalLink: React.FC<React.HTMLProps<HTMLAnchorElement>> = (props) => {\n  return (\n    <a target=\"_blank\" rel=\"noopener noreferrer\" {...props}>\n      {props.children}\n    </a>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Header = styled.h1`\n  text-transform: uppercase;\n  font-weight: 800;\n  font-size: 5.5rem;\n  margin: 2rem;\n  padding-bottom: 1rem;\n  position: relative;\n  text-align: center;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.2), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translateX(-50%);\n    bottom: 0;\n  }\n`;\n","/** @jsx jsx */\nimport { css, Global, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { ExternalLink as A } from \"components/ExternalLink\";\nimport { Header } from \"components/Header\";\nimport { Options } from \"containers/Options\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { RenderDisplay } from \"../containers/RenderDisplay\";\nimport poweredByImage from \"../styles/images/powered-by.png\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport interface RenderViewProps {\n  showSlippiLogo?: boolean;\n}\n\nexport const RenderView: React.FC<RenderViewProps> = ({ showSlippiLogo }) => {\n  const [primaryColor] = useParam(\"primaryColor\");\n  const [secondaryColor] = useParam(\"secondaryColor\");\n  return (\n    <div\n      css={css`\n        width: 1700px;\n        height: 980px;\n        margin: 0 auto;\n      `}\n    >\n      <Container>\n        <Link to=\"/\" title=\"Home\">\n          <Header>Post Match Stats</Header>\n        </Link>\n        <div\n          css={css`\n            margin-bottom: ${showSlippiLogo ? \"2rem\" : \"4rem\"};\n            & > a {\n              display: ${showSlippiLogo ? \"block\" : \"none\"};\n            }\n          `}\n        >\n          <A href=\"https://slippi.gg\">\n            <img\n              alt=\"Powered by Slippi\"\n              title=\"Open Slippi.gg homepage\"\n              src={poweredByImage}\n              css={css`\n                max-height: 5rem;\n              `}\n            />\n          </A>\n        </div>\n        <RenderDisplay />\n        <Settings />\n      </Container>\n    </div>\n  );\n};\n\nconst Settings: React.FC = () => {\n  return (\n    <React.Fragment>\n      <Global\n        styles={css`\n          body:hover .settings {\n            opacity: 1;\n          }\n          .settings {\n            opacity: 0;\n            transition: opacity 0.2s ease-in-out;\n          }\n        `}\n      />\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { hot } from \"react-hot-loader/root\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { RandomView } from \"views/RandomView\";\n\nimport { AppProvider } from \"./store\";\nimport { MainView } from \"./views/MainView\";\nimport { RenderView } from \"./views/RenderView\";\n\nconst App: React.FC = () => {\n  return (\n    <AppProvider>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Route exact path=\"/\" component={MainView} />\n        <Route path=\"/render\" component={RenderView} />\n        <Route path=\"/random\" component={RandomView} />\n      </Router>\n    </AppProvider>\n  );\n};\n\nexport default hot(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./index.scss\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import moment from \"moment\";\n\nexport function convertFrameCountToDurationString(frameCount: number): string {\n  // Enforce positive numbers only\n  const totalFrames = Math.max(frameCount, 0);\n  const duration = moment.duration(totalFrames / 60, \"seconds\");\n  return moment.utc(duration.as(\"milliseconds\")).format(\"m:ss\");\n}\n\nexport function reorder(list: any[], startIndex: number, endIndex: number) {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { hasOpacity } from \"styles/opacity\";\n\nexport const ControlsButton = styled.button`\n  width: 250px;\n  background-color: green;\n  padding: 10px;\n  margin: auto;\n  &:hover:enabled {\n    background-color: darkgreen;\n  }\n  &:active:enabled {\n    background-color: lightgreen;\n  }\n`;\n\nexport const ResetButton = styled.button`\n  width: 250px;\n  background-color: grey;\n  padding: 10px;\n  margin: auto;\n  &:hover:enabled {\n    background-color: darkgrey;\n  }\n  &:active:enabled {\n    background-color: lightgrey;\n  }\n`;\n\nexport const SecondaryButton: React.FC<Record<string, any>> = (props) => {\n  const { align, children, ...rest } = props;\n  const alignment = align || \"center\";\n  return (\n    <div\n      css={css`\n        user-select: none;\n        text-align: ${alignment};\n      `}\n    >\n      <span\n        css={css`\n          display: inline-block;\n          font-size: 1.4rem;\n          cursor: pointer;\n          margin: 0.5rem 0;\n          padding: 0 0.5rem;\n          ${hasOpacity(0.5)}\n          &:hover {\n            text-decoration: underline;\n          }\n        `}\n        {...rest}\n      >\n        {children}\n      </span>\n    </div>\n  );\n};\n","import { FrameEntryType, FramesType, GameEndType, GameStartType, MetadataType, StatsType } from \"@slippi/slippi-js\";\n\nexport enum Stat {\n  OPENINGS_PER_KILL = \"opk\",\n  DAMAGE_PER_OPENING = \"dpo\",\n  NEUTRAL_WINS = \"nw\",\n  KILL_MOVES = \"mckm\",\n  NEUTRAL_OPENER_MOVES = \"mcno\",\n  INPUTS_PER_MINUTE = \"ipm\",\n  AVG_KILL_PERCENT = \"akp\",\n  AVG_TIME_TO_KILL = \"attk\",\n  DAMAGE_DONE = \"tdd\",\n  EARLY_KILLS = \"ek\",\n  LATE_DEATHS = \"ld\",\n  SELF_DESTRUCTS = \"sd\",\n  HIGH_DAMAGE_PUNISHES = \"hdp\",\n  HIGH_DAMAGE_COMBOS = \"hdc\",\n\n  // Custom\n  FIRST_BLOOD = \"fb\",\n  L_CANCEL = \"lc\",\n}\n\nexport interface GameDetails {\n  filePath: string;\n  settings: GameStartType;\n  frames: FramesType;\n  stats: StatsType;\n  metadata: MetadataType;\n  latestFrame: FrameEntryType | null;\n  gameEnd: GameEndType | null;\n}\n\nexport interface StatCalculationResult {\n  result: any;\n  simple: any;\n}\n\nexport type StatCalculation = (games: GameDetails[], playerIndex: number) => StatCalculationResult;\n\nexport interface StatDefinition {\n  name: string;\n  type: string;\n  betterDirection?: string;\n  recommendedRounding?: number;\n  calculate: StatCalculation;\n}\n","export enum PortColor {\n  P1 = \"#f52e2e\",\n  P2 = \"#5463ff\",\n  P3 = \"#ffc717\",\n  P4 = \"#1f9e40\",\n}\n\nexport function getPortColor(portNumber: number): string {\n  switch (portNumber) {\n    case 1:\n      return PortColor.P1;\n    case 2:\n      return PortColor.P2;\n    case 3:\n      return PortColor.P3;\n    case 4:\n      return PortColor.P4;\n    default:\n      return PortColor.P1;\n  }\n}\n"],"sourceRoot":""}