{"version":3,"sources":["styles/images/obs.png","lib/stats/definitions/firstBlood.ts","lib/stats/definitions/lCancelAccuracy.ts","lib/stats/definitions/index.js","lib/stats/compute.ts","lib/stats/params.ts","lib/stats/filterGames.js","lib/readFile.ts","containers/StatOptions/index.tsx","styles/images/powered-by.png","containers/StatOptions/StatOptionItem.tsx","containers/StatOptions/StatOptionList.tsx","styles/opacity.ts","lib/util.ts","lib/portColor.ts","lib/demo.ts","styles/theme.tsx","lib/searchParams.ts","views/RandomView.tsx","store/reducers.ts","store/context.tsx","components/ExternalLink.tsx","components/Header.tsx","components/DropPad.tsx","components/ErrorMessage.tsx","lib/resources.ts","components/FileList/FileItem.tsx","components/FileList/index.tsx","containers/FileListInput.tsx","views/MainView.tsx","components/CopyToClipboard.tsx","components/OBSDragButton.tsx","lib/hooks/useParam.ts","lib/hooks/useKeyPress.ts","lib/hooks/useOnClickOutside.ts","components/ColorPicker/ColorPicker.tsx","components/ColorPicker/DualColorPicker.tsx","containers/Options/Panel.tsx","containers/Options/index.tsx","containers/CharDisplay.tsx","components/Block/Block.tsx","components/InlineEdit/index.tsx","components/Block/EditBlock.tsx","containers/NameBlock.tsx","components/HeadToHead.tsx","components/StageTimer.tsx","components/GameDisplay/GameResult.tsx","components/GameDisplay/index.tsx","containers/StatDisplay/Divider.tsx","containers/StatDisplay/StatDisplayItem.tsx","components/Stat.tsx","containers/StatDisplay/Statistic.tsx","containers/StatDisplay/StatDisplayList.tsx","containers/StatDisplay/index.tsx","lib/hooks/useGames.ts","containers/RenderDisplay.tsx","views/RenderView.tsx","App.tsx","serviceWorker.ts","index.tsx","components/Buttons.tsx","lib/stats/types.ts","lib/winner.ts"],"names":["module","exports","firstBlood","name","type","betterDirection","recommendedRounding","calculate","games","playerIndex","firstBloodStocks","map","game","i","deathStocks","stats","stocks","filter","stock","endPercent","firstStock","_","orderBy","opponentIndex","ratio","reduce","count","item","length","result","simple","text","isNaN","toFixed","this","number","ATTACK_ACTION_STATES","Map","getAttackAction","id","action","get","niceName","set","lCancelAccuracy","totalLCancels","frames","playerLCancels","successful","failed","playerFailedMoves","Object","keys","playerPostFrameUpdate","players","find","player","pre","post","playerAttack","actionStateId","lCancelStatus","push","getLCancels","tally","val","moveUtil","require","moves","openingsPerKill","genOverallRatioStat","damagePerOpening","neutralWins","killMoves","flatMap","conversions","conversionsForPlayer","conversion","isForPlayer","didKill","last","killMovesByMove","groupBy","killMoveCounts","move","first","moveId","getMoveName","shortName","getMoveShortName","orderedKillMoveCounts","topKillMove","simpleText","toUpperCase","neutralOpenerMoves","neutralMoves","isNeutralWin","openingType","neutralMovesByMove","neutralMoveCounts","orderedNeutralMoveCounts","topNeutralMove","earlyKills","oppStocks","isOpp","hasEndPercent","orderedOppStocks","earliestKillStock","take","lateDeaths","playerStocks","isPlayer","orderedPlayerStocks","latestDeathStock","selfDestructs","sdCounts","playerEndedStocks","oppKillConversions","sdSum","sum","inputsPerMinute","averageKillPercent","total","sumBy","genSimpleFromRatio","highDamagePunishes","punishes","getDamageDone","punish","startPercent","orderedPunishes","topPunish","damageDone","field","fixedNum","statRatios","overallStats","keyBy","avg","averageRatios","ratios","STAT_DEFINITIONS","computeStats","statsList","firstGame","orderIndices","settings","indices","chain","clone","reverse","value","statKey","def","output","results","iIndices","port","generateGameInfo","orderedGames","metadata","startAt","getResultForPlayer","gameEnd","gameEndMethod","lrasInitiatorIndex","latestFrame","findWinner","playerInfoGen","characterName","characterId","characterUtil","getCharacterName","characterColor","getCharacterColorName","nametag","gameResult","generatePlayerInfo","stage","stageId","stageUtil","getStageName","startTime","duration","convertFrameCountToDurationString","lastFrame","Stat","OPENINGS_PER_KILL","DAMAGE_PER_OPENING","NEUTRAL_WINS","KILL_MOVES","NEUTRAL_OPENER_MOVES","FIRST_BLOOD","L_CANCEL","EARLY_KILLS","LATE_DEATHS","SELF_DESTRUCTS","INPUTS_PER_MINUTE","AVG_KILL_PERCENT","HIGH_DAMAGE_PUNISHES","DAMAGE_DONE","extractNameAndCode","playerPort","details","index","playerTag","netplayName","generateStatParams","gameDetails","filtered","gamesByIsSingles","nonSinglesGames","some","console","log","forEach","filePath","singlesGames","gamesByPorts","ports","join","gamesWithSamePorts","shift","flatGames","flatten","isEmpty","Error","filterGames","summary","generateOutput","err","error","params","lastGame","leftPlayer","rightPlayer","leftColor","getPortColor","rightColor","char1","char2","color1","color2","lastGameDetails","leftTag","leftCode","rightTag","rightCode","name1","name2","sub1","sub2","gt","gameKey","gameDuration","playerInfo","p","gameValue","s","readFileAsGameDetails","file","a","readFileAsSlippiGame","generateGameDetails","readFileAsArrayBuffer","data","arr","Int8Array","buf","Buffer","from","SlippiGame","getSettings","getFrames","getStats","getMetadata","getLatestFrame","getGameEnd","Promise","resolve","reject","fr","FileReader","onabort","onerror","readAsBinaryString","addEventListener","string","resultString","Uint8Array","charCodeAt","buffer","readAsArrayBuffer","StatOptions","props","css","onChange","backgroundColor","color","onClick","onClose","hideReset","onReset","Outer","styled","div","checked","isDragging","StatOptionItem","stat","toggle","draggableId","provided","snapshot","draggableProps","ref","innerRef","className","dragHandleProps","xmlns","width","height","viewBox","d","fill","StatOptionList","statOptions","onDragEnd","destination","source","droppableId","newArray","reorder","droppableProps","option","key","statId","enabled","optionIndex","findIndex","o","newOptions","Array","placeholder","hasOpacity","initial","final","transition","frameCount","totalFrames","Math","max","moment","utc","as","format","list","startIndex","endIndex","splice","removed","PortColor","portNumber","P1","P2","P3","P4","LEGAL_STAGE_IDS","Stage","FOUNTAIN_OF_DREAMS","POKEMON_STADIUM","YOSHIS_STORY","DREAMLAND","BATTLEFIELD","FINAL_DESTINATION","getRandomArbitrary","min","random","getRandomInt","ceil","floor","generateDemoValues","paramMap","generateRandomCharacter","totalGames","sampleSize","leftWillWin","playerInfos","stageIndex","generateRandomStageId","generateRandomDuration","generateRandomGame","demoStats","Boolean","generateRandomMove","toString","generateRandomStat","charId","charInfo","getCharacterInfo","colorIndex","colors","defaultTheme","primaryColor","secondaryColor","GlobalTheme","styles","generateSearchParams","restoredParams","res","localStorage","getItem","getStoredValues","URLSearchParams","Types","RandomView","search","to","pathname","initialState","files","AppContext","createContext","state","dispatch","mainReducer","SET_DETAILS","payload","filename","fileToReplace","f","loading","SET_ERROR","ADD_FILES","currentFiles","newFiles","existingFile","REMOVE_FILE","CLEAR_ALL","reducer","AppProvider","children","useReducer","Provider","ExternalLink","target","rel","Header","h1","Container","isDragAccept","isDragActive","getColor","DropPad","useDropzone","getRootProps","getInputProps","isDragReject","ErrorMessage","sanitize","replacement","toLowerCase","replace","getCharacterFolderFromId","character","charFolder","colorFolder","process","getCharacterFolderFromName","getCharacterPortrait","folder","BasicFileItem","onRemove","title","CharacterIcon","winner","src","getCharacterStockIcon","style","alt","FileItem","message","stageName","frame","winnerIndex","icons","FileList","ALL_STATS","DEFAULT_STATS","getDefaultStats","current","validateStatOptions","newItems","currentItems","c","includes","FileListInput","buttonColor","history","useHistory","useContext","React","useState","setError","showOptions","setShowOptions","defaultStats","statsModified","restoredStatsString","JSON","stringify","parse","setStatOptions","onStatOptionChange","options","setItem","onDrop","useCallback","acceptedFiles","Date","getTime","promises","all","then","time","finishedProcessing","buttonText","accept","disabled","generateStatsList","linkStyle","MainView","href","CopyToClipboard","copied","setCopied","timeoutMs","onCopyTimeoutMs","copyText","onCopyText","onCopy","setTimeout","DraggableLink","OBSDragButton","wrapperRef","useRef","location","window","entries","generateLink","onDragStart","e","img","Image","obsImage","dataTransfer","setDragImage","setData","handleDragStart","blur","handleDragEnd","preventDefault","marginRight","useParam","defaultValue","setValue","useLocation","useEffect","currentValue","setParam","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","removeEventListener","useOnClickOutside","handler","listener","event","contains","document","ColorSquare","size","ResetButton","ColorPicker","defaultColor","show","setShow","showReset","position","hex","ColorContainer","ColorLabel","DualColorPicker","defaultLeftColor","defaultRightColor","leftLabel","rightLabel","onLeftColorChange","onRightColorChange","DualColorPanel","panelLabel","leftColorParam","leftDefault","rightColorParam","rightDefault","existingLeftColor","existingRightColor","setLeftColor","setRightColor","Panel","Content","Column","Heading","h2","Options","open","setOpen","charName1","getCharacterShortName","charName2","obsLayerName","outerRef","RIGHT_CHAR_ALIGNMENT","Character","BOWSER","SHEIK","ROY","CharDisplay","colorParam","charParam","align","theme","char","facing","imgSrc","side","getCharacterVSScreen","alignment","defaultAlignment","customCharAlign","getAlignment","Block","InlineEdit","onSetText","textAlign","isInputActive","_setIsInputActive","inputValue","setInputValue","setIsInputActive","isActive","onFocus","onBlur","textRef","inputRef","tab","enter","esc","focus","maxWidth","defaultProps","OptionalBlock","OptionalEditBlock","onEdit","focused","setFocused","Name","Subtitle","NameBlock","nameParam","subtitleParam","setName","sub","setSub","borderColor","BaseHeadImage","HeadImage","invWaypoint","waypoint","dim","imageSrc","HeadToHead","result1","result2","p1","p2","Text","span","StageTimer","stageIcon","getStageIcon","switchResult","GameResult","gameInfo","onGameInfoChange","gameWinner","highlight","winningSide","rest","GameDisplay","info","updateGameInfo","Divider","StatDisplayItem","hasItem","isDraggingOver","StatLabel","StatContent","TextContent","OuterStat","label","leftComponent","rightComponent","NumberStat","TextStat","ConnectedNumberStat","param1","param2","field1","setField1","field2","setField2","ConnectedTextStat","Statistic","statInfo","StatDisplayList","setStats","split","items","setItems","updateStats","statIds","dropProvided","dropSnapshot","dragProvided","dragSnapshot","additionalStyles","ScoreBlock","StatDisplay","setGames","left","right","score","setScore","parseInt","char1Score","char2Score","gameInfos","gameInfoString","setGame","gameNumber","currentGameData","newValues","assign","infoString","useGames","NameBlockContainer","RenderDisplay","RenderView","poweredByImage","hot","basename","exact","path","component","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","PrimaryButton","button","SecondaryButton","b","stocksRemaining","percent"],"mappings":"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","file":"static/js/main.bbf197c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/obs.f3f8c219.png\";","import _ from \"lodash\";\n\nimport { StatDefinition } from \"../types\";\n\nexport const firstBlood: StatDefinition = {\n  name: \"First Blood\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    // For each game return either the first blood stock if taken or null if lost\n    const firstBloodStocks = games.map((game, i) => {\n      const deathStocks = game.stats.stocks.filter((stock) => {\n        const hasEndPercent = stock.endPercent !== null;\n        return hasEndPercent;\n      });\n      const orderedDeathStocks = _.orderBy(deathStocks, [\"endFrame\"], [\"asc\"]);\n      const firstStock = orderedDeathStocks[0];\n      if (!firstStock || firstStock.opponentIndex !== playerIndex) {\n        // console.log(`player ${playerIndex} did not draw first blood in game ${i + 1}`);\n        return null;\n      }\n      return firstStock;\n    });\n    const firstBloodCount = firstBloodStocks.reduce((count, item) => (item !== null ? count + 1 : count), 0);\n    const ratio = firstBloodCount / firstBloodStocks.length;\n\n    const simple = {\n      text: isNaN(ratio) ? \"N/A\" : `${(ratio * 100).toFixed(this.recommendedRounding)}%`,\n      number: ratio,\n    };\n\n    return {\n      result: firstBloodStocks,\n      simple,\n    };\n  },\n};\n","import { FramesType } from \"@slippi/slippi-js\";\n\nimport { StatDefinition } from \"../types\";\n\n/**\n * Based on pdiot's L Cancel calculation code from here:\n *\n * https://github.com/pdiot/Slippi-Electron/blob/354f1dd73092cf844df76501936c3dceb4165328/slippi-stats-workerfile.js\n */\n\nfunction getLCancels(frames: FramesType, playerIndex: number) {\n  const playerLCancels = { successful: 0, failed: 0 };\n  const playerFailedMoves = [];\n  for (const frameNumber of Object.keys(frames)) {\n    const frameKey = +frameNumber;\n    const playerPostFrameUpdate = (frames[frameKey].players as any[]).find(\n      (player) => player.pre.playerIndex === playerIndex\n    ).post;\n    const playerAttack = getAttackAction(playerPostFrameUpdate.actionStateId);\n\n    if (playerAttack) {\n      if (playerPostFrameUpdate.lCancelStatus === 1) {\n        playerLCancels.successful++;\n      } else if (playerPostFrameUpdate.lCancelStatus === 2) {\n        playerLCancels.failed++;\n        playerFailedMoves.push(playerAttack);\n      }\n    }\n  }\n  const ratio = playerLCancels.successful / (playerLCancels.successful + playerLCancels.failed);\n  const returnValue = {\n    ...playerLCancels,\n    ratio,\n  };\n  return returnValue;\n}\n\nconst ATTACK_ACTION_STATES = new Map<\n  number,\n  {\n    id: number;\n    name: string;\n    niceName: string;\n  }\n>();\n\nATTACK_ACTION_STATES.set(44, { id: 44, name: \"Attack11\", niceName: \"Jab 1\" });\nATTACK_ACTION_STATES.set(45, { id: 45, name: \"Attack12\", niceName: \"Jab 2\" });\nATTACK_ACTION_STATES.set(46, { id: 46, name: \"Attack13\", niceName: \"Jab 3\" });\nATTACK_ACTION_STATES.set(47, { id: 47, name: \"Attack100Start\", niceName: \"Rapid jab\" });\nATTACK_ACTION_STATES.set(48, { id: 48, name: \"Attack100Loop\", niceName: \"Rapid jab\" });\nATTACK_ACTION_STATES.set(49, { id: 49, name: \"Attack100End\", niceName: \"Rapid jab\" });\nATTACK_ACTION_STATES.set(50, { id: 50, name: \"AttackDash\", niceName: \"Dash attack\" });\nATTACK_ACTION_STATES.set(51, { id: 51, name: \"AttackS3Hi\", niceName: \"Forward tilt\" });\nATTACK_ACTION_STATES.set(52, { id: 52, name: \"AttackS3HiS\", niceName: \"Forward tilt\" });\nATTACK_ACTION_STATES.set(53, { id: 53, name: \"AttackS3S\", niceName: \"Forward tilt\" });\nATTACK_ACTION_STATES.set(54, { id: 54, name: \"AttackS3LwS\", niceName: \"Forward tilt\" });\nATTACK_ACTION_STATES.set(55, { id: 55, name: \"AttackS3Lw\", niceName: \"Forward tilt\" });\nATTACK_ACTION_STATES.set(56, { id: 56, name: \"AttackHi3\", niceName: \"Up tilt\" });\nATTACK_ACTION_STATES.set(57, { id: 57, name: \"AttackLw3\", niceName: \"Down tilt\" });\nATTACK_ACTION_STATES.set(58, { id: 58, name: \"AttackS4Hi\", niceName: \"Forward smash\" });\nATTACK_ACTION_STATES.set(59, { id: 59, name: \"AttackS4HiS\", niceName: \"Forward smash\" });\nATTACK_ACTION_STATES.set(60, { id: 60, name: \"AttackS4S\", niceName: \"Forward smash\" });\nATTACK_ACTION_STATES.set(61, { id: 61, name: \"AttackS4LwS\", niceName: \"Forward smash\" });\nATTACK_ACTION_STATES.set(62, { id: 62, name: \"AttackS4Lw\", niceName: \"Forward smash\" });\nATTACK_ACTION_STATES.set(63, { id: 63, name: \"AttackHi4\", niceName: \"Up smash\" });\nATTACK_ACTION_STATES.set(64, { id: 64, name: \"AttackLw4\", niceName: \"Down smash\" });\nATTACK_ACTION_STATES.set(65, { id: 65, name: \"AttackAirN\", niceName: \"Neutral air\" });\nATTACK_ACTION_STATES.set(66, { id: 66, name: \"AttackAirF\", niceName: \"Forward air\" });\nATTACK_ACTION_STATES.set(67, { id: 67, name: \"AttackAirB\", niceName: \"Back air\" });\nATTACK_ACTION_STATES.set(68, { id: 68, name: \"AttackAirHi\", niceName: \"Up air\" });\nATTACK_ACTION_STATES.set(69, { id: 69, name: \"AttackAirLw\", niceName: \"Down air\" });\nATTACK_ACTION_STATES.set(70, { id: 70, name: \"LandingAirN\", niceName: \"Nair landing\" });\nATTACK_ACTION_STATES.set(71, { id: 71, name: \"LandingAirF\", niceName: \"Fair landing\" });\nATTACK_ACTION_STATES.set(72, { id: 72, name: \"LandingAirB\", niceName: \"Bair landing\" });\nATTACK_ACTION_STATES.set(73, { id: 73, name: \"LandingAirHi\", niceName: \"Uair landing\" });\nATTACK_ACTION_STATES.set(74, { id: 74, name: \"LandingAirLw\", niceName: \"Dair landing\" });\nATTACK_ACTION_STATES.set(212, { id: 212, name: \"Catch\", niceName: \"Grab\" });\nATTACK_ACTION_STATES.set(214, { id: 214, name: \"CatchDash\", niceName: \"Dash grab\" });\n\nfunction getAttackAction(id: number) {\n  const action = ATTACK_ACTION_STATES.get(id);\n  if (action) {\n    return action.niceName;\n  } else {\n    return null;\n  }\n}\n\nexport const lCancelAccuracy: StatDefinition = {\n  name: \"L-Cancel Accuracy\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    const lCancelsPerGame = games.map((game) => {\n      const frames = game.frames;\n      const gameLCancels = getLCancels(frames, playerIndex);\n      return gameLCancels;\n    });\n\n    const totalLCancels = lCancelsPerGame.reduce(\n      (tally, val) => ({\n        successful: tally.successful + val.successful,\n        failed: tally.failed + val.failed,\n      }),\n      { successful: 0, failed: 0 }\n    );\n    const ratio = totalLCancels.successful / (totalLCancels.successful + totalLCancels.failed);\n\n    return {\n      result: totalLCancels,\n      simple: {\n        text: isNaN(ratio) ? \"N/A\" : `${(ratio * 100).toFixed(this.recommendedRounding)}%`,\n        number: ratio,\n      },\n    };\n  },\n};\n","/* eslint-disable */\n\n/*\n * Taken from: https://github.com/project-slippi/slippi-set-stats/blob/master/main.js\n */\n\nconst { moves: moveUtil } = require(\"@slippi/slippi-js\");\nconst _ = require(\"lodash\");\n\nexport * from \"./firstBlood\";\nexport * from \"./lCancelAccuracy\";\n\nexport const openingsPerKill = {\n  name: \"Openings / Kill\",\n  type: \"number\",\n  betterDirection: \"lower\",\n  recommendedRounding: 1,\n  calculate(games, playerIndex) {\n    return genOverallRatioStat(games, playerIndex, \"openingsPerKill\", this.recommendedRounding);\n  },\n};\n\nexport const damagePerOpening = {\n  name: \"Damage / Opening\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 1,\n  calculate(games, playerIndex) {\n    return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", this.recommendedRounding);\n  },\n};\n\nexport const neutralWins = {\n  name: \"Neutral Wins\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    return genOverallRatioStat(games, playerIndex, \"neutralWinRatio\", this.recommendedRounding, \"count\");\n  },\n};\n\nexport const killMoves = {\n  name: \"Most Common Kill Move\",\n  type: \"text\",\n  calculate(games, playerIndex) {\n    const killMoves = _.flatMap(games, (game) => {\n      const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n      const conversionsForPlayer = _.filter(conversions, (conversion) => {\n        const isForPlayer = conversion.playerIndex === playerIndex;\n        const didKill = conversion.didKill;\n        return isForPlayer && didKill;\n      });\n\n      return _.map(conversionsForPlayer, (conversion) => {\n        return _.last(conversion.moves);\n      });\n    });\n\n    const killMovesByMove = _.groupBy(killMoves, \"moveId\");\n    const killMoveCounts = _.map(killMovesByMove, (moves) => {\n      const move = _.first(moves);\n      return {\n        count: moves.length,\n        id: move.moveId,\n        name: moveUtil.getMoveName(move.moveId),\n        shortName: moveUtil.getMoveShortName(move.moveId),\n      };\n    });\n\n    const orderedKillMoveCounts = _.orderBy(killMoveCounts, [\"count\"], [\"desc\"]);\n    const topKillMove = _.first(orderedKillMoveCounts);\n    let simpleText = \"N/A\";\n    if (topKillMove) {\n      simpleText = `${topKillMove.shortName} - ${topKillMove.count}`;\n    }\n\n    return {\n      result: orderedKillMoveCounts,\n      simple: {\n        text: simpleText.toUpperCase(),\n      },\n    };\n  },\n};\n\nexport const neutralOpenerMoves = {\n  name: \"Most Common Neutral Opener\",\n  type: \"text\",\n  calculate(games, playerIndex) {\n    const neutralMoves = _.flatMap(games, (game) => {\n      const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n      const conversionsForPlayer = _.filter(conversions, (conversion) => {\n        const isForPlayer = conversion.playerIndex === playerIndex;\n        const isNeutralWin = conversion.openingType === \"neutral-win\";\n        return isForPlayer && isNeutralWin;\n      });\n\n      return _.map(conversionsForPlayer, (conversion) => {\n        return _.first(conversion.moves);\n      });\n    });\n\n    // TODO: This following code is repeated from kill move code, put in function\n\n    const neutralMovesByMove = _.groupBy(neutralMoves, \"moveId\");\n    const neutralMoveCounts = _.map(neutralMovesByMove, (moves) => {\n      const move = _.first(moves);\n      return {\n        count: moves.length,\n        id: move.moveId,\n        name: moveUtil.getMoveName(move.moveId),\n        shortName: moveUtil.getMoveShortName(move.moveId),\n      };\n    });\n\n    const orderedNeutralMoveCounts = _.orderBy(neutralMoveCounts, [\"count\"], [\"desc\"]);\n    const topNeutralMove = _.first(orderedNeutralMoveCounts);\n    let simpleText = \"N/A\";\n    if (topNeutralMove) {\n      simpleText = `${topNeutralMove.shortName} - ${topNeutralMove.count}`;\n    }\n\n    return {\n      result: orderedNeutralMoveCounts,\n      simple: {\n        text: simpleText.toUpperCase(),\n      },\n    };\n  },\n};\n\nexport const earlyKills = {\n  name: \"Earliest Kill\",\n  type: \"number\",\n  betterDirection: \"lower\",\n  recommendedRounding: 1,\n  calculate(games, playerIndex) {\n    const oppStocks = _.flatMap(games, (game) => {\n      const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n      return _.filter(stocks, (stock) => {\n        const isOpp = stock.playerIndex !== playerIndex;\n        const hasEndPercent = stock.endPercent !== null;\n        return isOpp && hasEndPercent;\n      });\n    });\n\n    const orderedOppStocks = _.orderBy(oppStocks, [\"endPercent\"], [\"asc\"]);\n    const earliestKillStock = _.first(orderedOppStocks);\n    const simple = {\n      text: \"N/A\",\n      number: null,\n    };\n\n    if (earliestKillStock) {\n      simple.number = earliestKillStock.endPercent;\n      simple.text = simple.number.toFixed(this.recommendedRounding);\n    }\n\n    return {\n      result: _.take(orderedOppStocks, 5),\n      simple: simple,\n    };\n  },\n};\n\nexport const lateDeaths = {\n  name: \"Latest Death\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    const playerStocks = _.flatMap(games, (game) => {\n      const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n      return _.filter(stocks, (stock) => {\n        const isPlayer = stock.playerIndex === playerIndex;\n        const hasEndPercent = stock.endPercent !== null;\n        return isPlayer && hasEndPercent;\n      });\n    });\n\n    const orderedPlayerStocks = _.orderBy(playerStocks, [\"endPercent\"], [\"desc\"]);\n    const latestDeathStock = _.first(orderedPlayerStocks);\n    const simple = {\n      text: \"N/A\",\n      number: null,\n    };\n\n    if (latestDeathStock) {\n      simple.number = latestDeathStock.endPercent;\n      simple.text = simple.number.toFixed(this.recommendedRounding);\n    }\n\n    return {\n      result: _.take(orderedPlayerStocks, 5),\n      simple: simple,\n    };\n  },\n};\n\nexport const selfDestructs = {\n  // Only show this one if greater than 2 for one player\n  name: \"Total Self-Destructs\",\n  type: \"number\",\n  betterDirection: \"lower\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    const sdCounts = _.map(games, (game) => {\n      const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n      const playerEndedStocks = _.filter(stocks, (stock) => {\n        const isPlayer = stock.playerIndex === playerIndex;\n        const hasEndPercent = stock.endPercent !== null;\n        return isPlayer && hasEndPercent;\n      });\n\n      const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n      const oppKillConversions = _.filter(conversions, (conversion) => {\n        const isOpp = conversion.playerIndex !== playerIndex;\n        const didKill = conversion.didKill;\n        return isOpp && didKill;\n      });\n\n      return playerEndedStocks.length - oppKillConversions.length;\n    });\n\n    const sdSum = _.sum(sdCounts);\n\n    return {\n      result: sdSum,\n      simple: {\n        number: sdSum,\n        text: `${sdSum}`,\n      },\n    };\n  },\n};\n\nexport const inputsPerMinute = {\n  name: \"Inputs / Minute\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    return genOverallRatioStat(games, playerIndex, \"inputsPerMinute\", this.recommendedRounding);\n  },\n};\n\nexport const averageKillPercent = {\n  name: \"Average Kill Percent\",\n  type: \"number\",\n  betterDirection: \"lower\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    const oppStocks = _.flatMap(games, (game) => {\n      const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n      return _.filter(stocks, (stock) => {\n        const isOpp = stock.playerIndex !== playerIndex;\n        const hasEndPercent = stock.endPercent !== null;\n        return isOpp && hasEndPercent;\n      });\n    });\n\n    const result = {\n      total: oppStocks.length,\n      count: _.sumBy(oppStocks, \"endPercent\") || 0,\n    };\n\n    result.ratio = result.total ? result.count / result.total : null;\n\n    return {\n      result: result,\n      simple: genSimpleFromRatio(result, this.recommendedRounding),\n    };\n  },\n};\n\nexport const highDamagePunishes = {\n  name: \"Highest Damage Punish\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 1,\n  calculate(games, playerIndex) {\n    const punishes = _.flatMap(games, (game) => {\n      const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n      return _.filter(conversions, (conversion) => {\n        const isForPlayer = conversion.playerIndex === playerIndex;\n        const hasEndPercent = conversion.endPercent !== null;\n        return isForPlayer && hasEndPercent;\n      });\n    });\n\n    const getDamageDone = (punish) => punish.endPercent - punish.startPercent;\n    const orderedPunishes = _.orderBy(punishes, [getDamageDone], \"desc\");\n    const topPunish = _.first(orderedPunishes);\n    const simple = {\n      text: \"N/A\",\n      number: null,\n    };\n\n    if (topPunish) {\n      simple.number = getDamageDone(topPunish);\n      simple.text = simple.number.toFixed(this.recommendedRounding);\n    }\n\n    return {\n      result: _.take(orderedPunishes, 5),\n      simple: simple,\n    };\n  },\n};\n\nexport const damageDone = {\n  name: \"Total Damage Done\",\n  type: \"number\",\n  betterDirection: \"higher\",\n  recommendedRounding: 0,\n  calculate(games, playerIndex) {\n    return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", this.recommendedRounding, \"count\");\n  },\n};\n\nfunction genOverallRatioStat(games, playerIndex, field, fixedNum, type = \"ratio\") {\n  const statRatios = _.map(games, (game) => {\n    const overallStats = _.get(game, [\"stats\", \"overall\"]);\n    const overallStatsByPlayer = _.keyBy(overallStats, \"playerIndex\");\n    const overallStatsForPlayer = overallStatsByPlayer[playerIndex];\n    return overallStatsForPlayer[field];\n  });\n\n  const avg = averageRatios(statRatios);\n  const simple = genSimpleFromRatio(avg, fixedNum, type);\n\n  return {\n    result: avg,\n    simple: simple,\n  };\n}\n\nfunction averageRatios(ratios) {\n  const result = {};\n\n  result.count = _.sumBy(ratios, \"count\") || 0;\n  result.total = _.sumBy(ratios, \"total\") || 0;\n  result.ratio = result.total ? result.count / result.total : null;\n\n  return result;\n}\n\nfunction genSimpleFromRatio(ratio, fixedNum, type = \"ratio\") {\n  const result = {};\n\n  switch (type) {\n    case \"ratio\":\n      result.number = ratio.ratio;\n      result.text = ratio.ratio !== null ? ratio.ratio.toFixed(fixedNum) : \"N/A\";\n      break;\n    case \"count\":\n      result.number = ratio.count;\n      result.text = ratio.count.toFixed(fixedNum);\n      break;\n  }\n\n  return result;\n}\n","/*\n * Based on: https://github.com/project-slippi/slippi-set-stats/blob/master/main.js\n */\n\nimport { characters as characterUtil, stages as stageUtil } from \"@slippi/slippi-js\";\nimport { PlayerType } from \"@slippi/slippi-js\";\nimport _ from \"lodash\";\n\nimport { convertFrameCountToDurationString } from \"../util\";\nimport { findWinner } from \"../winner\";\nimport {\n  averageKillPercent,\n  damageDone,\n  damagePerOpening,\n  earlyKills,\n  firstBlood,\n  highDamagePunishes,\n  inputsPerMinute,\n  killMoves,\n  lateDeaths,\n  lCancelAccuracy,\n  neutralOpenerMoves,\n  neutralWins,\n  openingsPerKill,\n  selfDestructs,\n} from \"./definitions\";\nimport { GameDetails, Stat, StatDefinition } from \"./types\";\n\nexport const STAT_DEFINITIONS = new Map<string, StatDefinition>();\nSTAT_DEFINITIONS.set(Stat.OPENINGS_PER_KILL, openingsPerKill);\nSTAT_DEFINITIONS.set(Stat.DAMAGE_PER_OPENING, damagePerOpening);\nSTAT_DEFINITIONS.set(Stat.NEUTRAL_WINS, neutralWins);\nSTAT_DEFINITIONS.set(Stat.KILL_MOVES, killMoves);\nSTAT_DEFINITIONS.set(Stat.NEUTRAL_OPENER_MOVES, neutralOpenerMoves);\nSTAT_DEFINITIONS.set(Stat.FIRST_BLOOD, firstBlood);\nSTAT_DEFINITIONS.set(Stat.L_CANCEL, lCancelAccuracy);\nSTAT_DEFINITIONS.set(Stat.EARLY_KILLS, earlyKills);\nSTAT_DEFINITIONS.set(Stat.LATE_DEATHS, lateDeaths);\nSTAT_DEFINITIONS.set(Stat.SELF_DESTRUCTS, selfDestructs);\nSTAT_DEFINITIONS.set(Stat.INPUTS_PER_MINUTE, inputsPerMinute);\nSTAT_DEFINITIONS.set(Stat.AVG_KILL_PERCENT, averageKillPercent);\nSTAT_DEFINITIONS.set(Stat.HIGH_DAMAGE_PUNISHES, highDamagePunishes);\nSTAT_DEFINITIONS.set(Stat.DAMAGE_DONE, damageDone);\n\nfunction computeStats(statsList: string[], games: GameDetails[]) {\n  const firstGame = _.first(games);\n  if (!firstGame) {\n    return [];\n  }\n\n  // console.log(firstGame);\n  const orderIndices = _.map(firstGame.settings.players, \"playerIndex\");\n  const reversedIndices = _.chain(orderIndices).clone().reverse().value();\n  const indices = [orderIndices, reversedIndices];\n\n  const statResults = statsList.map((statKey) => {\n    const def = STAT_DEFINITIONS.get(statKey);\n    if (!def || !def.calculate) {\n      return null;\n    }\n\n    const { calculate, ...output } = def;\n    const results = _.map(indices, (iIndices) => {\n      const result: any = def.calculate(games, iIndices[0] /*, iIndices[1]*/);\n      result.port = iIndices[0] + 1;\n      return result;\n    });\n\n    return {\n      ...output,\n      id: statKey,\n      results,\n    };\n  });\n\n  return statResults;\n}\n\nfunction generateGameInfo(games: GameDetails[]) {\n  const getStartAt = (game: GameDetails) => game.metadata.startAt;\n  const orderedGames = _.orderBy(games, [getStartAt], [\"asc\"]);\n\n  const getResultForPlayer = (game: GameDetails, playerIndex: number): \"winner\" | \"loser\" | \"unknown\" => {\n    const gameEnd = game.gameEnd;\n    if (gameEnd) {\n      // Handle LRAS\n      switch (gameEnd.gameEndMethod) {\n        case 7:\n          return gameEnd.lrasInitiatorIndex === playerIndex ? \"loser\" : \"winner\";\n      }\n    }\n\n    const latestFrame = game.latestFrame;\n    if (!latestFrame) {\n      return \"unknown\";\n    }\n    const winner = findWinner(latestFrame);\n    return winner === playerIndex ? \"winner\" : \"loser\";\n  };\n\n  const generatePlayerInfo = (game: GameDetails) => (player: PlayerType) => {\n    // console.log(player);\n    const characterName = player.characterId ? characterUtil.getCharacterName(player.characterId) : \"\";\n    const characterColor =\n      player.characterId && player.characterColor\n        ? characterUtil.getCharacterColorName(player.characterId, player.characterColor)\n        : \"\";\n\n    return {\n      port: player.port,\n      characterId: player.characterId,\n      // characterColor: player.characterColor,\n      nametag: player.nametag,\n      characterName,\n      characterColor,\n      gameResult: getResultForPlayer(game, player.playerIndex),\n    };\n  };\n\n  return _.map(orderedGames, (game: GameDetails) => {\n    const playerInfoGen = generatePlayerInfo(game);\n\n    return {\n      stage: {\n        id: game.settings.stageId,\n        name: game.settings.stageId ? stageUtil.getStageName(game.settings.stageId) : \"\",\n      },\n      players: _.map(game.settings.players, playerInfoGen),\n      startTime: game.metadata.startAt,\n      duration: convertFrameCountToDurationString(game.stats.lastFrame),\n    };\n  });\n}\n\nexport function generateOutput(statsList: string[], games: GameDetails[]) {\n  return {\n    games: generateGameInfo(games),\n    summary: computeStats(statsList, games),\n  };\n}\n","import { get } from \"lodash\";\n\nimport { getPortColor } from \"../portColor\";\nimport { generateOutput } from \"./compute\";\nimport { filterGames } from \"./filterGames\";\nimport { GameDetails } from \"./types\";\n\nconst extractNameAndCode = (playerPort: number, details: GameDetails) => {\n  const settings = details.settings;\n  const metadata = details.metadata;\n  const index = playerPort - 1;\n  const player = settings.players.find((player) => player.playerIndex === index);\n  const playerTag = player ? player.nametag : null;\n  const netplayName: string | null = get(metadata, [\"players\", index, \"names\", \"netplay\"], null);\n  const netplayCode: string | null = get(metadata, [\"players\", index, \"names\", \"code\"], null);\n  const name = playerTag || netplayName || \"\";\n  return [name, netplayCode || \"\"] as const;\n};\n\nexport function generateStatParams(gameDetails: GameDetails[], statsList: string[]): Record<string, any> {\n  const filtered = filterGames(gameDetails);\n  if (!filtered || filtered.length === 0) {\n    throw new Error(\"No valid games\");\n  }\n\n  let stats;\n  try {\n    stats = generateOutput(statsList, filtered);\n  } catch (err) {\n    console.error(err);\n    throw new Error(err);\n  }\n\n  const { games, summary } = stats;\n  console.log(\"generated stats: \", stats);\n  const params: Record<string, any> = {}; // \"mckm1\": , \"mckm2\", \"mcno1\", \"mcno2\", \"opk1\", \"opk2\", \"tdd1\", \"tdd2\", \"dpo1\", \"dpo2\", \"ipm1\", \"ipm2\", \"akp1\", \"akp2\", \"nw1\", \"nw2\"};\n\n  // Set character info\n  const lastGame = games[games.length - 1];\n  const leftPlayer = lastGame.players[0];\n  const rightPlayer = lastGame.players[1];\n  params.leftColor = getPortColor(leftPlayer.port);\n  params.rightColor = getPortColor(rightPlayer.port);\n\n  params.char1 = leftPlayer.characterId;\n  params.char2 = rightPlayer.characterId;\n  params.color1 = leftPlayer.characterColor;\n  params.color2 = rightPlayer.characterColor;\n\n  // Set name tags\n  const lastGameDetails = filtered[filtered.length - 1];\n  const [leftTag, leftCode] = extractNameAndCode(leftPlayer.port, lastGameDetails);\n  const [rightTag, rightCode] = extractNameAndCode(rightPlayer.port, lastGameDetails);\n  params.name1 = leftTag.toUpperCase() || leftPlayer.characterName;\n  params.name2 = rightTag.toUpperCase() || rightPlayer.characterName;\n  params.sub1 = leftCode;\n  params.sub2 = rightCode;\n\n  // Set game info\n  params.gt = games.length; // Set the total number of games\n\n  games.forEach((game, i) => {\n    // console.log(\"processing game: \", game);\n    const gameKey = `g${i + 1}`;\n    const stageId = game.stage.id as number;\n    const gameDuration: string = game.duration;\n    const playerInfo = game.players.map((p: any) => [p.characterId, p.characterColor, p.gameResult].join(\",\"));\n    const gameValue = [stageId, gameDuration, ...playerInfo].join(\",\");\n    // console.log(`${gameKey} : ${gameValue}`);\n    params[gameKey] = gameValue;\n  });\n\n  params.stats = statsList.join(\",\");\n  // Set the stat values\n  summary.forEach((s) => {\n    // Stats can be null if the id is invalid or not specified\n    if (!s) {\n      return;\n    }\n\n    switch (s.id) {\n      // Put any custom logic here\n      default: {\n        (s.results as any[]).forEach((result, i) => {\n          params[`${s.id}${i + 1}`] = result.simple.text;\n        });\n        break;\n      }\n    }\n  });\n\n  console.log(\"returning these params: \", params);\n  return params;\n}\n","/* eslint-disable */\n\n/*\n * Taken from: https://github.com/project-slippi/slippi-set-stats/blob/master/main.js\n */\n\nimport _ from \"lodash\";\n\nexport function filterGames(games) {\n  // console.log(games);\n  const gamesByIsSingles = _.groupBy(games, (game) => {\n    const numberOfPlayers = game.settings.players.length;\n    return numberOfPlayers === 2;\n  });\n\n  const nonSinglesGames = _.get(gamesByIsSingles, false) || [];\n  if (_.some(nonSinglesGames)) {\n    console.log(\"The following games have been excluded because they are not singles games:\");\n    _.forEach(nonSinglesGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  const singlesGames = _.get(gamesByIsSingles, true) || [];\n  const gamesByPorts = _.chain(singlesGames)\n    .groupBy((game) => {\n      const ports = _.map(game.settings.players, \"port\");\n      return _.join(ports, \"-\");\n    })\n    .orderBy([\"length\"], [\"desc\"])\n    .value();\n\n  const gamesWithSamePorts = gamesByPorts.shift();\n  if (_.some(gamesByPorts)) {\n    console.log(\"The following games have been excluded because the player ports differ:\");\n    const flatGames = _.flatten(gamesByPorts);\n    _.forEach(flatGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  if (_.isEmpty(gamesWithSamePorts)) {\n    throw new Error(\"There were no valid games found to compute stats from.\");\n  }\n\n  console.log(`Including ${gamesWithSamePorts.length} games for stat calculation...`);\n\n  return gamesWithSamePorts;\n}\n","import { SlippiGame } from \"@slippi/slippi-js\";\n\nimport { GameDetails } from \"./stats/types\";\n\nexport async function readFileAsGameDetails(file: File): Promise<GameDetails> {\n  const game = await readFileAsSlippiGame(file);\n  return generateGameDetails(file.name, game);\n}\n\nasync function readFileAsSlippiGame(file: File): Promise<SlippiGame> {\n  const data = (await readFileAsArrayBuffer(file)) as ArrayBuffer;\n  const arr = new Int8Array(data);\n  const buf = Buffer.from(arr);\n  return new SlippiGame(buf);\n}\n\nfunction generateGameDetails(name: string, game: SlippiGame): GameDetails {\n  // For a valid SLP game, at the very least we should have valid settings\n  const settings = game.getSettings();\n  if (!settings) {\n    throw new Error(`Invalid SLP file. Could not find game settings in file: ${name}`);\n  }\n\n  return {\n    filePath: name,\n    settings,\n    frames: game.getFrames(),\n    stats: game.getStats(),\n    metadata: game.getMetadata(),\n    latestFrame: game.getLatestFrame(),\n    gameEnd: game.getGameEnd(),\n  };\n}\n\nasync function readFileAsArrayBuffer(file: File): Promise<string | ArrayBufferLike> {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onabort = () => reject(\"file reading was aborted\");\n    fr.onerror = () => reject(\"file reading has failed\");\n    if (fr.readAsBinaryString) {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          const string = (this as any).resultString != null ? (this as any).resultString : this.result;\n          const result = new Uint8Array(string.length);\n          for (let i = 0; i < string.length; i++) {\n            result[i] = string.charCodeAt(i);\n          }\n          resolve(result.buffer);\n        },\n        false\n      );\n      fr.readAsBinaryString(file);\n    } else {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          if (this.result) {\n            resolve(this.result);\n          } else {\n            reject(\"no data read\");\n          }\n        },\n        false\n      );\n      fr.readAsArrayBuffer(file);\n    }\n  });\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { PrimaryButton, SecondaryButton } from \"components/Buttons\";\nimport React from \"react\";\n\nimport { StatOptionList } from \"./StatOptionList\";\nimport { StatOption } from \"./types\";\n\nexport * from \"./types\";\n\ninterface StatOptionsProps {\n  onClose: () => void;\n  value: StatOption[];\n  onChange: (stats: StatOption[]) => void;\n  onReset: () => void;\n  hideReset?: boolean;\n}\n\nexport const StatOptions: React.FC<StatOptionsProps> = (props) => {\n  return (\n    <div\n      css={css`\n        display: flex;\n        flex-direction: column;\n        flex-wrap: nowrap;\n        height: 100%;\n        width: 100%;\n      `}\n    >\n      <h2\n        css={css`\n          text-align: center;\n        `}\n      >\n        CUSTOMIZE STATS\n      </h2>\n      <div\n        css={css`\n          overflow: auto;\n          display: flex;\n          flex-direction: column;\n          margin-bottom: 2rem;\n        `}\n      >\n        <StatOptionList value={props.value} onChange={props.onChange} />\n      </div>\n      <PrimaryButton backgroundColor=\"white\" color=\"black\" onClick={props.onClose}>\n        DONE\n      </PrimaryButton>\n      {!props.hideReset && <SecondaryButton onClick={props.onReset}>reset</SecondaryButton>}\n    </div>\n  );\n};\n","module.exports = __webpack_public_path__ + \"static/media/powered-by.61867ea8.png\";","import styled from \"@emotion/styled\";\nimport { STAT_DEFINITIONS } from \"lib/stats\";\nimport React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nconst Outer = styled.div<{\n  checked?: boolean;\n  isDragging?: boolean;\n}>`\n  opacity: ${(p) => (p.checked ? \"1\" : \"0.5\")};\n  background-color: ${(p) => (p.isDragging ? \"rgba(0, 0, 0, 0.6)\" : \"rgba(0, 0, 0, 0.3)\")};\n  color: white;\n  padding: 0.5rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  font-weight: ${(p) => (p.checked ? \"600\" : \"100\")};\n  ${(p) =>\n    p.isDragging\n      ? `\n    box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);\n    opacity: 1;\n`\n      : \"\"}\n\n  .title {\n    cursor: pointer;\n    margin-left: 1rem;\n    user-select: none;\n  }\n  .handle {\n    display: flex;\n  }\n`;\n\nexport const StatOptionItem: React.FC<{\n  checked: boolean;\n  index: number;\n  id: string;\n  onChange: (checked: boolean) => void;\n}> = (props) => {\n  const stat = STAT_DEFINITIONS.get(props.id);\n  if (!stat) {\n    return null;\n  }\n  const toggle = () => props.onChange(!props.checked);\n  return (\n    <Draggable draggableId={props.id} index={props.index}>\n      {(provided, snapshot) => (\n        <Outer\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n          isDragging={snapshot.isDragging}\n          checked={props.checked}\n        >\n          <div>\n            <input type=\"checkbox\" checked={props.checked} onChange={toggle} />\n            <span className=\"title\" onClick={toggle}>\n              {stat.name}\n            </span>\n          </div>\n          <div className=\"handle\" {...provided.dragHandleProps}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n              <path d=\"M20 9H4v2h16V9zM4 15h16v-2H4v2z\" fill=\"#ffffff\" />\n            </svg>\n          </div>\n        </Outer>\n      )}\n    </Draggable>\n  );\n};\n","import { reorder } from \"lib/util\";\nimport React from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nimport { StatOptionItem } from \"./StatOptionItem\";\nimport { StatOption } from \"./types\";\n\ninterface StatOptionListProps {\n  value: StatOption[];\n  onChange: (options: StatOption[]) => void;\n}\n\nexport const StatOptionList: React.FC<StatOptionListProps> = (props) => {\n  const statOptions = props.value;\n  const onDragEnd = (result: any) => {\n    const { destination, source } = result;\n    if (!destination) {\n      return;\n    }\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n    const newArray = reorder(props.value, source.index, destination.index);\n    props.onChange(newArray);\n  };\n\n  const toggle = (statId: string) => {\n    const optionIndex = statOptions.findIndex((o) => o.statId === statId);\n    if (optionIndex === -1) {\n      return;\n    }\n    const newOptions = Array.from(statOptions);\n    const option = newOptions[optionIndex];\n    option.enabled = !option.enabled;\n    props.onChange(newOptions);\n  };\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"stat-option-list\">\n        {(provided) => (\n          <div ref={provided.innerRef} {...provided.droppableProps}>\n            {statOptions.map((option, i) => {\n              return (\n                <StatOptionItem\n                  key={option.statId}\n                  index={i}\n                  id={option.statId}\n                  checked={option.enabled}\n                  onChange={() => toggle(option.statId)}\n                />\n              );\n            })}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n","import { css } from \"@emotion/core\";\n\nexport const hasOpacity = (initial: number, final = 1, transition = \"opacity 0.2s ease-in-out\") => css`\n  opacity: ${initial};\n  transition: ${transition};\n  &:hover {\n    opacity: ${final};\n  }\n`;\n","import moment from \"moment\";\n\nexport function convertFrameCountToDurationString(frameCount: number): string {\n  // Enforce positive numbers only\n  const totalFrames = Math.max(frameCount, 0);\n  const duration = moment.duration(totalFrames / 60, \"seconds\");\n  return moment.utc(duration.as(\"milliseconds\")).format(\"m:ss\");\n}\n\nexport function reorder(list: any[], startIndex: number, endIndex: number) {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n}\n","export enum PortColor {\n  P1 = \"#f52e2e\",\n  P2 = \"#5463ff\",\n  P3 = \"#ffc717\",\n  P4 = \"#1f9e40\",\n}\n\nexport function getPortColor(portNumber: number): string {\n  switch (portNumber) {\n    case 1:\n      return PortColor.P1;\n    case 2:\n      return PortColor.P2;\n    case 3:\n      return PortColor.P3;\n    case 4:\n      return PortColor.P4;\n    default:\n      return PortColor.P1;\n  }\n}\n","import { characters as characterUtil, moves as moveUtil, Stage } from \"@slippi/slippi-js\";\nimport { sampleSize } from \"lodash\";\n\nimport { Stat, STAT_DEFINITIONS } from \"./stats\";\nimport { convertFrameCountToDurationString } from \"./util\";\n\nconst LEGAL_STAGE_IDS = [\n  Stage.FOUNTAIN_OF_DREAMS,\n  Stage.POKEMON_STADIUM,\n  Stage.YOSHIS_STORY,\n  Stage.DREAMLAND,\n  Stage.BATTLEFIELD,\n  Stage.FINAL_DESTINATION,\n];\n\n/*\n * Random functions are taken from: https://stackoverflow.com/questions/1527803/generating-random-whole-numbers-in-javascript-in-a-specific-range\n */\n\n/**\n * Returns a random number between min (inclusive) and max (exclusive)\n */\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\n/**\n * Returns a random integer between min (inclusive) and max (inclusive).\n * The value is no lower than min (or the next integer greater than min\n * if min isn't an integer) and no greater than max (or the next integer\n * lower than max if max isn't an integer).\n * Using Math.round() will give you a non-uniform distribution!\n */\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function generateDemoValues(): Record<string, any> {\n  const paramMap: Record<string, any> = {};\n\n  // Set names\n  paramMap.name1 = \"FOLLOW\";\n  paramMap.name2 = \"ON\";\n  paramMap.sub1 = \"@_vinceau\";\n  paramMap.sub2 = \"TWITTER\";\n\n  // Set colors\n  const [char1, color1] = generateRandomCharacter();\n  const [char2, color2] = generateRandomCharacter();\n  paramMap.char1 = char1;\n  paramMap.color1 = color1;\n  paramMap.char2 = char2;\n  paramMap.color2 = color2;\n\n  // Random games\n  const totalGames = getRandomInt(3, 5);\n  paramMap.gt = totalGames;\n  sampleSize(LEGAL_STAGE_IDS, totalGames).forEach((stage, i) => {\n    const gameKey = `g${i + 1}`;\n    const leftWillWin = Math.random() < 0.5;\n    const leftPlayerInfo = [char1, color1, leftWillWin ? \"winner\" : \"loser\"].join(\",\");\n    const rightPlayerInfo = [char2, color2, leftWillWin ? \"loser\" : \"winner\"].join(\",\");\n    const gameValue = generateRandomGame([leftPlayerInfo, rightPlayerInfo], stage);\n    paramMap[gameKey] = gameValue;\n  });\n\n  const demoStats = [\n    Stat.KILL_MOVES,\n    Stat.NEUTRAL_OPENER_MOVES,\n    \"\",\n    Stat.OPENINGS_PER_KILL,\n    Stat.DAMAGE_DONE,\n    Stat.AVG_KILL_PERCENT,\n    Stat.NEUTRAL_WINS,\n  ];\n\n  paramMap.stats = demoStats.join(\",\");\n\n  demoStats\n    .filter((s) => Boolean(s))\n    .forEach((statId) => {\n      [1, 2].forEach((player) => {\n        const key = statId + player;\n        paramMap[key] = generateRandomStat(statId);\n      });\n    });\n  return paramMap;\n}\n\nfunction generateRandomStat(statId: string): string {\n  const stat = STAT_DEFINITIONS.get(statId);\n  if (!stat) {\n    return \"\";\n  }\n  switch (statId) {\n    case Stat.NEUTRAL_OPENER_MOVES:\n      return generateRandomMove();\n    case Stat.KILL_MOVES:\n      return generateRandomMove();\n    case Stat.OPENINGS_PER_KILL:\n      return getRandomArbitrary(5, 15).toFixed(stat.recommendedRounding);\n    case Stat.DAMAGE_DONE:\n      return getRandomArbitrary(1000, 2000).toFixed(stat.recommendedRounding);\n    case Stat.AVG_KILL_PERCENT:\n      return getRandomArbitrary(50, 200).toFixed(stat.recommendedRounding);\n    case Stat.NEUTRAL_WINS:\n      return getRandomInt(30, 80).toString();\n    default:\n      return \"\";\n  }\n}\n\nfunction generateRandomMove(): string {\n  const move = getRandomInt(7, 21);\n  const name = moveUtil.getMoveShortName(move).toUpperCase();\n  return `${name} - ${move}`;\n}\n\nfunction generateRandomCharacter() {\n  const charId = getRandomInt(0, 25);\n  const charInfo = characterUtil.getCharacterInfo(charId);\n  const colorIndex = getRandomInt(0, charInfo.colors.length - 1);\n  const color = charInfo.colors[colorIndex];\n  return [charId, color] as const;\n}\n\nfunction generateRandomStageId(): number {\n  const stageIndex = getRandomInt(0, LEGAL_STAGE_IDS.length - 1);\n  return LEGAL_STAGE_IDS[stageIndex];\n}\n\nfunction generateRandomDuration(): string {\n  // The number of frames in 30 seconds\n  const minFrames = 30 * 60;\n  // The number of frames in 8 minutes\n  const maxFrames = 8 * 60 * 60;\n  const frames = getRandomInt(minFrames, maxFrames);\n  return convertFrameCountToDurationString(frames);\n}\n\nfunction generateRandomGame(playerInfos: string[], stage?: Stage): string {\n  const stageId = stage || generateRandomStageId();\n  const gameDuration = generateRandomDuration();\n  const gameValue = [stageId, gameDuration, ...playerInfos].join(\",\");\n  return gameValue;\n}\n","/** @jsx jsx */\nimport { css, Global, jsx } from \"@emotion/core\";\n\nexport interface Theme {\n  primaryColor: string;\n  secondaryColor: string;\n}\n\nexport const defaultTheme: Theme = {\n  primaryColor: \"#286163\",\n  secondaryColor: \"#121020\",\n};\n\nexport const GlobalTheme: React.FC<Theme> = ({ primaryColor, secondaryColor }) => {\n  return (\n    <Global\n      styles={css`\n        body.themed {\n          background: radial-gradient(circle at center -30%, ${primaryColor}, ${secondaryColor});\n        }\n      `}\n    />\n  );\n};\n","import { defaultTheme } from \"styles/theme\";\n\nfunction getStoredValues(keys: string[]): Record<string, string | null> {\n  const res: Record<string, string | null> = {};\n  keys.forEach((key) => {\n    const value = localStorage.getItem(key);\n    if (value) {\n      res[key] = value;\n    }\n  });\n  return res;\n}\n\nexport function generateSearchParams(params: Record<string, any>): URLSearchParams {\n  const restoredParams = getStoredValues([\"primaryColor\", \"secondaryColor\", \"leftColor\", \"rightColor\"]);\n  const searchParams = new URLSearchParams({\n    ...defaultTheme,\n    ...restoredParams,\n    ...params,\n  });\n  return searchParams;\n}\n","import { generateDemoValues } from \"lib/demo\";\nimport { generateSearchParams } from \"lib/searchParams\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nexport const RandomView: React.FC = () => {\n  const params = generateDemoValues();\n  const search = \"?\" + generateSearchParams(params).toString();\n  return (\n    <Redirect\n      to={{\n        pathname: \"/render\",\n        search,\n      }}\n    />\n  );\n};\n","import { GameDetails } from \"lib/stats/types\";\n\nimport { InitialStateType, ProcessedFile } from \"./types\";\n\ntype ActionMap<M extends { [index: string]: any }> = {\n  [Key in keyof M]: M[Key] extends undefined\n    ? {\n        type: Key;\n      }\n    : {\n        type: Key;\n        payload: M[Key];\n      };\n};\n\nexport enum Types {\n  ADD_FILES = \"ADD_FILES\",\n  SET_DETAILS = \"SET_DETAILS\",\n  SET_ERROR = \"SET_ERROR\",\n  REMOVE_FILE = \"REMOVE_FILE\",\n  CLEAR_ALL = \"CLEAR_ALL\",\n}\n\ntype ActionPayload = {\n  [Types.SET_DETAILS]: {\n    filename: string;\n    details: GameDetails;\n  };\n  [Types.SET_ERROR]: {\n    filename: string;\n    error: any;\n  };\n  [Types.ADD_FILES]: {\n    files: File[];\n  };\n  [Types.REMOVE_FILE]: {\n    filename: string;\n  };\n  [Types.CLEAR_ALL]: never;\n};\n\nexport type ReducerActions = ActionMap<ActionPayload>[keyof ActionMap<ActionPayload>];\n\nexport const reducer = (state: InitialStateType, action: ReducerActions) => {\n  switch (action.type) {\n    case Types.SET_DETAILS: {\n      const { filename, details } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.filename === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].details = details;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.SET_ERROR: {\n      const { filename, error } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.filename === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].error = error;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.ADD_FILES: {\n      const { files } = action.payload;\n      const currentFiles = state.files;\n      let newFiles: ProcessedFile[] = files.map((f) => ({\n        filename: f.name,\n        loading: true,\n        details: null,\n      }));\n\n      // Make sure there are no duplicate filenames\n      newFiles = newFiles.filter((f) => !currentFiles.find((existingFile) => f.filename === existingFile.filename));\n\n      return {\n        ...state,\n        files: [...currentFiles, ...newFiles],\n      };\n    }\n    case Types.REMOVE_FILE: {\n      const { filename } = action.payload;\n      const files = state.files.filter((f) => f.filename !== filename);\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.CLEAR_ALL: {\n      return {\n        ...state,\n        files: [],\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { createContext, Dispatch, useReducer } from \"react\";\n\nimport { reducer, ReducerActions } from \"./reducers\";\nimport { InitialStateType } from \"./types\";\n\nconst initialState: InitialStateType = {\n  files: [],\n};\n\nconst AppContext = createContext<{\n  state: InitialStateType;\n  dispatch: Dispatch<ReducerActions>;\n}>({\n  state: initialState,\n  dispatch: () => null,\n});\n\nconst mainReducer = (state: InitialStateType, action: ReducerActions) => reducer(state, action);\n\nconst AppProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(mainReducer, initialState);\n\n  return <AppContext.Provider value={{ state, dispatch }}>{children}</AppContext.Provider>;\n};\n\nexport { AppProvider, AppContext };\n","import React from \"react\";\n\nexport const ExternalLink: React.FC<React.HTMLProps<HTMLAnchorElement>> = (props) => {\n  return (\n    <a target=\"_blank\" rel=\"noopener noreferrer\" {...props}>\n      {props.children}\n    </a>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Header = styled.h1`\n  text-transform: uppercase;\n  font-weight: 800;\n  font-size: 5.5rem;\n  margin: 2rem;\n  padding-bottom: 1rem;\n  position: relative;\n  text-align: center;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.2), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translateX(-50%);\n    bottom: 0;\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { DropzoneOptions, useDropzone } from \"react-dropzone\";\n\nconst getColor = (props: any) => {\n  if (props.isDragAccept) {\n    return \"#00e676\";\n  }\n  if (props.isDragActive) {\n    return \"#2196f3\";\n  }\n  return \"#eeeeee\";\n};\n\nconst Container = styled.div`\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-width: 2px;\n  border-color: ${(props) => getColor(props)};\n  border-style: dashed;\n  background-color: rgba(0, 0, 0, 0.3);\n  color: white;\n  outline: none;\n  transition: border 0.24s ease-in-out;\n  p {\n    text-align: center;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n`;\n\nexport const DropPad: React.FC<Partial<DropzoneOptions>> = (props) => {\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone(props);\n\n  return (\n    <Container {...getRootProps({ isDragActive, isDragAccept, isDragReject })}>\n      <input {...getInputProps()} />\n      <p>Drag SLP files here or click to select</p>\n    </Container>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\n\nexport const ErrorMessage: React.FC = (props) => {\n  return (\n    <span\n      css={css`\n        color: #bf2600;\n        font-weight: bold;\n      `}\n    >\n      ERROR: {props.children}\n    </span>\n  );\n};\n","import { characters as characterUtil, stages as stageUtil } from \"@slippi/slippi-js\";\n\nexport type Side = \"left\" | \"right\";\n\nfunction sanitize(text: string, replacement = \"-\"): string {\n  return text.toLowerCase().replace(/[. &]+/gi, replacement);\n}\n\nfunction getCharacterFolderFromId(characterId: string | number, color?: string) {\n  const characterName = characterUtil.getCharacterName(+characterId);\n  return getCharacterFolderFromName(characterName, color);\n}\n\nfunction getCharacterFolderFromName(character: string, color = \"Default\") {\n  const charFolder = sanitize(character);\n  const colorFolder = sanitize(color);\n  return `${process.env.PUBLIC_URL}/images/characters/${charFolder}/${colorFolder}`;\n}\n\nexport function getCharacterPortrait(characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/portrait.png`;\n}\n\nexport function getCharacterVSScreen(side: Side, characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/vs-${side}.png`;\n}\n\nexport function getCharacterStockIcon(characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/stock.png`;\n}\n\nexport function getStageIcon(stageId: string | number): string {\n  const stageName = stageUtil.getStageName(+stageId);\n  return `${process.env.PUBLIC_URL}/images/stages/${stageName}.png`;\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { characters as characterUtil, stages as stageUtil } from \"@slippi/slippi-js\";\nimport { ErrorMessage } from \"components/ErrorMessage\";\nimport { getCharacterStockIcon } from \"lib/resources\";\nimport { convertFrameCountToDurationString } from \"lib/util\";\nimport { findWinner } from \"lib/winner\";\nimport React from \"react\";\nimport { ProcessedFile } from \"store/types\";\nimport { hasOpacity } from \"styles/opacity\";\nimport { defaultTheme } from \"styles/theme\";\n\nconst BasicFileItem: React.FC<{ name: string; onRemove?: () => void }> = (props) => {\n  const { onRemove, name, children } = props;\n  return (\n    <div\n      css={css`\n        padding: 1.5rem 2rem;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        color: rgba(255, 255, 255, 0.8);\n        background-color: rgba(0, 0, 0, 0.3);\n        ${hasOpacity(0.8)};\n        &:hover {\n          .remove-button {\n            opacity: 1;\n          }\n        }\n        .remove-button {\n          opacity: 0;\n          transition: opacity 0.2s ease-in-out;\n          background: white;\n          color: ${defaultTheme.secondaryColor};\n          border: none;\n          font-weight: bold;\n          font-size: 2.5rem;\n          cursor: pointer;\n          padding: 0.2rem 1rem;\n          margin: 0;\n        }\n      `}\n    >\n      <div\n        css={css`\n          flex: 1;\n        `}\n      >\n        <div\n          css={css`\n            font-size: 1.6rem;\n            font-weight: bold;\n            margin-bottom: 1rem;\n            font-family: monospace;\n          `}\n        >\n          {name}\n        </div>\n        <div>{children}</div>\n      </div>\n      {onRemove && (\n        <button className=\"remove-button\" onClick={onRemove} title=\"Remove\">\n          ✕\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst CharacterIcon: React.FC<{\n  charId: string | number;\n  color: string;\n  winner?: boolean;\n}> = ({ charId, color, winner }) => {\n  const src = getCharacterStockIcon(charId, color);\n  return (\n    <div\n      css={css`\n        position: relative;\n        display: inline-block;\n        margin-top: 0.5rem;\n        ${winner &&\n        `&::after {\n          position: absolute;\n          content: \" \";\n          height: 0.7rem;\n          width: 60%;\n          background-color: #ffa700;\n          left: 20%;\n          bottom: 110%;\n          clip-path: polygon(50% 0%, 75% 35%, 100% 0, 100% 100%, 0 100%, 0 0, 25% 35%);\n        }\n      `}\n      `}\n    >\n      <img src={src} style={{ height: \"3rem\" }} alt=\"stock icon\" />\n    </div>\n  );\n};\n\nexport interface FileItemProps {\n  file: ProcessedFile;\n  onRemove: () => void;\n}\n\nexport const FileItem: React.FC<FileItemProps> = (props) => {\n  const { file, onRemove } = props;\n  const { filename, loading, error, details } = file;\n  if (loading) {\n    return (\n      <BasicFileItem name={filename}>\n        <span\n          css={css`\n            font-weight: bold;\n          `}\n        >\n          LOADING...\n        </span>\n      </BasicFileItem>\n    );\n  }\n  if (error || !details) {\n    return (\n      <BasicFileItem onRemove={onRemove} name={filename}>\n        <ErrorMessage>{error.message}</ErrorMessage>\n      </BasicFileItem>\n    );\n  }\n\n  const stageName = stageUtil.getStageName(details.settings.stageId as number);\n  const players = details.settings.players;\n  const duration = details.latestFrame ? convertFrameCountToDurationString(details.latestFrame.frame) : \"N/A\";\n  const winnerIndex = details.latestFrame ? findWinner(details.latestFrame) : null;\n  const icons = players.map((player) => {\n    const winner = player.playerIndex === winnerIndex;\n    const charId = player.characterId as number;\n    const color = characterUtil.getCharacterColorName(charId, player.characterColor as number);\n    return <CharacterIcon key={`${player.port}-icon`} charId={charId} color={color} winner={winner} />;\n  });\n  return (\n    <BasicFileItem onRemove={onRemove} name={filename}>\n      <div\n        css={css`\n          display: grid;\n          justify-items: center;\n          align-items: center;\n          grid-template-columns: repeat(3, 1fr);\n          font-weight: bold;\n        `}\n      >\n        <div>{stageName}</div>\n        <div\n          css={css`\n            display: grid;\n            grid-auto-flow: column;\n            grid-column-gap: 1rem;\n          `}\n        >\n          {icons}\n        </div>\n        <div>{duration}</div>\n      </div>\n    </BasicFileItem>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { ProcessedFile } from \"store/types\";\n\nimport { FileItem } from \"./FileItem\";\n\nexport interface FileListProps {\n  files: ProcessedFile[];\n  onRemove: (filename: string) => void;\n}\n\nexport const FileList: React.FC<FileListProps> = (props) => {\n  const { files, onRemove } = props;\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-template-columns: 100%;\n        grid-row-gap: 1rem;\n      `}\n    >\n      {files.map((f) => (\n        <FileItem key={f.filename} file={f} onRemove={() => onRemove(f.filename)} />\n      ))}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { PrimaryButton, SecondaryButton } from \"components/Buttons\";\nimport { DropPad } from \"components/DropPad\";\nimport { ErrorMessage } from \"components/ErrorMessage\";\nimport { FileList } from \"components/FileList\";\nimport { readFileAsGameDetails } from \"lib/readFile\";\nimport { generateSearchParams } from \"lib/searchParams\";\nimport { generateStatParams } from \"lib/stats\";\nimport { GameDetails, Stat } from \"lib/stats/types\";\nimport React, { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { AppContext, Types } from \"../store\";\nimport { StatOption, StatOptions } from \"./StatOptions\";\n\nconst STAT_OPTIONS_STORE_KEY = \"statOptions\";\n\nconst ALL_STATS: string[] = [\n  Stat.INPUTS_PER_MINUTE,\n  Stat.DAMAGE_PER_OPENING,\n  Stat.OPENINGS_PER_KILL,\n  Stat.DAMAGE_DONE,\n  Stat.AVG_KILL_PERCENT,\n  Stat.NEUTRAL_WINS,\n  Stat.L_CANCEL,\n  Stat.FIRST_BLOOD,\n  Stat.EARLY_KILLS,\n  Stat.LATE_DEATHS,\n  Stat.SELF_DESTRUCTS,\n  Stat.HIGH_DAMAGE_PUNISHES,\n];\n\nconst DEFAULT_STATS = [Stat.OPENINGS_PER_KILL, Stat.DAMAGE_DONE, Stat.AVG_KILL_PERCENT, Stat.NEUTRAL_WINS];\n\nconst getDefaultStats = (): StatOption[] => {\n  const current = DEFAULT_STATS.map((s) => ({\n    statId: s,\n    enabled: true,\n  }));\n  return validateStatOptions(current);\n};\n\nconst validateStatOptions = (current: StatOption[]): StatOption[] => {\n  const newItems: StatOption[] = ALL_STATS.filter(\n    (statId) => !current.find((option) => option.statId === statId)\n  ).map((statId) => ({ statId, enabled: false }));\n\n  // Make sure the ones we're showing are supported\n  const currentItems = current.filter((c) => ALL_STATS.includes(c.statId));\n  return [...currentItems, ...newItems];\n};\n\nconst generateStatsList = (options: StatOption[]): string[] => {\n  const statsList = options.filter((s) => s.enabled).map((s) => s.statId);\n  return [Stat.KILL_MOVES, Stat.NEUTRAL_OPENER_MOVES, \"\", ...statsList];\n};\n\nexport const FileListInput: React.FC<{ buttonColor: string }> = ({ buttonColor }) => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(AppContext);\n  const [error, setError] = React.useState<any>(null);\n  const [showOptions, setShowOptions] = React.useState(false);\n\n  let defaultStats = getDefaultStats();\n  let statsModified = false;\n  // Since we're persisting user options in localStorage, we need to be able to\n  // handle the case where new options are available, yet not in their localStorage.\n  const restoredStatsString = localStorage.getItem(STAT_OPTIONS_STORE_KEY);\n  if (restoredStatsString) {\n    statsModified = restoredStatsString !== JSON.stringify(defaultStats);\n    defaultStats = validateStatOptions(JSON.parse(restoredStatsString));\n  }\n\n  const [statOptions, setStatOptions] = React.useState<StatOption[]>(defaultStats);\n\n  const onStatOptionReset = () => {\n    onStatOptionChange(getDefaultStats());\n  };\n\n  const onStatOptionChange = (options: StatOption[]) => {\n    localStorage.setItem(STAT_OPTIONS_STORE_KEY, JSON.stringify(options));\n    setStatOptions(options);\n  };\n\n  const onClick = () => {\n    try {\n      const gameDetails = state.files.filter((f) => f.details !== null).map((f) => f.details as GameDetails);\n      const params = generateStatParams(gameDetails, generateStatsList(statOptions));\n      const search = \"?\" + generateSearchParams(params).toString();\n      history.push({\n        pathname: \"/render\",\n        search,\n      });\n    } catch (err) {\n      console.error(error);\n      setError(err);\n    }\n  };\n\n  const onRemove = (filename: string) => {\n    dispatch({\n      type: Types.REMOVE_FILE,\n      payload: {\n        filename,\n      },\n    });\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      // Track how long processing takes\n      const startTime = new Date().getTime();\n\n      // First add all the files to the store\n      dispatch({\n        type: Types.ADD_FILES,\n        payload: {\n          files: acceptedFiles,\n        },\n      });\n\n      const promises = acceptedFiles.map(async (file) => {\n        try {\n          const details = await readFileAsGameDetails(file);\n          dispatch({\n            type: Types.SET_DETAILS,\n            payload: {\n              filename: file.name,\n              details,\n            },\n          });\n        } catch (err) {\n          console.error(error);\n          dispatch({\n            type: Types.SET_ERROR,\n            payload: {\n              filename: file.name,\n              error: err,\n            },\n          });\n        }\n      });\n\n      // Print the time taken when complete\n      Promise.all(promises).then(() => {\n        const time = new Date().getTime() - startTime;\n        console.log(`Finished processing in ${time}ms`);\n      });\n    },\n    [dispatch, error]\n  );\n\n  const finishedProcessing = !state.files.find((f) => f.loading);\n  const buttonText =\n    state.files.length === 0 ? \"NO FILES ADDED\" : finishedProcessing ? \"GENERATE STATS\" : \"PLEASE WAIT\";\n\n  if (showOptions) {\n    return (\n      <StatOptions\n        onClose={() => setShowOptions(false)}\n        value={statOptions}\n        onChange={onStatOptionChange}\n        onReset={onStatOptionReset}\n        hideReset={!statsModified}\n      />\n    );\n  }\n\n  return (\n    <div\n      css={css`\n        display: flex;\n        flex-direction: column;\n        flex-wrap: nowrap;\n        width: 100%;\n        height: 100%;\n      `}\n    >\n      <DropPad accept=\".slp\" onDrop={onDrop} />\n      <div\n        css={css`\n          overflow: auto;\n          display: flex;\n          flex-direction: column;\n          margin: 1rem 0;\n        `}\n      >\n        <FileList files={state.files} onRemove={onRemove} />\n      </div>\n      <div>\n        <PrimaryButton\n          backgroundColor={buttonColor}\n          color=\"white\"\n          disabled={state.files.length === 0 || !finishedProcessing}\n          onClick={onClick}\n        >\n          {buttonText}\n        </PrimaryButton>\n        <SecondaryButton onClick={() => setShowOptions(true)}>customize stats</SecondaryButton>\n      </div>\n      {error && <ErrorMessage>{error.message}</ErrorMessage>}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { ExternalLink as A } from \"components/ExternalLink\";\nimport { Header } from \"components/Header\";\nimport { FileListInput } from \"containers/FileListInput\";\nimport React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AppContext, Types } from \"store\";\nimport { hasOpacity } from \"styles/opacity\";\nimport { defaultTheme, GlobalTheme } from \"styles/theme\";\n\nconst linkStyle = css`\n  display: block;\n  text-align: center;\n  text-decoration: none;\n  color: ${defaultTheme.secondaryColor};\n  background: white;\n  padding: 1rem 0rem;\n  width: 100%;\n  font-weight: 700;\n  font-size: 2.3rem;\n  cursor: pointer;\n  ${hasOpacity(0.8)};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  padding: 0 2rem;\n`;\n\nexport const MainView: React.FC = () => {\n  const { dispatch } = useContext(AppContext);\n  const primaryColor = localStorage.getItem(\"primaryColor\") || defaultTheme.primaryColor;\n  const secondaryColor = localStorage.getItem(\"secondaryColor\") || defaultTheme.secondaryColor;\n\n  const clearAll = () => {\n    dispatch({\n      type: Types.CLEAR_ALL,\n    });\n  };\n\n  return (\n    <div\n      css={css`\n        height: 100%;\n        width: 100%;\n        max-width: 80rem;\n        margin: 0 auto;\n      `}\n    >\n      <GlobalTheme primaryColor={primaryColor} secondaryColor={secondaryColor} />\n      <Container>\n        <div\n          css={css`\n            flex: none;\n          `}\n        >\n          <Header\n            onClick={clearAll}\n            title=\"Refresh page\"\n            css={css`\n              cursor: pointer;\n              font-size: 4rem;\n            `}\n          >\n            Slippi Stats\n            <br />\n            Graphic Generator\n          </Header>\n        </div>\n        <div\n          css={css`\n            flex: 1;\n            display: flex;\n            flex-direction: column;\n            overflow: auto;\n          `}\n        >\n          <FileListInput buttonColor={primaryColor} />\n        </div>\n        <div\n          css={css`\n            flex: none;\n            display: grid;\n            grid-template-columns: repeat(3, 1fr);\n            grid-column-gap: 1rem;\n            padding: 2rem 0;\n          `}\n        >\n          <Link css={linkStyle} to=\"/random\" title=\"Show random sample stats\">\n            DEMO\n          </Link>\n          <A css={linkStyle} title=\"Need help?\" href=\"https://github.com/vinceau/slippi-stats#faq\">\n            FAQ\n          </A>\n          <A css={linkStyle} title=\"Send love\" href=\"https://twitter.com/_vinceau\">\n            AUTHOR\n          </A>\n        </div>\n      </Container>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport Copy from \"react-copy-to-clipboard\";\n\nexport interface CopyToClipboardProps {\n  text: string;\n  onCopyText?: string;\n  onCopyTimeoutMs?: number;\n}\n\nexport const CopyToClipboard: React.FC<CopyToClipboardProps> = (props) => {\n  const [copied, setCopied] = React.useState(false);\n  const timeoutMs = props.onCopyTimeoutMs || 2000;\n  const copyText = props.onCopyText || \"copied!\";\n\n  const onCopy = () => {\n    setCopied(true);\n    setTimeout(() => setCopied(false), timeoutMs);\n  };\n\n  if (copied) {\n    return <span>{copyText}</span>;\n  }\n\n  return (\n    <span\n      css={css`\n        cursor: pointer;\n        &:hover {\n          text-decoration: underline;\n        }\n      `}\n    >\n      <Copy text={props.text} onCopy={onCopy}>\n        {props.children}\n      </Copy>\n    </span>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport obsImage from \"../styles/images/obs.png\";\n\ninterface OBSLayerOptions {\n  \"layer-name\": string;\n  \"layer-width\": number;\n  \"layer-height\": number;\n}\n\nfunction generateLink(options?: Partial<OBSLayerOptions>): string {\n  let location = window.location.href;\n  for (const [key, val] of Object.entries(options || {})) {\n    location += `&${key}=${val}`;\n  }\n  return location;\n}\n\nconst DraggableLink = styled.a`\n  color: #cccccc;\n  border: solid 0.2rem white;\n  background-color: #333333;\n  display: inline-block;\n  text-decoration: none;\n  padding: 1.5rem 3rem;\n  cursor: move;\n  border-radius: 0.3rem;\n  display: flex;\n  align-items: center;\n  text-transform: uppercase;\n  font-weight: bold;\n`;\n\nexport const OBSDragButton: React.FC<{ options?: Partial<OBSLayerOptions> }> = (props) => {\n  const wrapperRef = React.useRef(null);\n  const location = generateLink(props.options);\n  const pos = 30;\n  const handleDragStart = (e: any) => {\n    const img = new Image();\n    img.src = obsImage;\n    // Customize the visible 'thumbnail' while dragging\n    e.dataTransfer.setDragImage(img, pos, pos);\n    // Set the data type, and the value. You specifically want text/uri-list.\n    e.dataTransfer.setData(\"text/uri-list\", e.target.href);\n  };\n  const handleDragEnd = (e: any) => e.target.blur();\n  return (\n    <DraggableLink\n      href={location}\n      onDragStart={(e) => handleDragStart(e)}\n      onDragEnd={(e) => handleDragEnd(e)}\n      onClick={(e) => e.preventDefault()}\n      ref={wrapperRef}\n    >\n      <img style={{ width: \"3rem\", marginRight: \"1rem\" }} src={obsImage} alt=\"OBS Logo\" /> Drag me into OBS\n    </DraggableLink>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport function useParam(key: string, defaultValue = \"\") {\n  const [value, setValue] = useState<string>(defaultValue);\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const currentValue = params.get(key);\n    if (currentValue !== value) {\n      setValue(currentValue || defaultValue);\n    }\n  }, [key, defaultValue, location, value]);\n\n  const setParam = (val: string) => {\n    const params = new URLSearchParams(location.search);\n    params.set(key, val);\n    const search = \"?\" + params.toString();\n    history.push({\n      pathname: location.pathname,\n      search,\n    });\n  };\n\n  return [value, setParam] as const;\n}\n","// From: https://usehooks.com/useKeyPress/\n\nimport { useEffect, useState } from \"react\";\n\nexport function useKeyPress(targetKey: any) {\n  // State for keeping track of whether key is pressed\n\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // Add event listeners\n\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n\n    function downHandler({ key }: any) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n\n    // If released key is our target key then set to false\n\n    const upHandler = ({ key }: any) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n\n    window.addEventListener(\"keyup\", upHandler);\n\n    // Remove event listeners on cleanup\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [targetKey]); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}\n","// From: https://usehooks.com/useOnClickOutside/\n\nimport { useEffect } from \"react\";\n\nexport function useOnClickOutside(ref: any, handler: any) {\n  useEffect(\n    () => {\n      const listener = (event: any) => {\n        // Do nothing if clicking ref's element or descendent elements\n\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n\n      document.addEventListener(\"touchstart\", listener);\n\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    },\n\n    // Add ref and handler to effect dependencies\n\n    // It's worth noting that because passed in handler is a new ...\n\n    // ... function on every render that will cause this effect ...\n\n    // ... callback/cleanup to run every render. It's not a big deal ...\n\n    // ... but to optimize you can wrap handler in useCallback before ...\n\n    // ... passing it into this hook.\n\n    [ref, handler]\n  );\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useOnClickOutside } from \"lib/hooks\";\nimport React, { useRef } from \"react\";\nimport { ChromePicker } from \"react-color\";\nimport { hasOpacity } from \"styles/opacity\";\n\nconst ColorSquare = styled.div<{\n  size: string;\n  color: string;\n}>`\n  cursor: pointer;\n  height: ${(p) => p.size};\n  width: ${(p) => p.size};\n  border-radius: 0.5rem;\n  border: solid 0.1rem rgba(255, 255, 255, 0.2);\n  background-color: ${(p) => p.color};\n`;\n\nconst ResetButton = styled.div`\n  position: absolute;\n  transform: translateX(-50%);\n  margin-top: 0.2rem;\n  margin-left: 50%;\n  font-size: 1.1rem;\n  cursor: pointer;\n  padding: 0.2rem 0.5rem;\n  ${hasOpacity(0.5)};\n`;\n\nexport const ColorPicker: React.FC<{\n  value: string;\n  defaultColor?: string;\n  onChange: (val: string) => void;\n}> = ({ value, onChange, defaultColor }) => {\n  const [show, setShow] = React.useState(false);\n  const wrapperRef = useRef(null);\n  const showReset = defaultColor && value !== defaultColor;\n\n  useOnClickOutside(wrapperRef, () => {\n    if (show) {\n      setShow(false);\n    }\n  });\n\n  const onClick = () => {\n    if (!show) {\n      setShow(true);\n    }\n  };\n\n  const resetClick = () => {\n    if (defaultColor) {\n      onChange(defaultColor);\n    }\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <ColorSquare color={value} size=\"5rem\" ref={wrapperRef} onClick={onClick}>\n        {show && (\n          <div\n            css={css`\n              position: absolute;\n              z-index: 9999;\n              bottom: 0;\n            `}\n          >\n            <ChromePicker color={value} onChange={(color) => onChange(color.hex)} />\n          </div>\n        )}\n      </ColorSquare>\n      {showReset && <ResetButton onClick={resetClick}>RESET</ResetButton>}\n    </div>\n  );\n};\n","/** @jsx jsx */ import { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { ColorPicker } from \"components/ColorPicker\";\nimport React from \"react\";\n\nconst ColorContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 1rem;\n  justify-items: center;\n  align-items: center;\n`;\n\nconst ColorLabel = styled.div`\n  font-weight: 600;\n  font-size: 1.6rem;\n`;\n\nexport interface DualColorPickerProps {\n  leftLabel: string;\n  rightLabel: string;\n  leftColor: string;\n  rightColor: string;\n  defaultLeftColor?: string;\n  defaultRightColor?: string;\n  onLeftColorChange: (color: string) => void;\n  onRightColorChange: (color: string) => void;\n}\n\nexport const DualColorPicker: React.FC<DualColorPickerProps> = (props) => {\n  const {\n    defaultLeftColor,\n    defaultRightColor,\n    leftLabel,\n    rightLabel,\n    leftColor,\n    rightColor,\n    onLeftColorChange,\n    onRightColorChange,\n  } = props;\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-column-gap: 2.5rem;\n        grid-template-columns: repeat(2, 1fr);\n      `}\n    >\n      <ColorContainer\n        css={css`\n          justify-self: end;\n        `}\n      >\n        <ColorLabel>{leftLabel}</ColorLabel>\n        <div>\n          <ColorPicker value={leftColor} onChange={onLeftColorChange} defaultColor={defaultLeftColor} />\n        </div>\n      </ColorContainer>\n      <ColorContainer\n        css={css`\n          justify-self: start;\n        `}\n      >\n        <div>\n          <ColorPicker value={rightColor} onChange={onRightColorChange} defaultColor={defaultRightColor} />\n        </div>\n        <ColorLabel>{rightLabel}</ColorLabel>\n      </ColorContainer>\n    </div>\n  );\n};\n","/** @jsx jsx */ import { css, jsx } from \"@emotion/core\";\nimport { DualColorPicker } from \"components/ColorPicker\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nexport interface DualColorPanelProps {\n  panelLabel: string;\n  leftLabel: string;\n  leftColorParam: string;\n  leftDefault: string;\n  rightLabel: string;\n  rightColorParam: string;\n  rightDefault: string;\n}\n\nexport const DualColorPanel: React.FC<DualColorPanelProps> = (props) => {\n  const { panelLabel, leftLabel, leftColorParam, leftDefault, rightLabel, rightColorParam, rightDefault } = props;\n  const existingLeftColor = localStorage.getItem(leftColorParam);\n  const existingRightColor = localStorage.getItem(rightColorParam);\n  const [leftColor, setLeftColor] = useParam(leftColorParam, existingLeftColor || leftDefault);\n  const [rightColor, setRightColor] = useParam(rightColorParam, existingRightColor || rightDefault);\n\n  const onLeftColorChange = (color: string) => {\n    localStorage.setItem(leftColorParam, color);\n    setLeftColor(color);\n  };\n\n  const onRightColorChange = (color: string) => {\n    localStorage.setItem(rightColorParam, color);\n    setRightColor(color);\n  };\n\n  return (\n    <Panel title={panelLabel}>\n      <DualColorPicker\n        leftLabel={leftLabel}\n        rightLabel={rightLabel}\n        leftColor={leftColor}\n        rightColor={rightColor}\n        defaultLeftColor={leftDefault}\n        defaultRightColor={rightDefault}\n        onLeftColorChange={onLeftColorChange}\n        onRightColorChange={onRightColorChange}\n      />\n    </Panel>\n  );\n};\n\nconst Panel: React.FC<{ title: string }> = (props) => {\n  return (\n    <div>\n      <div\n        css={css`\n          text-align: center;\n          margin-bottom: 2rem;\n          font-weight: 800;\n          font-size: 2rem;\n        `}\n      >\n        {props.title}\n      </div>\n      {props.children}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { characters as characterUtil } from \"@slippi/slippi-js\";\nimport { CopyToClipboard } from \"components/CopyToClipboard\";\nimport { ExternalLink as A } from \"components/ExternalLink\";\nimport { OBSDragButton } from \"components/OBSDragButton\";\nimport { useOnClickOutside, useParam } from \"lib/hooks\";\nimport { PortColor } from \"lib/portColor\";\nimport React from \"react\";\nimport { hasOpacity } from \"styles/opacity\";\nimport { defaultTheme } from \"styles/theme\";\n\nimport { DualColorPanel } from \"./Panel\";\n\nconst Content = styled.div`\n  padding-top: 2rem;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n`;\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Heading = styled.h2`\n  display: block;\n  position: absolute;\n  width: 100%;\n  top: 0;\n  transform: translateY(-100%);\n  background-color: inherit;\n  margin: 0;\n  text-align: center;\n  padding: 1rem 0;\n  font-size: 2rem;\n  &::after {\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.2), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 10%;\n    bottom: 0;\n  }\n`;\n\nconst Outer = styled.div`\n  position: fixed;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  background-color: black;\n  opacity: 0.2;\n  z-index: 10;\n  &.closed:hover {\n    cursor: pointer;\n    opacity: 0.8;\n  }\n  &.open {\n    opacity: 1;\n    transform: translateY(-100%);\n    .close-button {\n      opacity: 1;\n    }\n  }\n  transition: all 0.2s ease-in-out;\n  .close-button {\n    z-index: 10;\n    position: absolute;\n    right: 3rem;\n    top: 1rem;\n    opacity: 0;\n    transition: opacity 0.2s ease-in-out;\n    color: black;\n    background-color: white;\n    padding: 0.2rem 1rem;\n    font-weight: bold;\n    font-size: 2.5rem;\n    cursor: pointer;\n    transform: translateY(-100%);\n  }\n`;\n\nexport const Options: React.FC = () => {\n  const [open, setOpen] = React.useState(false);\n  const [char1] = useParam(\"char1\");\n  const [char2] = useParam(\"char2\");\n\n  const charName1 = characterUtil.getCharacterShortName(+char1);\n  const charName2 = characterUtil.getCharacterShortName(+char2);\n  const obsLayerName = `Slippi Stats - ${charName1} v ${charName2}`;\n\n  const outerRef = React.useRef(null);\n\n  useOnClickOutside(outerRef, () => {\n    if (open) {\n      setOpen(false);\n    }\n  });\n\n  const showOptions = () => {\n    if (!open) {\n      setOpen(true);\n    }\n  };\n\n  const closeOptions = () => setOpen(false);\n\n  return (\n    <Outer className={open ? \"open\" : \"closed\"} ref={outerRef} onClick={showOptions}>\n      <div className=\"close-button\" onClick={closeOptions} title=\"Close\">\n        ✕\n      </div>\n      <Heading>OPTIONS</Heading>\n      <Content>\n        <Column>\n          <DualColorPanel\n            panelLabel=\"PLAYER COLOR\"\n            leftLabel=\"LEFT\"\n            rightLabel=\"RIGHT\"\n            leftDefault={PortColor.P1}\n            leftColorParam=\"leftColor\"\n            rightColorParam=\"rightColor\"\n            rightDefault={PortColor.P2}\n          />\n        </Column>\n        <Column>\n          <div\n            css={css`\n              margin-top: 1rem;\n            `}\n          >\n            <OBSDragButton options={{ \"layer-name\": obsLayerName, \"layer-width\": 1920, \"layer-height\": 1080 }} />\n            <div\n              css={css`\n                margin-top: 0.5rem;\n                text-align: center;\n                font-size: 1.2rem;\n                ${hasOpacity(0.5)};\n              `}\n            >\n              <CopyToClipboard text={window.location.href}>\n                <span>copy link to clipboard</span>\n              </CopyToClipboard>\n            </div>\n          </div>\n          <div\n            css={css`\n              font-size: 1.5rem;\n              margin: 2rem 0;\n              ${hasOpacity(0.5)}\n              a:hover {\n                text-decoration: underline;\n              }\n            `}\n          >\n            Made with love by <A href=\"https://twitter.com/_vinceau\">Vince Au</A>\n          </div>\n        </Column>\n        <Column>\n          <DualColorPanel\n            panelLabel=\"THEME COLOR\"\n            leftLabel=\"PRIMARY\"\n            rightLabel=\"SECONDARY\"\n            leftDefault={defaultTheme.primaryColor}\n            leftColorParam=\"primaryColor\"\n            rightColorParam=\"secondaryColor\"\n            rightDefault={defaultTheme.secondaryColor}\n          />\n        </Column>\n      </Content>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { Character } from \"@slippi/slippi-js\";\nimport { useParam } from \"lib/hooks\";\nimport { getCharacterVSScreen, Side } from \"lib/resources\";\nimport React from \"react\";\n\nexport interface CharDisplayProps {\n  colorParam: string;\n  charParam: string;\n  align: Side;\n  theme: string;\n}\n\n// Some characters have their faces to the right so it get cut off\n// so adjust the alignment so you can properly see their faces.\nconst RIGHT_CHAR_ALIGNMENT = new Map<Character, string>();\nRIGHT_CHAR_ALIGNMENT.set(Character.BOWSER, \"right top\");\nRIGHT_CHAR_ALIGNMENT.set(Character.SHEIK, \"right top\");\nRIGHT_CHAR_ALIGNMENT.set(Character.ROY, \"left 80%\");\n\nfunction getAlignment(facing: Side, char: string, defaultAlignment: string): string {\n  if (facing === \"left\") {\n    return defaultAlignment;\n  }\n\n  // We so far only care about the right hand side of the VS-screen\n  const customCharAlign = RIGHT_CHAR_ALIGNMENT.get(+char);\n  if (customCharAlign) {\n    return customCharAlign;\n  }\n\n  return defaultAlignment;\n}\n\nexport const CharDisplay: React.FC<CharDisplayProps> = (props) => {\n  const { colorParam, charParam, align, theme } = props;\n  const [color] = useParam(colorParam);\n  const [char] = useParam(charParam);\n  const facing: Side = align === \"left\" ? \"right\" : \"left\";\n  const imgSrc = getCharacterVSScreen(facing, char, color);\n  const alignment = getAlignment(facing, char, `${align} top`);\n  return (\n    <div\n      css={css`\n        height: 80%;\n        width: 100%;\n        position: relative;\n        background: radial-gradient(circle at center -30%, ${theme}, transparent);\n        &::after {\n          content: ' ';\n          position: absolute;\n          height: 100%;\n          width: 100%;\n          background-image: url(\"${imgSrc}\");\n          background-repeat: no-repeat;\n          background-size: cover;\n          background-position: ${alignment};\n        }\n      `}\n    ></div>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Block = styled.div<{\n  color: string;\n  backgroundColor: string;\n}>`\n  color: ${(p) => p.color};\n  background-color: ${(p) => p.backgroundColor};\n  text-align: center;\n  padding: 0.3em 0;\n  font-size: 1.2em;\n  box-shadow: 0.2em 0.2em 0.2em black;\n`;\n","// From: https://dev.to/joelmturner/build-an-inline-edit-text-input-with-react-hooks-4nah\n\nimport \"./index.scss\";\n\nimport { useKeyPress, useOnClickOutside } from \"lib/hooks\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nexport interface InlineEditProps {\n  text: string;\n  textAlign?: \"left\" | \"right\";\n  onSetText: (text: string) => void;\n  onBlur?: () => void;\n  onFocus?: () => void;\n  placeholder?: string;\n}\n\nexport const InlineEdit: React.FC<InlineEditProps> = (props) => {\n  const { text, onSetText, textAlign, placeholder } = props;\n  const [isInputActive, _setIsInputActive] = useState(false);\n  const [inputValue, setInputValue] = useState(text);\n\n  const setIsInputActive = React.useCallback(\n    (isActive: boolean) => {\n      if (isActive !== isInputActive) {\n        // Value has changed\n        if (isActive && props.onFocus) {\n          props.onFocus();\n        }\n\n        if (!isActive && props.onBlur) {\n          props.onBlur();\n        }\n      }\n      _setIsInputActive(isActive);\n    },\n    [isInputActive, props]\n  );\n\n  const wrapperRef = useRef(null);\n  const textRef = useRef(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const tab = useKeyPress(\"Tab\");\n  const enter = useKeyPress(\"Enter\");\n  const esc = useKeyPress(\"Escape\");\n\n  useEffect(() => {\n    setInputValue(text);\n  }, [text]);\n\n  // check to see if the user clicked outside of this component\n  useOnClickOutside(wrapperRef, () => {\n    if (isInputActive) {\n      onSetText(inputValue);\n      setIsInputActive(false);\n    }\n  });\n\n  // focus the cursor in the input field on edit start\n  useEffect(() => {\n    if (isInputActive && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isInputActive]);\n\n  useEffect(() => {\n    if (isInputActive) {\n      // if Enter or tab is pressed, save the text and case the editor\n      if (enter || tab) {\n        onSetText(inputValue);\n        setIsInputActive(false);\n      }\n      // if Escape is pressed, revert the text and close the editor\n      if (esc) {\n        setInputValue(props.text);\n        setIsInputActive(false);\n      }\n    }\n  }, [tab, enter, esc, isInputActive, onSetText, setIsInputActive, inputValue, props.text]); // watch for key presses\n\n  return (\n    <span className=\"inline-text\" ref={wrapperRef}>\n      <span\n        ref={textRef}\n        onClick={() => setIsInputActive(true)}\n        className={`inline-text_copy inline-text_copy--${!isInputActive ? \"active\" : \"hidden\"}`}\n      >\n        {props.text || placeholder}\n      </span>\n      <input\n        ref={inputRef}\n        style={{ textAlign, maxWidth: \"100%\" }}\n        value={inputValue}\n        onChange={(e) => {\n          setInputValue(e.target.value);\n        }}\n        className={`inline-text_input inline-text_input--${isInputActive ? \"active\" : \"hidden\"}`}\n      />\n    </span>\n  );\n};\n\nInlineEdit.defaultProps = {\n  text: \"\",\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onSetText: () => {},\n};\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { hasOpacity } from \"styles/opacity\";\n\nimport { InlineEdit } from \"../InlineEdit\";\nimport { Block } from \"./Block\";\n\nexport interface EditBlockProps {\n  color: string;\n  backgroundColor: string;\n  value: string;\n  placeholder?: string;\n  onEdit: (val: string) => void;\n}\n\nexport const EditBlock: React.FC<EditBlockProps> = ({ onEdit, backgroundColor, value, color }) => {\n  return (\n    <Block color={color} backgroundColor={backgroundColor}>\n      <InlineEdit text={value} onSetText={onEdit} />\n    </Block>\n  );\n};\n\nconst OptionalBlock = styled(Block)<{\n  show?: boolean;\n}>`\n  ${(p) => hasOpacity(p.show ? 1 : 0)};\n  position: relative;\n  &:hover {\n    z-index: 10;\n  }\n`;\n\nexport const OptionalEditBlock: React.FC<EditBlockProps> = ({ onEdit, backgroundColor, value, color, placeholder }) => {\n  const [focused, setFocused] = React.useState(false);\n  const show = focused || Boolean(value);\n  return (\n    <OptionalBlock show={show} color={color} backgroundColor={backgroundColor}>\n      <InlineEdit\n        text={value}\n        onSetText={onEdit}\n        onFocus={() => setFocused(true)}\n        onBlur={() => setFocused(false)}\n        placeholder={placeholder}\n      />\n    </OptionalBlock>\n  );\n};\n\nOptionalEditBlock.defaultProps = {\n  placeholder: \"click to edit\",\n};\n","import styled from \"@emotion/styled\";\nimport { OptionalEditBlock } from \"components/Block\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nconst Name = styled.div`\n  font-size: 150%;\n  font-weight: 800;\n`;\n\nconst Subtitle = styled.div<{\n  show?: boolean;\n}>`\n  margin-top: -0.3rem;\n  margin-left: auto;\n  margin-right: auto;\n  width: 80%;\n  font-weight: 600;\n`;\n\nexport interface NameBlockProps {\n  nameParam: string;\n  subtitleParam: string;\n  primaryColor: string;\n}\n\nexport const NameBlock: React.FC<NameBlockProps> = ({ nameParam, subtitleParam, primaryColor }) => {\n  const [name, setName] = useParam(nameParam);\n  const [sub, setSub] = useParam(subtitleParam);\n  return (\n    <div>\n      <Name>\n        <OptionalEditBlock value={name} onEdit={setName} color=\"white\" backgroundColor={primaryColor} />\n      </Name>\n      <Subtitle>\n        <OptionalEditBlock value={sub} onEdit={setSub} color=\"black\" backgroundColor=\"white\" />\n      </Subtitle>\n    </div>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport { getCharacterPortrait } from \"lib/resources\";\nimport React from \"react\";\n\nconst Outer = styled.div<{\n  borderColor: string;\n  onClick?: () => void;\n}>`\n  position: relative;\n  display: block;\n  border: solid 0.1rem ${(p) => p.borderColor};\n  height: 5rem;\n  width: 100%;\n  max-width: 10rem;\n  ${(p) => (p.onClick ? \"cursor: pointer;\" : \"\")}\n`;\n\nconst BaseHeadImage = styled.div`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  &::after {\n    content: \" \";\n    height: 100%;\n    background-repeat: no-repeat;\n    background-size: cover;\n    position: absolute;\n  }\n`;\n\nconst HeadImage = styled(BaseHeadImage)<{\n  backgroundColor?: string;\n  imageSrc: string;\n  side: \"left\" | \"right\";\n  waypoint: number;\n  dim?: boolean;\n}>`\n  ${(p) => {\n    const invWaypoint = 100 - p.waypoint;\n    return `\n      ${p.side === \"right\" ? `clip-path: polygon(${p.waypoint}% 0, 100% 0, 100% 100%, ${invWaypoint}% 100%);` : \"\"}\n      ${p.dim ? \"filter: brightness(25%);\" : \"\"}\n      ${p.backgroundColor ? `background: radial-gradient(circle at center -30%, ${p.backgroundColor}, black);` : \"\"}\n      &::after {\n        width: ${p.waypoint}%;\n        background-image: url(\"${p.imageSrc}\");\n        background-position: top ${p.side};\n        ${p.side === \"right\" ? `left: ${invWaypoint}%;` : \"transform: scaleX(-1);\"}\n      }\n    `;\n  }}\n`;\n\nexport interface HeadToHeadProps {\n  char1: number | string;\n  color1: string;\n  result1: string;\n  char2: number | string;\n  color2: string;\n  result2: string;\n  leftColor: string;\n  rightColor: string;\n  borderColor?: string;\n  onClick?: () => void;\n}\n\nexport const HeadToHead: React.FC<HeadToHeadProps> = ({\n  char1,\n  color1,\n  result1,\n  char2,\n  color2,\n  result2,\n  leftColor,\n  rightColor,\n  borderColor,\n  onClick,\n}) => {\n  const waypoint = 55;\n  const p1 = getCharacterPortrait(char1, color1);\n  const p2 = getCharacterPortrait(char2, color2);\n\n  const clickHandler = () => {\n    if (onClick) {\n      onClick();\n    }\n  };\n\n  return (\n    <Outer borderColor={borderColor || \"transparent\"} onClick={clickHandler}>\n      <HeadImage backgroundColor={leftColor} imageSrc={p1} waypoint={waypoint} side=\"left\" dim={result1 === \"loser\"} />\n      <HeadImage\n        backgroundColor={rightColor}\n        imageSrc={p2}\n        waypoint={waypoint}\n        side=\"right\"\n        dim={result2 === \"loser\"}\n      />\n    </Outer>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport { getStageIcon } from \"lib/resources\";\nimport React from \"react\";\n\nconst Text = styled.span`\n  font-size: 2.5rem;\n  font-weight: bold;\n  opacity: 0.7;\n  text-shadow: 2px 2px 2px black;\n`;\n\nconst Outer = styled.div<{\n  src: string;\n  borderColor: string;\n}>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  height: 9rem;\n  width: 100%;\n  border: solid 1px ${(p) => p.borderColor};\n  z-index: 0;\n\n  &::after {\n    content: ' ';\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-image: url(\"${(p) => p.src}\");\n    background-repeat: no-repeat;\n    background-size: 105% auto;\n    background-position: center;\n    filter: blur(2px) brightness(30%);\n    z-index: -1;\n  }\n`;\n\ninterface StageTimerProps {\n  stageId: string | number;\n  duration: string;\n  borderColor?: string;\n}\n\nexport const StageTimer: React.FC<StageTimerProps> = ({ stageId, duration, borderColor }) => {\n  const stageIcon = getStageIcon(stageId);\n  return (\n    <Outer src={stageIcon} borderColor={borderColor || \"transparent\"}>\n      <Text>{duration}</Text>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { HeadToHead } from \"components/HeadToHead\";\nimport { StageTimer } from \"components/StageTimer\";\nimport { GameInfo } from \"lib/hooks\";\nimport React from \"react\";\n\nexport interface GameResultProps {\n  gameInfo: GameInfo | null;\n  onGameInfoChange: (info: Partial<GameInfo>) => void;\n  leftColor: string;\n  rightColor: string;\n  winningSide?: string;\n}\n\nconst switchResult = (res: string): string => {\n  return res === \"winner\" ? \"loser\" : res === \"loser\" ? \"winner\" : res;\n};\n\nexport const GameResult: React.FC<GameResultProps> = (props) => {\n  const { gameInfo, onGameInfoChange } = props;\n  if (!gameInfo) {\n    return null;\n  }\n\n  const gameWinner = gameInfo.result1 === \"winner\" ? \"left\" : gameInfo.result2 === \"winner\" ? \"right\" : \"\";\n  const highlight = props.winningSide === gameWinner;\n\n  const { stageId, duration, ...rest } = gameInfo;\n  const borderColor = `rgba(255, 255, 255, ${highlight ? 1 : 0.2})`;\n\n  const onClick = () => {\n    onGameInfoChange({\n      result1: switchResult(gameInfo.result1),\n      result2: switchResult(gameInfo.result2),\n    });\n  };\n\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-template-columns: 100%;\n        justify-items: center;\n        width: 100%;\n        max-width: 18rem;\n        grid-row-gap: 2rem;\n      `}\n    >\n      <HeadToHead\n        onClick={onClick}\n        leftColor={props.leftColor}\n        rightColor={props.rightColor}\n        borderColor={borderColor}\n        {...rest}\n      />\n      <StageTimer stageId={stageId} duration={duration} borderColor={borderColor} />\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { GameInfo } from \"lib/hooks\";\nimport React from \"react\";\n\nimport { GameResult } from \"./GameResult\";\n\nexport const GameDisplay: React.FC<{\n  games: Array<GameInfo | null>;\n  updateGameInfo: (gameNumber: number, gameInfo: Partial<GameInfo>) => void;\n  leftColor: string;\n  rightColor: string;\n  winningSide?: string;\n}> = (props) => {\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-column-gap: 2rem;\n        grid-template-columns: repeat(${props.games.length}, 1fr);\n        justify-items: center;\n      `}\n    >\n      {props.games.map((game, i) => (\n        <GameResult\n          key={`game${i}`}\n          gameInfo={game}\n          onGameInfoChange={(info) => props.updateGameInfo(i + 1, info)}\n          leftColor={props.leftColor}\n          rightColor={props.rightColor}\n          winningSide={props.winningSide}\n        />\n      ))}\n    </div>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Divider = styled.div`\n  content: \" \";\n  display: block;\n  height: 0.1rem;\n  width: 100%;\n  margin-top: 0.7rem;\n  background-color: rgba(255, 255, 255, 0.05);\n`;\n","import styled from \"@emotion/styled\";\nimport { hasOpacity } from \"styles/opacity\";\n\nexport const StatDisplayItem = styled.div<{\n  hasItem: boolean;\n  isDragging?: boolean;\n  isDraggingOver?: boolean;\n}>`\n  padding: 1rem 0;\n  user-select: none;\n  .remove {\n    display: none;\n    position: absolute;\n    top: -20%;\n    right: 20%;\n    padding: 0.5rem 1.5rem;\n    color: black;\n    background-color: white;\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n    font-weight: 600;\n    transition: all 0.2s ease-in-out;\n    cursor: pointer;\n    ${hasOpacity(0.4, 0.8)}\n  }\n  ${(p) =>\n    !p.hasItem || p.isDraggingOver\n      ? \"\"\n      : `\n  &:hover {\n    .remove {\n      display: block;\n    }\n  };\n  `}\n`;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport { Block } from \"./Block\";\n\nexport interface StatProps {\n  label: string;\n  color: string;\n  backgroundColor: string;\n  leftComponent: React.ReactNode;\n  rightComponent: React.ReactNode;\n}\n\nconst StatLabel = styled(Block)`\n  padding: 0.3em 2.5em;\n  font-weight: 700;\n  font-size: 1.2em;\n  justify-self: center;\n`;\n\nconst StatContent = styled.div`\n  width: 100%;\n  font-weight: 800;\n  font-size: 2.3em;\n`;\n\nconst TextContent = styled(StatContent)`\n  font-size: 1.4em;\n`;\n\nconst OuterStat = styled.div`\n  display: grid;\n  grid-template-columns: 20% 60% 20%;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.4), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nconst Stat: React.FC<StatProps & Record<string, any>> = (props) => {\n  const { label, backgroundColor, color, leftComponent, rightComponent, children, ...rest } = props;\n  return (\n    <OuterStat>\n      <div\n        css={css`\n          width: 100%;\n          justify-self: start;\n        `}\n      >\n        {leftComponent}\n      </div>\n      <StatLabel backgroundColor={backgroundColor} color={color} {...rest}>\n        {label}\n      </StatLabel>\n      <div\n        css={css`\n          width: 100%;\n          justify-self: end;\n          text-align: right;\n        `}\n      >\n        {rightComponent}\n      </div>\n    </OuterStat>\n  );\n};\n\nStat.defaultProps = {\n  color: \"black\",\n  backgroundColor: \"white\",\n};\n\nexport const NumberStat: React.FC<StatProps> = (props) => {\n  const { leftComponent, rightComponent, ...rest } = props;\n  return (\n    <Stat\n      leftComponent={<StatContent>{leftComponent}</StatContent>}\n      rightComponent={<StatContent>{rightComponent}</StatContent>}\n      {...rest}\n    />\n  );\n};\n\nexport const TextStat: React.FC<StatProps> = (props) => {\n  const { leftComponent, rightComponent, ...rest } = props;\n  return (\n    <Stat\n      leftComponent={<TextContent>{leftComponent}</TextContent>}\n      rightComponent={<TextContent>{rightComponent}</TextContent>}\n      {...rest}\n    />\n  );\n};\n","import { InlineEdit } from \"components/InlineEdit\";\nimport { NumberStat, TextStat } from \"components/Stat\";\nimport { useParam } from \"lib/hooks\";\nimport { STAT_DEFINITIONS } from \"lib/stats\";\nimport React from \"react\";\nimport { Theme } from \"styles/theme\";\n\ninterface ConnectedStatProps {\n  param1: string;\n  param2: string;\n  label: string;\n}\n\nconst ConnectedNumberStat: React.FC<ConnectedStatProps & Record<string, any>> = (props) => {\n  const { param1, param2, label, children, ...rest } = props;\n  const defaultValue = \"0\";\n  const [field1, setField1] = useParam(param1, defaultValue);\n  const [field2, setField2] = useParam(param2, defaultValue);\n  return (\n    <NumberStat\n      label={label}\n      color=\"black\"\n      backgroundColor=\"white\"\n      leftComponent={<InlineEdit text={field1} onSetText={setField1} />}\n      rightComponent={<InlineEdit text={field2} textAlign=\"right\" onSetText={setField2} />}\n      {...rest}\n    />\n  );\n};\n\nconst ConnectedTextStat: React.FC<ConnectedStatProps & Theme & Record<string, any>> = (props) => {\n  const { param1, param2, label, primaryColor, children, ...rest } = props;\n  const defaultValue = \"-\";\n  const [field1, setField1] = useParam(param1, defaultValue);\n  const [field2, setField2] = useParam(param2, defaultValue);\n  return (\n    <TextStat\n      label={label}\n      color=\"white\"\n      backgroundColor={primaryColor}\n      leftComponent={<InlineEdit text={field1} onSetText={setField1} />}\n      rightComponent={<InlineEdit text={field2} textAlign=\"right\" onSetText={setField2} />}\n      {...rest}\n    />\n  );\n};\n\nexport const Statistic: React.FC<\n  {\n    theme: Theme;\n    statId: string;\n  } & Record<string, any>\n> = (props) => {\n  const { statId, theme, children, ...rest } = props;\n  const statInfo = STAT_DEFINITIONS.get(statId);\n  if (!statInfo) {\n    return null;\n  }\n\n  const { name, type } = statInfo;\n  const label = (name as string).toUpperCase();\n  if (type === \"number\") {\n    return <ConnectedNumberStat param1={`${statId}1`} param2={`${statId}2`} label={label} {...rest} />;\n  } else if (type === \"text\") {\n    return <ConnectedTextStat param1={`${statId}1`} param2={`${statId}2`} label={label} {...theme} {...rest} />;\n  }\n\n  return null;\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { reorder } from \"lib/util\";\nimport React from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Theme } from \"styles/theme\";\n\nimport { Divider } from \"./Divider\";\nimport { StatDisplayItem } from \"./StatDisplayItem\";\nimport { Statistic } from \"./Statistic\";\n\ninterface StatDisplayListProps {\n  theme: Theme;\n  stats: string;\n  setStats: (s: string) => void;\n}\n\nexport const StatDisplayList: React.FC<StatDisplayListProps> = (props) => {\n  const { theme, stats, setStats } = props;\n  const [items, setItems] = React.useState<string[]>(stats.split(\",\"));\n  React.useEffect(() => {\n    setItems(stats.split(\",\"));\n  }, [stats]);\n\n  const updateStats = (statIds: string[]) => {\n    // First update the local state\n    setItems(statIds);\n    // Then update the URL state\n    setStats(statIds.join(\",\"));\n  };\n\n  const onDragEnd = (result: any) => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n    const newItems = reorder(items, result.source.index, result.destination.index);\n    updateStats(newItems);\n  };\n\n  const onRemove = (statId: string) => {\n    const newItems = items.filter((s) => s !== statId);\n    updateStats(newItems);\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"droppable\">\n        {(dropProvided, dropSnapshot) => (\n          <div\n            {...dropProvided.droppableProps}\n            ref={dropProvided.innerRef}\n            css={css`\n              margin: -1rem 0;\n            `}\n          >\n            {items.map((item, index) => {\n              const key = item ? item : \"divider\";\n              return (\n                <Draggable key={key} draggableId={key} index={index}>\n                  {(dragProvided, dragSnapshot) => {\n                    const additionalStyles = item ? null : dragProvided.dragHandleProps;\n                    return (\n                      <StatDisplayItem\n                        ref={dragProvided.innerRef}\n                        hasItem={Boolean(item)}\n                        isDraggingOver={dropSnapshot.isDraggingOver}\n                        {...dragProvided.draggableProps}\n                        {...additionalStyles}\n                        style={dragProvided.draggableProps.style}\n                      >\n                        {item ? (\n                          <div\n                            css={css`\n                              position: relative;\n                            `}\n                          >\n                            <Statistic statId={item} theme={theme} {...dragProvided.dragHandleProps} />\n                            <div className=\"remove\" onClick={() => onRemove(item)}>\n                              ✕\n                              <span\n                                css={css`\n                                  margin-left: 1rem;\n                                `}\n                              >\n                                REMOVE\n                              </span>\n                            </div>\n                          </div>\n                        ) : (\n                          <Divider />\n                        )}\n                      </StatDisplayItem>\n                    );\n                  }}\n                </Draggable>\n              );\n            })}\n            {dropProvided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { Block } from \"components/Block\";\nimport { GameDisplay } from \"components/GameDisplay\";\nimport { useGames, useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nimport { Divider } from \"./Divider\";\nimport { StatDisplayList } from \"./StatDisplayList\";\n\nconst ScoreBlock = styled(Block)`\n  padding: 0.5rem 4rem;\n  font-size: 5rem;\n  font-weight: 800;\n  position: absolute;\n  bottom: -6rem;\n  left: 50%;\n  transform: translateX(-50%);\n`;\n\nexport const StatDisplay: React.FC<{\n  primaryColor: string;\n  secondaryColor: string;\n  leftColor: string;\n  rightColor: string;\n}> = (props) => {\n  const { games, score, setGame } = useGames();\n  const [stats, setStats] = useParam(\"stats\");\n  const winningSide = score.left > score.right ? \"left\" : score.right > score.left ? \"right\" : \"\";\n  const { leftColor, rightColor, ...theme } = props;\n\n  return (\n    <div\n      css={css`\n        background: linear-gradient(to right, ${props.secondaryColor}, transparent, ${props.secondaryColor});\n        width: 100%;\n      `}\n    >\n      <div\n        css={css`\n          display: grid;\n          grid-template-columns: 100%;\n          grid-row-gap: 2rem;\n          margin: 4rem;\n        `}\n      >\n        <StatDisplayList stats={stats} setStats={setStats} theme={theme} />\n        <Divider />\n        <GameDisplay\n          games={games}\n          updateGameInfo={setGame}\n          winningSide={winningSide}\n          leftColor={leftColor}\n          rightColor={rightColor}\n        />\n      </div>\n      <ScoreBlock color=\"white\" backgroundColor={props.primaryColor}>\n        {`${score.left} - ${score.right}`}\n      </ScoreBlock>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport interface GameInfo {\n  stageId: string;\n  duration: string;\n  char1: string;\n  color1: string;\n  result1: string;\n  char2: string;\n  color2: string;\n  result2: string;\n}\n\nexport function useGames() {\n  const [games, setGames] = useState<Array<GameInfo | null>>([]);\n  const [score, setScore] = useState<{ left: number; right: number }>({ left: 0, right: 0 });\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const gt = params.get(\"gt\") || \"0\";\n    const totalGames = parseInt(gt, 10) || 0;\n\n    let char1Score = 0;\n    let char2Score = 0;\n\n    const gameInfos: Array<GameInfo | null> = [];\n\n    for (let i = 1; i <= totalGames; i++) {\n      const gameInfoString = params.get(`g${i}`);\n\n      if (!gameInfoString) {\n        // Game is undefined\n        gameInfos.push(null);\n        continue;\n      }\n\n      // Generate the game info\n      const [stageId, duration, char1, color1, result1, char2, color2, result2] = gameInfoString.split(\",\");\n      gameInfos.push({\n        stageId,\n        duration,\n        char1,\n        color1,\n        result1,\n        char2,\n        color2,\n        result2,\n      });\n\n      // Update the scores\n      if (result1 === \"winner\") {\n        char1Score += 1;\n      }\n\n      if (result2 === \"winner\") {\n        char2Score += 1;\n      }\n    }\n\n    setGames(gameInfos);\n    setScore({ left: char1Score, right: char2Score });\n  }, [location]);\n\n  const setParam = (gameNumber: number, val: Partial<GameInfo>) => {\n    const currentGameData = games[gameNumber - 1];\n    const newValues = Object.assign({}, currentGameData, val);\n    const { stageId, duration, char1, color1, result1, char2, color2, result2 } = newValues;\n    const infoString = [stageId, duration, char1, color1, result1, char2, color2, result2].join(\",\");\n\n    const params = new URLSearchParams(location.search);\n    params.set(`g${gameNumber}`, infoString);\n    const search = \"?\" + params.toString();\n    history.push({\n      pathname: location.pathname,\n      search,\n    });\n  };\n\n  return {\n    games,\n    score,\n    setGame: setParam,\n  };\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useParam } from \"lib/hooks\";\nimport { PortColor } from \"lib/portColor\";\nimport React from \"react\";\nimport { Theme } from \"styles/theme\";\n\nimport { CharDisplay } from \"./CharDisplay\";\nimport { NameBlock } from \"./NameBlock\";\nimport { StatDisplay } from \"./StatDisplay\";\n\nconst Outer = styled.div`\n  position: relative;\n  width: 100%;\n  display: grid;\n  grid-template-columns: 20% 60% 20%;\n`;\n\nconst NameBlockContainer = styled.div<{\n  align: \"left\" | \"right\";\n}>`\n  ${(p) => `\n  width: 20%;\n  position: absolute;\n  ${p.align}: 0;\n  margin-${p.align}: 2rem;\n  bottom: 15%;\n  `}\n`;\n\nexport const RenderDisplay: React.FC<Theme> = (theme) => {\n  const [leftColor] = useParam(\"leftColor\", PortColor.P1);\n  const [rightColor] = useParam(\"rightColor\", PortColor.P2);\n  return (\n    <Outer>\n      <div\n        css={css`\n          justify-self: end;\n          width: 100%;\n        `}\n      >\n        <CharDisplay theme={leftColor} charParam=\"char1\" colorParam=\"color1\" align=\"right\" />\n      </div>\n      <StatDisplay leftColor={leftColor} rightColor={rightColor} {...theme} />\n      <div\n        css={css`\n          width: 100%;\n        `}\n      >\n        <CharDisplay theme={rightColor} charParam=\"char2\" colorParam=\"color2\" align=\"left\" />\n      </div>\n      <NameBlockContainer align=\"left\">\n        <NameBlock nameParam=\"name1\" subtitleParam=\"sub1\" {...theme} />\n      </NameBlockContainer>\n      <NameBlockContainer align=\"right\">\n        <NameBlock nameParam=\"name2\" subtitleParam=\"sub2\" {...theme} />\n      </NameBlockContainer>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { ExternalLink as A } from \"components/ExternalLink\";\nimport { Header } from \"components/Header\";\nimport { Options } from \"containers/Options\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GlobalTheme } from \"styles/theme\";\n\nimport { RenderDisplay } from \"../containers/RenderDisplay\";\nimport poweredByImage from \"../styles/images/powered-by.png\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  &:hover {\n    .settings {\n      opacity: 1;\n    }\n  }\n  .settings {\n    opacity: 0;\n    transition: opacity 0.2s ease-in-out;\n  }\n`;\n\nexport const RenderView: React.FC = () => {\n  const [primaryColor] = useParam(\"primaryColor\");\n  const [secondaryColor] = useParam(\"secondaryColor\");\n  return (\n    <div\n      css={css`\n        width: 1700px;\n        height: 980px;\n        margin: 0 auto;\n      `}\n    >\n      <Container>\n        <GlobalTheme primaryColor={primaryColor} secondaryColor={secondaryColor} />\n        <Link to=\"/\" title=\"Home\">\n          <Header>Post Match Stats</Header>\n        </Link>\n        <div\n          css={css`\n            margin-bottom: 2rem;\n          `}\n        >\n          <A href=\"https://slippi.gg\">\n            <img\n              alt=\"Powered by Slippi\"\n              title=\"Open Slippi.gg homepage\"\n              src={poweredByImage}\n              css={css`\n                max-height: 5rem;\n              `}\n            />\n          </A>\n        </div>\n        <RenderDisplay primaryColor={primaryColor} secondaryColor={secondaryColor} />\n        <div className=\"settings\">\n          <Options />\n        </div>\n      </Container>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { hot } from \"react-hot-loader/root\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { RandomView } from \"views/RandomView\";\n\nimport { AppProvider } from \"./store\";\nimport { MainView } from \"./views/MainView\";\nimport { RenderView } from \"./views/RenderView\";\n\nconst App: React.FC = () => {\n  return (\n    <AppProvider>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Route exact path=\"/\" component={MainView} />\n        <Route path=\"/render\" component={RenderView} />\n        <Route path=\"/random\" component={RandomView} />\n      </Router>\n    </AppProvider>\n  );\n};\n\nexport default hot(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./index.scss\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import styled from \"@emotion/styled\";\nimport { hasOpacity } from \"styles/opacity\";\n\nexport const PrimaryButton = styled.button<{\n  backgroundColor: string;\n  color: string;\n}>`\n  background: ${(p) => p.backgroundColor};\n  border: none;\n  color: ${(p) => p.color};\n  cursor: pointer;\n  font: inherit;\n  padding: 1rem 0rem;\n  width: 100%;\n  font-weight: 700;\n  font-size: 3rem;\n  opacity: 0.8;\n  transition: opacity 0.2s ease-in-out;\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n  &:hover:enabled {\n    opacity: 1;\n  }\n`;\n\nexport const SecondaryButton = styled.div`\n  text-align: center;\n  margin-top: 0.5rem;\n  font-size: 1.4rem;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n  ${hasOpacity(0.5)}\n`;\n","import { FrameEntryType, FramesType, GameEndType, GameStartType, MetadataType, StatsType } from \"@slippi/slippi-js\";\n\nexport enum Stat {\n  OPENINGS_PER_KILL = \"opk\",\n  DAMAGE_PER_OPENING = \"dpo\",\n  NEUTRAL_WINS = \"nw\",\n  KILL_MOVES = \"mckm\",\n  NEUTRAL_OPENER_MOVES = \"mcno\",\n  INPUTS_PER_MINUTE = \"ipm\",\n  AVG_KILL_PERCENT = \"akp\",\n  DAMAGE_DONE = \"tdd\",\n  EARLY_KILLS = \"ek\",\n  LATE_DEATHS = \"ld\",\n  SELF_DESTRUCTS = \"sd\",\n  HIGH_DAMAGE_PUNISHES = \"hdp\",\n\n  // Custom\n  FIRST_BLOOD = \"fb\",\n  L_CANCEL = \"lc\",\n}\n\nexport interface GameDetails {\n  filePath: string;\n  settings: GameStartType;\n  frames: FramesType;\n  stats: StatsType;\n  metadata: MetadataType;\n  latestFrame: FrameEntryType | null;\n  gameEnd: GameEndType | null;\n}\n\nexport interface StatCalculationResult {\n  result: any;\n  simple: any;\n}\n\nexport type StatCalculation = (games: GameDetails[], playerIndex: number) => StatCalculationResult;\n\nexport interface StatDefinition {\n  name: string;\n  type: string;\n  betterDirection?: string;\n  recommendedRounding?: number;\n  calculate: StatCalculation;\n}\n","import { FrameEntryType } from \"@slippi/slippi-js\";\n\n/**\n * Given the last frame of the game, determine the winner first based on stock count\n * then based on remaining percent.\n * If percents are tied, return the player with the lower port number by default.\n *\n * @returns the player index of the winner\n */\nexport const findWinner = (lastFrame: FrameEntryType): number => {\n  const postFrameEntries = Object.keys(lastFrame.players).map((i: any) => (lastFrame.players[i] as any).post);\n  const winnerPostFrame = postFrameEntries.reduce((a, b) => {\n    // Determine winner based on stock count\n    if (a.stocksRemaining > b.stocksRemaining) {\n      return a;\n    }\n    if (a.stocksRemaining < b.stocksRemaining) {\n      return b;\n    }\n\n    // Stocks are the same so determine winner based off remaining percent\n    if (a.percent < b.percent) {\n      return a;\n    }\n    if (a.percent > b.percent) {\n      return b;\n    }\n\n    // Just return a by default\n    return a;\n  });\n\n  return winnerPostFrame.playerIndex;\n};\n"],"sourceRoot":""}