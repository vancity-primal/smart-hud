{"version":3,"sources":["lib/winner.ts","styles/images/obs.png","lib/readFile.ts","styles/images/powered-by.png","lib/stats.js","lib/demo.ts","styles/theme.tsx","lib/searchParams.ts","views/RandomView.tsx","store/reducers.ts","store/context.tsx","components/ExternalLink.tsx","components/Header.tsx","components/DropPad.tsx","components/ErrorMessage.tsx","lib/resources.ts","styles/opacity.ts","components/FileList/FileItem.tsx","components/FileList/index.tsx","lib/portColor.ts","lib/processStats.ts","containers/FileListInput.tsx","views/MainView.tsx","components/CopyToClipboard.tsx","components/OBSDragButton.tsx","lib/hooks/useParam.ts","lib/hooks/useKeyPress.ts","lib/hooks/useOnClickOutside.ts","components/ColorPicker/ColorPicker.tsx","components/ColorPicker/DualColorPicker.tsx","containers/Options/Panel.tsx","containers/Options/index.tsx","containers/CharDisplay.tsx","components/Block/Block.tsx","components/InlineEdit/index.tsx","components/Block/EditBlock.tsx","containers/NameBlock.tsx","components/HeadToHead.tsx","components/StageTimer.tsx","components/GameDisplay/GameResult.tsx","components/GameDisplay/index.tsx","components/Stat.tsx","containers/StatDisplay/Statistics.tsx","containers/StatDisplay/index.tsx","lib/hooks/useGames.ts","containers/RenderDisplay.tsx","views/RenderView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["findWinner","lastFrame","Object","keys","players","map","i","post","reduce","a","b","stocksRemaining","percent","playerIndex","module","exports","readFileAsGameDetails","file","readFileAsSlippiGame","game","generateGameDetails","name","readFileAsArrayBuffer","data","arr","Int8Array","buf","Buffer","from","SlippiGame","settings","getSettings","Error","filePath","frames","getFrames","stats","getStats","metadata","getMetadata","latestFrame","getLatestFrame","gameEnd","getGameEnd","Promise","resolve","reject","fr","FileReader","onabort","onerror","readAsBinaryString","addEventListener","string","this","resultString","result","Uint8Array","length","charCodeAt","buffer","readAsArrayBuffer","require","stageUtil","stages","moveUtil","moves","characterUtil","characters","moment","_","OPENINGS_PER_KILL","DAMAGE_PER_OPENING","NEUTRAL_WINS","KILL_MOVES","NEUTRAL_OPENER_MOVES","EARLY_KILLS","LATE_DEATHS","SELF_DESTRUCTS","INPUTS_PER_MINUTE","AVG_KILL_PERCENT","HIGH_DAMAGE_PUNISHES","DAMAGE_DONE","statDefininitions","id","type","betterDirection","recommendedRounding","calculate","games","genOverallRatioStat","killMoves","flatMap","conversions","get","conversionsForPlayer","filter","conversion","isForPlayer","didKill","last","killMovesByMove","groupBy","killMoveCounts","move","first","count","moveId","getMoveName","shortName","getMoveShortName","orderedKillMoveCounts","orderBy","topKillMove","simpleText","simple","text","neutralMoves","isNeutralWin","openingType","neutralMovesByMove","neutralMoveCounts","orderedNeutralMoveCounts","topNeutralMove","oppStocks","stocks","stock","isOpp","hasEndPercent","endPercent","orderedOppStocks","earliestKillStock","number","toFixed","take","playerStocks","isPlayer","orderedPlayerStocks","latestDeathStock","sdCounts","playerEndedStocks","oppKillConversions","sdSum","sum","total","sumBy","ratio","genSimpleFromRatio","punishes","getDamageDone","punish","startPercent","orderedPunishes","topPunish","field","fixedNum","statRatios","overallStats","keyBy","avg","averageRatios","ratios","computeStats","firstGame","orderIndices","indices","chain","clone","reverse","value","statKey","def","results","iIndices","port","output","generateGameInfo","orderedGames","startAt","generatePlayerInfo","player","characterId","characterColor","nametag","characterName","getCharacterName","getCharacterColorName","getResultForPlayer","playerInfoGen","stage","stageId","getStageName","startTime","duration","convertFrameCountToDurationString","generateBtsSummary","summary","fixedStats","generateSummaryItem","fullStatOutput","statsById","statsToRandomizeById","forEach","statId","statOutput","push","sdStat","sds1","sds2","shuffled","shuffle","shuffledToInclude","frameCount","utc","as","format","getRandomArbitrary","min","max","Math","random","getRandomInt","ceil","floor","generateDemoValues","paramMap","generateRandomCharacter","char1","color1","char2","color2","totalGames","gt","gameKey","leftWillWin","gameValue","generateRandomGame","join","key","toUpperCase","generateRandomMove","charId","charInfo","getCharacterInfo","colorIndex","colors","LEGAL_STAGE_IDS","playerInfos","stageIndex","generateRandomStageId","defaultTheme","primaryColor","secondaryColor","GlobalTheme","styles","css","generateSearchParams","params","restoredParams","res","localStorage","getItem","getStoredValues","URLSearchParams","Types","RandomView","search","toString","to","pathname","initialState","files","AppContext","createContext","state","dispatch","mainReducer","action","SET_DETAILS","payload","filename","details","fileToReplace","findIndex","f","loading","SET_ERROR","error","ADD_FILES","currentFiles","newFiles","find","existingFile","REMOVE_FILE","CLEAR_ALL","reducer","AppProvider","children","useReducer","Provider","ExternalLink","props","target","rel","Header","styled","h1","Container","div","isDragAccept","isDragActive","getColor","DropPad","useDropzone","getRootProps","getInputProps","isDragReject","ErrorMessage","sanitize","replacement","toLowerCase","replace","getCharacterFolderFromId","color","character","charFolder","colorFolder","process","getCharacterFolderFromName","getCharacterPortrait","folder","hasOpacity","initial","final","transition","BasicFileItem","onRemove","className","onClick","title","CharacterIcon","winner","src","getCharacterStockIcon","style","height","alt","FileItem","message","stageName","frame","winnerIndex","icons","PortColor","FileList","getPortColor","portNumber","P1","P2","P3","P4","extractNameAndCode","playerPort","index","playerTag","netplayName","processStats","gameDetails","filtered","gamesByIsSingles","nonSinglesGames","some","console","log","singlesGames","gamesByPorts","ports","gamesWithSamePorts","shift","flatGames","flatten","isEmpty","filterGames","btsSummary","generateStats","lastGame","leftPlayer","rightPlayer","leftColor","rightColor","lastGameDetails","leftTag","leftCode","rightTag","rightCode","name1","name2","sub1","sub2","gameDuration","playerInfo","p","gameResult","s","opk1","opk2","dpo1","dpo2","nw1","nw2","playerRes","opponentRes","mckm1","mckm2","mcno1","mcno2","ipm1","ipm2","akp1","akp2","tdd1","tdd2","ProcessButton","button","backgroundColor","FileListInput","buttonColor","history","useHistory","useContext","React","useState","setError","onDrop","useCallback","acceptedFiles","Date","getTime","promises","all","then","time","finishedProcessing","buttonText","accept","disabled","err","linkStyle","MainView","href","CopyToClipboard","copied","setCopied","timeoutMs","onCopyTimeoutMs","copyText","onCopyText","onCopy","setTimeout","Draggable","OBSDragButton","wrapperRef","useRef","location","options","window","entries","val","generateLink","onDragStart","e","img","Image","obsImage","dataTransfer","setDragImage","setData","handleDragStart","onDragEnd","blur","handleDragEnd","preventDefault","ref","width","marginRight","useParam","defaultValue","setValue","useLocation","useEffect","currentValue","setParam","set","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","removeEventListener","useOnClickOutside","handler","listener","event","current","contains","document","ColorSquare","size","ResetButton","ColorPicker","onChange","defaultColor","show","setShow","showReset","position","hex","ColorContainer","ColorLabel","DualColorPicker","defaultLeftColor","defaultRightColor","leftLabel","rightLabel","onLeftColorChange","onRightColorChange","DualColorPanel","panelLabel","leftColorParam","leftDefault","rightColorParam","rightDefault","existingLeftColor","existingRightColor","setLeftColor","setRightColor","setItem","Panel","Content","Column","Heading","h2","Outer","Options","open","setOpen","charName1","getCharacterShortName","charName2","obsLayerName","outerRef","RIGHT_CHAR_ALIGNMENT","Map","CharDisplay","colorParam","charParam","align","theme","char","facing","imgSrc","side","getCharacterVSScreen","alignment","defaultAlignment","customCharAlign","getAlignment","Block","InlineEdit","onSetText","textAlign","placeholder","isInputActive","_setIsInputActive","inputValue","setInputValue","setIsInputActive","isActive","onFocus","onBlur","textRef","inputRef","tab","enter","esc","focus","maxWidth","defaultProps","OptionalBlock","OptionalEditBlock","onEdit","focused","setFocused","Boolean","Name","Subtitle","NameBlock","nameParam","subtitleParam","setName","sub","setSub","borderColor","BaseHeadImage","HeadImage","invWaypoint","waypoint","dim","imageSrc","HeadToHead","result1","result2","p1","p2","Text","span","StageTimer","stageIcon","getStageIcon","switchResult","GameResult","gameInfo","onGameInfoChange","gameWinner","highlight","winningSide","rest","GameDisplay","info","updateGameInfo","StatLabel","StatContent","TextContent","OuterStat","Stat","label","leftComponent","rightComponent","NumberStat","TextStat","ConnectedNumberStat","param1","param2","field1","setField1","field2","setField2","ConnectedTextStat","MostCommonKillMove","MostCommonNeutralOpener","AverageKillPercent","NeutralWins","OpeningsPerKill","TotalDamageDone","Divider","ScoreBlock","StatDisplay","setGames","left","right","score","setScore","parseInt","char1Score","char2Score","gameInfos","gameInfoString","split","setGame","gameNumber","currentGameData","newValues","assign","infoString","useGames","NameBlockContainer","RenderDisplay","RenderView","poweredByImage","hot","basename","exact","path","component","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.64b8faec.chunk.js","sourcesContent":["import { FrameEntryType } from \"@slippi/slippi-js\";\n\n/**\n * Given the last frame of the game, determine the winner first based on stock count\n * then based on remaining percent.\n * If percents are tied, return the player with the lower port number by default.\n *\n * @returns the player index of the winner\n */\nexport const findWinner = (lastFrame: FrameEntryType): number => {\n  const postFrameEntries = Object.keys(lastFrame.players).map((i: any) => (lastFrame.players[i] as any).post);\n  const winnerPostFrame = postFrameEntries.reduce((a, b) => {\n    // Determine winner based on stock count\n    if (a.stocksRemaining > b.stocksRemaining) {\n      return a;\n    }\n    if (a.stocksRemaining < b.stocksRemaining) {\n      return b;\n    }\n\n    // Stocks are the same so determine winner based off remaining percent\n    if (a.percent < b.percent) {\n      return a;\n    }\n    if (a.percent > b.percent) {\n      return b;\n    }\n\n    // Just return a by default\n    return a;\n  });\n\n  return winnerPostFrame.playerIndex;\n};\n","module.exports = __webpack_public_path__ + \"static/media/obs.f3f8c219.png\";","import {\n  FrameEntryType,\n  FramesType,\n  GameEndType,\n  GameStartType,\n  MetadataType,\n  SlippiGame,\n  StatsType,\n} from \"@slippi/slippi-js\";\n\nexport interface GameDetails {\n  filePath: string;\n  settings: GameStartType;\n  frames: FramesType;\n  stats: StatsType;\n  metadata: MetadataType;\n  latestFrame: FrameEntryType | null;\n  gameEnd: GameEndType | null;\n}\n\nexport async function readFileAsGameDetails(file: File): Promise<GameDetails> {\n  const game = await readFileAsSlippiGame(file);\n  return generateGameDetails(file.name, game);\n}\n\nasync function readFileAsSlippiGame(file: File): Promise<SlippiGame> {\n  const data = (await readFileAsArrayBuffer(file)) as ArrayBuffer;\n  const arr = new Int8Array(data);\n  const buf = Buffer.from(arr);\n  return new SlippiGame(buf);\n}\n\nfunction generateGameDetails(name: string, game: SlippiGame): GameDetails {\n  // For a valid SLP game, at the very least we should have valid settings\n  const settings = game.getSettings();\n  if (!settings) {\n    throw new Error(`Invalid SLP file. Could not find game settings in file: ${name}`);\n  }\n\n  return {\n    filePath: name,\n    settings,\n    frames: game.getFrames(),\n    stats: game.getStats(),\n    metadata: game.getMetadata(),\n    latestFrame: game.getLatestFrame(),\n    gameEnd: game.getGameEnd(),\n  };\n}\n\nasync function readFileAsArrayBuffer(file: File): Promise<string | ArrayBufferLike> {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onabort = () => reject(\"file reading was aborted\");\n    fr.onerror = () => reject(\"file reading has failed\");\n    if (fr.readAsBinaryString) {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          const string = (this as any).resultString != null ? (this as any).resultString : this.result;\n          const result = new Uint8Array(string.length);\n          for (let i = 0; i < string.length; i++) {\n            result[i] = string.charCodeAt(i);\n          }\n          resolve(result.buffer);\n        },\n        false\n      );\n      fr.readAsBinaryString(file);\n    } else {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          if (this.result) {\n            resolve(this.result);\n          } else {\n            reject(\"no data read\");\n          }\n        },\n        false\n      );\n      fr.readAsArrayBuffer(file);\n    }\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/powered-by.61867ea8.png\";","/* eslint-disable */\n\n/*\n * Taken from: https://github.com/project-slippi/slippi-set-stats/blob/master/main.js\n */\n\nconst { stages: stageUtil, moves: moveUtil, characters: characterUtil } = require(\"@slippi/slippi-js\");\nconst moment = require(\"moment\");\nconst _ = require(\"lodash\");\nconst { findWinner } = require(\"./winner\");\n\nconst stats = {\n  OPENINGS_PER_KILL: \"openingsPerKill\",\n  DAMAGE_PER_OPENING: \"damagePerOpening\",\n  NEUTRAL_WINS: \"neutralWins\",\n  KILL_MOVES: \"killMoves\",\n  NEUTRAL_OPENER_MOVES: \"neutralOpenerMoves\",\n  EARLY_KILLS: \"earlyKills\",\n  LATE_DEATHS: \"lateDeaths\",\n  SELF_DESTRUCTS: \"selfDestructs\",\n  INPUTS_PER_MINUTE: \"inputsPerMinute\",\n  AVG_KILL_PERCENT: \"avgKillPercent\",\n  HIGH_DAMAGE_PUNISHES: \"highDamagePunishes\",\n  DAMAGE_DONE: \"damageDone\",\n};\n\nconst statDefininitions = {\n  [stats.OPENINGS_PER_KILL]: {\n    id: stats.OPENINGS_PER_KILL,\n    name: \"Openings / Kill\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"openingsPerKill\", 1);\n    },\n  },\n  [stats.DAMAGE_PER_OPENING]: {\n    id: stats.DAMAGE_PER_OPENING,\n    name: \"Damage / Opening\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", 1);\n    },\n  },\n  [stats.NEUTRAL_WINS]: {\n    id: stats.NEUTRAL_WINS,\n    name: \"Neutral Wins\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 0,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"neutralWinRatio\", 0, \"count\");\n    },\n  },\n  [stats.KILL_MOVES]: {\n    id: stats.KILL_MOVES,\n    name: \"Most Common Kill Move\",\n    type: \"text\",\n    calculate: (games, playerIndex) => {\n      const killMoves = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const conversionsForPlayer = _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const didKill = conversion.didKill;\n          return isForPlayer && didKill;\n        });\n\n        return _.map(conversionsForPlayer, (conversion) => {\n          return _.last(conversion.moves);\n        });\n      });\n\n      const killMovesByMove = _.groupBy(killMoves, \"moveId\");\n      const killMoveCounts = _.map(killMovesByMove, (moves) => {\n        const move = _.first(moves);\n        return {\n          count: moves.length,\n          id: move.moveId,\n          name: moveUtil.getMoveName(move.moveId),\n          shortName: moveUtil.getMoveShortName(move.moveId),\n        };\n      });\n\n      const orderedKillMoveCounts = _.orderBy(killMoveCounts, [\"count\"], [\"desc\"]);\n      const topKillMove = _.first(orderedKillMoveCounts);\n      let simpleText = \"N/A\";\n      if (topKillMove) {\n        simpleText = `${topKillMove.shortName} (${topKillMove.count})`;\n      }\n\n      return {\n        result: orderedKillMoveCounts,\n        simple: {\n          text: simpleText,\n        },\n      };\n    },\n  },\n  [stats.NEUTRAL_OPENER_MOVES]: {\n    id: stats.NEUTRAL_OPENER_MOVES,\n    name: \"Most Common Neutral Opener\",\n    type: \"text\",\n    calculate: (games, playerIndex) => {\n      const neutralMoves = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const conversionsForPlayer = _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const isNeutralWin = conversion.openingType === \"neutral-win\";\n          return isForPlayer && isNeutralWin;\n        });\n\n        return _.map(conversionsForPlayer, (conversion) => {\n          return _.first(conversion.moves);\n        });\n      });\n\n      // TODO: This following code is repeated from kill move code, put in function\n\n      const neutralMovesByMove = _.groupBy(neutralMoves, \"moveId\");\n      const neutralMoveCounts = _.map(neutralMovesByMove, (moves) => {\n        const move = _.first(moves);\n        return {\n          count: moves.length,\n          id: move.moveId,\n          name: moveUtil.getMoveName(move.moveId),\n          shortName: moveUtil.getMoveShortName(move.moveId),\n        };\n      });\n\n      const orderedNeutralMoveCounts = _.orderBy(neutralMoveCounts, [\"count\"], [\"desc\"]);\n      const topNeutralMove = _.first(orderedNeutralMoveCounts);\n      let simpleText = \"N/A\";\n      if (topNeutralMove) {\n        simpleText = `${topNeutralMove.shortName} (${topNeutralMove.count})`;\n      }\n\n      return {\n        result: orderedNeutralMoveCounts,\n        simple: {\n          text: simpleText,\n        },\n      };\n    },\n  },\n  [stats.EARLY_KILLS]: {\n    id: stats.EARLY_KILLS,\n    name: \"Earliest Kill\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const oppStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isOpp = stock.playerIndex !== playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isOpp && hasEndPercent;\n        });\n      });\n\n      const orderedOppStocks = _.orderBy(oppStocks, [\"endPercent\"], [\"asc\"]);\n      const earliestKillStock = _.first(orderedOppStocks);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (earliestKillStock) {\n        simple.number = earliestKillStock.endPercent;\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedOppStocks, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.LATE_DEATHS]: {\n    id: stats.LATE_DEATHS,\n    name: \"Latest Death\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const playerStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isPlayer = stock.playerIndex === playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isPlayer && hasEndPercent;\n        });\n      });\n\n      const orderedPlayerStocks = _.orderBy(playerStocks, [\"endPercent\"], [\"desc\"]);\n      const latestDeathStock = _.first(orderedPlayerStocks);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (latestDeathStock) {\n        simple.number = latestDeathStock.endPercent;\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedPlayerStocks, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.SELF_DESTRUCTS]: {\n    id: stats.SELF_DESTRUCTS, // Only show this one if greater than 2 for one player\n    name: \"Total Self-Destructs\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 0,\n    calculate: (games, playerIndex) => {\n      const sdCounts = _.map(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        const playerEndedStocks = _.filter(stocks, (stock) => {\n          const isPlayer = stock.playerIndex === playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isPlayer && hasEndPercent;\n        });\n\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const oppKillConversions = _.filter(conversions, (conversion) => {\n          const isOpp = conversion.playerIndex !== playerIndex;\n          const didKill = conversion.didKill;\n          return isOpp && didKill;\n        });\n\n        return playerEndedStocks.length - oppKillConversions.length;\n      });\n\n      const sdSum = _.sum(sdCounts);\n\n      return {\n        result: sdSum,\n        simple: {\n          number: sdSum,\n          text: `${sdSum}`,\n        },\n      };\n    },\n  },\n  [stats.INPUTS_PER_MINUTE]: {\n    id: stats.INPUTS_PER_MINUTE,\n    name: \"Inputs / Minute\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"inputsPerMinute\", 1);\n    },\n  },\n  [stats.AVG_KILL_PERCENT]: {\n    id: stats.AVG_KILL_PERCENT,\n    name: \"Average Kill Percent\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const oppStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isOpp = stock.playerIndex !== playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isOpp && hasEndPercent;\n        });\n      });\n\n      const result = {\n        total: oppStocks.length,\n        count: _.sumBy(oppStocks, \"endPercent\") || 0,\n      };\n\n      result.ratio = result.total ? result.count / result.total : null;\n\n      return {\n        result: result,\n        simple: genSimpleFromRatio(result, 1),\n      };\n    },\n  },\n  [stats.HIGH_DAMAGE_PUNISHES]: {\n    id: stats.HIGH_DAMAGE_PUNISHES,\n    name: \"Highest Damage Punish\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const punishes = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        return _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const hasEndPercent = conversion.endPercent !== null;\n          return isForPlayer && hasEndPercent;\n        });\n      });\n\n      const getDamageDone = (punish) => punish.endPercent - punish.startPercent;\n      const orderedPunishes = _.orderBy(punishes, [getDamageDone], \"desc\");\n      const topPunish = _.first(orderedPunishes);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (topPunish) {\n        simple.number = getDamageDone(topPunish);\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedPunishes, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.DAMAGE_DONE]: {\n    id: stats.DAMAGE_DONE,\n    name: \"Total Damage Done\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", 1, \"count\");\n    },\n  },\n};\n\nfunction genOverallRatioStat(games, playerIndex, field, fixedNum, type = \"ratio\") {\n  const statRatios = _.map(games, (game) => {\n    const overallStats = _.get(game, [\"stats\", \"overall\"]);\n    const overallStatsByPlayer = _.keyBy(overallStats, \"playerIndex\");\n    const overallStatsForPlayer = overallStatsByPlayer[playerIndex];\n    return overallStatsForPlayer[field];\n  });\n\n  const avg = averageRatios(statRatios);\n  const simple = genSimpleFromRatio(avg, fixedNum, type);\n\n  return {\n    result: avg,\n    simple: simple,\n  };\n}\n\nfunction averageRatios(ratios) {\n  const result = {};\n\n  result.count = _.sumBy(ratios, \"count\") || 0;\n  result.total = _.sumBy(ratios, \"total\") || 0;\n  result.ratio = result.total ? result.count / result.total : null;\n\n  return result;\n}\n\nfunction genSimpleFromRatio(ratio, fixedNum, type = \"ratio\") {\n  const result = {};\n\n  switch (type) {\n    case \"ratio\":\n      result.number = ratio.ratio;\n      result.text = ratio.ratio !== null ? ratio.ratio.toFixed(fixedNum) : \"N/A\";\n      break;\n    case \"count\":\n      result.number = ratio.count;\n      result.text = ratio.count.toFixed(fixedNum);\n      break;\n  }\n\n  return result;\n}\n\n/*\nfunction parseFilesInFolder() {\n  const dirPath = process.cwd();\n  const dirContents = fs.readdirSync(dirPath, { withFileTypes: true });\n\n  console.log(\"Reading files in directory...\\n\");\n  const gameDetails = _.chain(dirContents).filter((item) => {\n    return item.isFile() && path.extname(item.name) === \".slp\";\n  }).map((slpItem) => {\n    const slpFilePath = path.join(dirPath, slpItem.name);\n    const game = new SlippiGame(slpFilePath);\n    return {\n      filePath: slpFilePath,\n      settings: game.getSettings(),\n      frames: game.getFrames(),\n      stats: game.getStats(),\n      metadata: game.getMetadata(),\n      latestFrame: game.getLatestFrame(),\n      gameEnd: game.getGameEnd(),\n    };\n  }).value();\n\n  return gameDetails;\n}\n*/\n\nexport function filterGames(games) {\n  // console.log(games);\n  const gamesByIsSingles = _.groupBy(games, (game) => {\n    const numberOfPlayers = game.settings.players.length;\n    return numberOfPlayers === 2;\n  });\n\n  const nonSinglesGames = _.get(gamesByIsSingles, false) || [];\n  if (_.some(nonSinglesGames)) {\n    console.log(\"The following games have been excluded because they are not singles games:\");\n    _.forEach(nonSinglesGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  const singlesGames = _.get(gamesByIsSingles, true) || [];\n  const gamesByPorts = _.chain(singlesGames)\n    .groupBy((game) => {\n      const ports = _.map(game.settings.players, \"port\");\n      return _.join(ports, \"-\");\n    })\n    .orderBy([\"length\"], [\"desc\"])\n    .value();\n\n  const gamesWithSamePorts = gamesByPorts.shift();\n  if (_.some(gamesByPorts)) {\n    console.log(\"The following games have been excluded because the player ports differ:\");\n    const flatGames = _.flatten(gamesByPorts);\n    _.forEach(flatGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  if (_.isEmpty(gamesWithSamePorts)) {\n    throw new Error(\"There were no valid games found to compute stats from.\");\n  }\n\n  console.log(`Including ${gamesWithSamePorts.length} games for stat calculation...`);\n\n  return gamesWithSamePorts;\n}\n\nfunction computeStats(games) {\n  const firstGame = _.first(games);\n  // console.log(firstGame);\n  const orderIndices = _.map(firstGame.settings.players, \"playerIndex\");\n  const reversedIndices = _.chain(orderIndices).clone().reverse().value();\n  const indices = [orderIndices, reversedIndices];\n\n  const statResults = _.flatMap(stats, (statKey) => {\n    const def = statDefininitions[statKey];\n    if (!def.calculate) {\n      return [];\n    }\n\n    const results = _.map(indices, (iIndices) => {\n      const result = def.calculate(games, iIndices[0], iIndices[1]);\n      result.port = iIndices[0] + 1;\n      return result;\n    });\n\n    const output = { ...def };\n    delete output.calculate;\n    output.results = results;\n\n    return [output];\n  });\n\n  return statResults;\n}\n\nfunction generateGameInfo(games) {\n  const getStartAt = (game) => game.metadata.startAt;\n  const orderedGames = _.orderBy(games, [getStartAt], [\"asc\"]);\n\n  const getResultForPlayer = (game, playerIndex) => {\n    const latestFrame = game.latestFrame;\n    const winner = findWinner(latestFrame);\n    return winner === playerIndex ? \"winner\" : \"loser\";\n  };\n\n  const generatePlayerInfo = (game) => (player) => {\n    // console.log(player);\n    return {\n      port: player.port,\n      characterId: player.characterId,\n      characterColor: player.characterColor,\n      nametag: player.nametag,\n      characterName: characterUtil.getCharacterName(player.characterId),\n      characterColor: characterUtil.getCharacterColorName(player.characterId, player.characterColor),\n      gameResult: getResultForPlayer(game, player.playerIndex),\n    };\n  };\n\n  return _.map(orderedGames, (game) => {\n    const playerInfoGen = generatePlayerInfo(game);\n\n    return {\n      stage: {\n        id: game.settings.stageId,\n        name: stageUtil.getStageName(game.settings.stageId),\n      },\n      players: _.map(game.settings.players, playerInfoGen),\n      startTime: game.metadata.startAt,\n      duration: convertFrameCountToDurationString(game.stats.lastFrame),\n    };\n  });\n}\n\nfunction generateBtsSummary(summary) {\n  const fixedStats = [stats.KILL_MOVES, stats.NEUTRAL_OPENER_MOVES, stats.OPENINGS_PER_KILL, stats.DAMAGE_DONE];\n\n  const randomizeCount = 2;\n\n  const generateSummaryItem = (fullStatOutput) => {\n    const type = fullStatOutput.type;\n\n    const output = { ...fullStatOutput };\n    output.results = _.map(fullStatOutput.results, (result) => _.get(result, [\"simple\", type]));\n\n    return output;\n  };\n\n  const result = [];\n\n  const statsById = _.keyBy(summary, \"id\");\n  const statsToRandomizeById = statsById;\n\n  // Add fixed stats\n  _.forEach(fixedStats, (statId) => {\n    const statOutput = statsById[statId];\n    result.push(generateSummaryItem(statOutput));\n\n    delete statsToRandomizeById[statId];\n  });\n\n  // Deal with SDs\n  const sdStat = statsById[stats.SELF_DESTRUCTS];\n  const sds1 = sdStat.results[0].simple.number;\n  const sds2 = sdStat.results[0].simple.number;\n  const shouldIncludeSds = sds1 > 1 || sds2 > 1;\n  if (!shouldIncludeSds) {\n    delete statsToRandomizeById[stats.SELF_DESTRUCTS];\n  }\n\n  const shuffled = _.shuffle(statsToRandomizeById);\n  const shuffledToInclude = _.take(shuffled, randomizeCount);\n  _.forEach(shuffledToInclude, (statOutput) => {\n    result.push(generateSummaryItem(statOutput));\n  });\n\n  return result;\n}\n\nexport function convertFrameCountToDurationString(frameCount) {\n  const duration = moment.duration(frameCount / 60, \"seconds\");\n  return moment.utc(duration.as(\"milliseconds\")).format(\"m:ss\");\n}\n\nexport default function generateOutput(games) {\n  const stats = computeStats(games);\n\n  return {\n    games: generateGameInfo(games),\n    summary: stats,\n    btsSummary: generateBtsSummary(stats),\n  };\n}\n\n// function writeToFile(output) {\n//   console.log(util.inspect(output, { depth: 6, colors: true }));\n//   fs.writeFileSync('output.json', JSON.stringify(output));\n//   console.log(\"Finished writting stats to output.json!\");\n// }\n\n// export default function (games) {\n//   const filteredGames = filterGames(games);\n//   const output = generateOutput(filteredGames);\n//   writeToFile(output);\n//   console.log(output);\n//   return output;\n// }\n","import { characters as characterUtil, moves as moveUtil } from \"@slippi/slippi-js\";\n\nimport { convertFrameCountToDurationString } from \"./stats\";\n\n/*\n * Random functions are taken from: https://stackoverflow.com/questions/1527803/generating-random-whole-numbers-in-javascript-in-a-specific-range\n */\n\n/**\n * Returns a random number between min (inclusive) and max (exclusive)\n */\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\n/**\n * Returns a random integer between min (inclusive) and max (inclusive).\n * The value is no lower than min (or the next integer greater than min\n * if min isn't an integer) and no greater than max (or the next integer\n * lower than max if max isn't an integer).\n * Using Math.round() will give you a non-uniform distribution!\n */\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function generateDemoValues(): Record<string, any> {\n  const paramMap: Record<string, any> = {};\n\n  // Set names\n  paramMap.name1 = \"FOLLOW\";\n  paramMap.name2 = \"ON\";\n  paramMap.sub1 = \"@_vinceau\";\n  paramMap.sub2 = \"TWITTER\";\n\n  // Set colors\n  const [char1, color1] = generateRandomCharacter();\n  const [char2, color2] = generateRandomCharacter();\n  paramMap.char1 = char1;\n  paramMap.color1 = color1;\n  paramMap.char2 = char2;\n  paramMap.color2 = color2;\n\n  // Random games\n  const totalGames = getRandomInt(3, 5);\n  paramMap.gt = totalGames;\n  for (let i = 1; i <= totalGames; i++) {\n    const gameKey = `g${i}`;\n    const leftWillWin = Math.random() < 0.5;\n    const leftPlayerInfo = [char1, color1, leftWillWin ? \"winner\" : \"loser\"].join(\",\");\n    const rightPlayerInfo = [char2, color2, leftWillWin ? \"loser\" : \"winner\"].join(\",\");\n    const gameValue = generateRandomGame([leftPlayerInfo, rightPlayerInfo]);\n    paramMap[gameKey] = gameValue;\n  }\n\n  // Random moves\n  [\"mckm1\", \"mckm2\", \"mcno1\", \"mcno2\"].forEach((key) => {\n    paramMap[key] = generateRandomMove();\n  });\n\n  // Random openings per kill\n  [\"opk1\", \"opk2\"].forEach((key) => {\n    paramMap[key] = getRandomArbitrary(5, 15).toFixed(1);\n  });\n\n  // Total damage done\n  [\"tdd1\", \"tdd2\"].forEach((key) => {\n    paramMap[key] = getRandomArbitrary(1000, 2000).toFixed(1);\n  });\n\n  // Average kill percent\n  [\"akp1\", \"akp2\"].forEach((key) => {\n    paramMap[key] = getRandomArbitrary(50, 200).toFixed(1);\n  });\n\n  // Neutral wins\n  [\"nw1\", \"nw2\"].forEach((key) => {\n    paramMap[key] = getRandomInt(30, 80);\n  });\n\n  return paramMap;\n}\n\nfunction generateRandomMove(): string {\n  const move = getRandomInt(7, 21);\n  const name = moveUtil.getMoveShortName(move).toUpperCase();\n  return `${name} - ${move}`;\n}\n\nfunction generateRandomCharacter() {\n  const charId = getRandomInt(0, 25);\n  const charInfo = characterUtil.getCharacterInfo(charId);\n  const colorIndex = getRandomInt(0, charInfo.colors.length - 1);\n  const color = charInfo.colors[colorIndex];\n  return [charId, color] as const;\n}\n\nconst LEGAL_STAGE_IDS = [2, 3, 8, 28, 31, 32];\n\nfunction generateRandomStageId(): number {\n  const stageIndex = getRandomInt(0, LEGAL_STAGE_IDS.length - 1);\n  return LEGAL_STAGE_IDS[stageIndex];\n}\n\nfunction generateRandomDuration(): string {\n  // The number of frames in 30 seconds\n  const minFrames = 30 * 60;\n  // The number of frames in 8 minutes\n  const maxFrames = 8 * 60 * 60;\n  const frames = getRandomInt(minFrames, maxFrames);\n  return convertFrameCountToDurationString(frames);\n}\n\nfunction generateRandomGame(playerInfos: string[]): string {\n  const stageId = generateRandomStageId();\n  const gameDuration = generateRandomDuration();\n  const gameValue = [stageId, gameDuration, ...playerInfos].join(\",\");\n  return gameValue;\n}\n","/** @jsx jsx */\nimport { css, Global, jsx } from \"@emotion/core\";\n\nexport interface Theme {\n  primaryColor: string;\n  secondaryColor: string;\n}\n\nexport const defaultTheme: Theme = {\n  primaryColor: \"#286163\",\n  secondaryColor: \"#121020\",\n};\n\nexport const GlobalTheme: React.FC<Theme> = ({ primaryColor, secondaryColor }) => {\n  return (\n    <Global\n      styles={css`\n        body.themed {\n          background: radial-gradient(circle at center -30%, ${primaryColor}, ${secondaryColor});\n        }\n      `}\n    />\n  );\n};\n","import { defaultTheme } from \"styles/theme\";\n\nfunction getStoredValues(keys: string[]): Record<string, string | null> {\n  const res: Record<string, string | null> = {};\n  keys.forEach((key) => {\n    const value = localStorage.getItem(key);\n    if (value) {\n      res[key] = value;\n    }\n  });\n  return res;\n}\n\nexport function generateSearchParams(params: Record<string, any>): URLSearchParams {\n  const restoredParams = getStoredValues([\"primaryColor\", \"secondaryColor\", \"leftColor\", \"rightColor\"]);\n  const searchParams = new URLSearchParams({\n    ...defaultTheme,\n    ...restoredParams,\n    ...params,\n  });\n  return searchParams;\n}\n","import { generateDemoValues } from \"lib/demo\";\nimport { generateSearchParams } from \"lib/searchParams\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nexport const RandomView: React.FC = () => {\n  const params = generateDemoValues();\n  const search = \"?\" + generateSearchParams(params).toString();\n  return (\n    <Redirect\n      to={{\n        pathname: \"/render\",\n        search,\n      }}\n    />\n  );\n};\n","import { GameDetails } from \"lib/readFile\";\n\nimport { InitialStateType, ProcessedFile } from \"./types\";\n\ntype ActionMap<M extends { [index: string]: any }> = {\n  [Key in keyof M]: M[Key] extends undefined\n    ? {\n        type: Key;\n      }\n    : {\n        type: Key;\n        payload: M[Key];\n      };\n};\n\nexport enum Types {\n  ADD_FILES = \"ADD_FILES\",\n  SET_DETAILS = \"SET_DETAILS\",\n  SET_ERROR = \"SET_ERROR\",\n  REMOVE_FILE = \"REMOVE_FILE\",\n  CLEAR_ALL = \"CLEAR_ALL\",\n}\n\ntype ActionPayload = {\n  [Types.SET_DETAILS]: {\n    filename: string;\n    details: GameDetails;\n  };\n  [Types.SET_ERROR]: {\n    filename: string;\n    error: any;\n  };\n  [Types.ADD_FILES]: {\n    files: File[];\n  };\n  [Types.REMOVE_FILE]: {\n    filename: string;\n  };\n  [Types.CLEAR_ALL]: never;\n};\n\nexport type ReducerActions = ActionMap<ActionPayload>[keyof ActionMap<ActionPayload>];\n\nexport const reducer = (state: InitialStateType, action: ReducerActions) => {\n  switch (action.type) {\n    case Types.SET_DETAILS: {\n      const { filename, details } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.filename === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].details = details;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.SET_ERROR: {\n      const { filename, error } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.filename === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].error = error;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.ADD_FILES: {\n      const { files } = action.payload;\n      const currentFiles = state.files;\n      let newFiles: ProcessedFile[] = files.map((f) => ({\n        filename: f.name,\n        loading: true,\n        details: null,\n      }));\n\n      // Make sure there are no duplicate filenames\n      newFiles = newFiles.filter((f) => !currentFiles.find((existingFile) => f.filename === existingFile.filename));\n\n      return {\n        ...state,\n        files: [...currentFiles, ...newFiles],\n      };\n    }\n    case Types.REMOVE_FILE: {\n      const { filename } = action.payload;\n      const files = state.files.filter((f) => f.filename !== filename);\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.CLEAR_ALL: {\n      return {\n        ...state,\n        files: [],\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { createContext, Dispatch, useReducer } from \"react\";\n\nimport { reducer, ReducerActions } from \"./reducers\";\nimport { InitialStateType } from \"./types\";\n\nconst initialState: InitialStateType = {\n  files: [],\n};\n\nconst AppContext = createContext<{\n  state: InitialStateType;\n  dispatch: Dispatch<ReducerActions>;\n}>({\n  state: initialState,\n  dispatch: () => null,\n});\n\nconst mainReducer = (state: InitialStateType, action: ReducerActions) => reducer(state, action);\n\nconst AppProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(mainReducer, initialState);\n\n  return <AppContext.Provider value={{ state, dispatch }}>{children}</AppContext.Provider>;\n};\n\nexport { AppProvider, AppContext };\n","import React from \"react\";\n\nexport const ExternalLink: React.FC<React.HTMLProps<HTMLAnchorElement>> = (props) => {\n  return (\n    <a target=\"_blank\" rel=\"noopener noreferrer\" {...props}>\n      {props.children}\n    </a>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Header = styled.h1`\n  text-transform: uppercase;\n  font-weight: 800;\n  font-size: 5.5rem;\n  margin: 2rem;\n  padding-bottom: 1rem;\n  position: relative;\n  text-align: center;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.2), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translateX(-50%);\n    bottom: 0;\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { DropzoneOptions, useDropzone } from \"react-dropzone\";\n\nconst getColor = (props: any) => {\n  if (props.isDragAccept) {\n    return \"#00e676\";\n  }\n  if (props.isDragActive) {\n    return \"#2196f3\";\n  }\n  return \"#eeeeee\";\n};\n\nconst Container = styled.div`\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-width: 2px;\n  border-color: ${(props) => getColor(props)};\n  border-style: dashed;\n  background-color: rgba(0, 0, 0, 0.3);\n  color: white;\n  outline: none;\n  transition: border 0.24s ease-in-out;\n  p {\n    text-align: center;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n`;\n\nexport const DropPad: React.FC<Partial<DropzoneOptions>> = (props) => {\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone(props);\n\n  return (\n    <Container {...getRootProps({ isDragActive, isDragAccept, isDragReject })}>\n      <input {...getInputProps()} />\n      <p>Drag SLP files here or click to select</p>\n    </Container>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\n\nexport const ErrorMessage: React.FC = (props) => {\n  return (\n    <span\n      css={css`\n        color: #bf2600;\n        font-weight: bold;\n      `}\n    >\n      ERROR: {props.children}\n    </span>\n  );\n};\n","import { characters as characterUtil, stages as stageUtil } from \"@slippi/slippi-js\";\n\nexport type Side = \"left\" | \"right\";\n\nfunction sanitize(text: string, replacement = \"-\"): string {\n  return text.toLowerCase().replace(/[. &]+/gi, replacement);\n}\n\nfunction getCharacterFolderFromId(characterId: string | number, color?: string) {\n  const characterName = characterUtil.getCharacterName(+characterId);\n  return getCharacterFolderFromName(characterName, color);\n}\n\nfunction getCharacterFolderFromName(character: string, color = \"Default\") {\n  const charFolder = sanitize(character);\n  const colorFolder = sanitize(color);\n  return `${process.env.PUBLIC_URL}/images/characters/${charFolder}/${colorFolder}`;\n}\n\nexport function getCharacterPortrait(characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/portrait.png`;\n}\n\nexport function getCharacterVSScreen(side: Side, characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/vs-${side}.png`;\n}\n\nexport function getCharacterStockIcon(characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/stock.png`;\n}\n\nexport function getStageIcon(stageId: string | number): string {\n  const stageName = stageUtil.getStageName(+stageId);\n  return `${process.env.PUBLIC_URL}/images/stages/${stageName}.png`;\n}\n","import { css } from \"@emotion/core\";\n\nexport const hasOpacity = (initial: number, final = 1, transition = \"opacity 0.2s ease-in-out\") => css`\n  opacity: ${initial};\n  transition: ${transition};\n  &:hover {\n    opacity: ${final};\n  }\n`;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { characters as characterUtil, stages as stageUtil } from \"@slippi/slippi-js\";\nimport { ErrorMessage } from \"components/ErrorMessage\";\nimport { getCharacterStockIcon } from \"lib/resources\";\nimport { convertFrameCountToDurationString } from \"lib/stats\";\nimport { findWinner } from \"lib/winner\";\nimport React from \"react\";\nimport { ProcessedFile } from \"store/types\";\nimport { hasOpacity } from \"styles/opacity\";\nimport { defaultTheme } from \"styles/theme\";\n\nconst BasicFileItem: React.FC<{ name: string; onRemove?: () => void }> = (props) => {\n  const { onRemove, name, children } = props;\n  return (\n    <div\n      css={css`\n        padding: 1.5rem 2rem;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        color: rgba(255, 255, 255, 0.8);\n        background-color: rgba(0, 0, 0, 0.3);\n        ${hasOpacity(0.8)};\n        &:hover {\n          .remove-button {\n            opacity: 1;\n          }\n        }\n        .remove-button {\n          opacity: 0;\n          transition: opacity 0.2s ease-in-out;\n          background: white;\n          color: ${defaultTheme.secondaryColor};\n          border: none;\n          font-weight: bold;\n          font-size: 2.5rem;\n          cursor: pointer;\n          padding: 0.2rem 1rem;\n          margin: 0;\n        }\n      `}\n    >\n      <div\n        css={css`\n          flex: 1;\n        `}\n      >\n        <div\n          css={css`\n            font-size: 1.6rem;\n            font-weight: bold;\n            margin-bottom: 1rem;\n            font-family: monospace;\n          `}\n        >\n          {name}\n        </div>\n        <div>{children}</div>\n      </div>\n      {onRemove && (\n        <button className=\"remove-button\" onClick={onRemove} title=\"Remove\">\n          ✕\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst CharacterIcon: React.FC<{\n  charId: string | number;\n  color: string;\n  winner?: boolean;\n}> = ({ charId, color, winner }) => {\n  const src = getCharacterStockIcon(charId, color);\n  return (\n    <div\n      css={css`\n        position: relative;\n        display: inline-block;\n        margin-top: 0.5rem;\n        ${winner &&\n        `&::after {\n          position: absolute;\n          content: \" \";\n          height: 0.7rem;\n          width: 60%;\n          background-color: #ffa700;\n          left: 20%;\n          bottom: 110%;\n          clip-path: polygon(50% 0%, 75% 35%, 100% 0, 100% 100%, 0 100%, 0 0, 25% 35%);\n        }\n      `}\n      `}\n    >\n      <img src={src} style={{ height: \"3rem\" }} alt=\"stock icon\" />\n    </div>\n  );\n};\n\nexport interface FileItemProps {\n  file: ProcessedFile;\n  onRemove: () => void;\n}\n\nexport const FileItem: React.FC<FileItemProps> = (props) => {\n  const { file, onRemove } = props;\n  const { filename, loading, error, details } = file;\n  if (loading) {\n    return (\n      <BasicFileItem name={filename}>\n        <span\n          css={css`\n            font-weight: bold;\n          `}\n        >\n          LOADING...\n        </span>\n      </BasicFileItem>\n    );\n  }\n  if (error || !details) {\n    return (\n      <BasicFileItem onRemove={onRemove} name={filename}>\n        <ErrorMessage>{error.message}</ErrorMessage>\n      </BasicFileItem>\n    );\n  }\n\n  const stageName = stageUtil.getStageName(details.settings.stageId as number);\n  const players = details.settings.players;\n  const duration = details.latestFrame ? convertFrameCountToDurationString(details.latestFrame.frame) : \"N/A\";\n  const winnerIndex = details.latestFrame ? findWinner(details.latestFrame) : null;\n  const icons = players.map((player) => {\n    const winner = player.playerIndex === winnerIndex;\n    const charId = player.characterId as number;\n    const color = characterUtil.getCharacterColorName(charId, player.characterColor as number);\n    return <CharacterIcon key={`${player.port}-icon`} charId={charId} color={color} winner={winner} />;\n  });\n  return (\n    <BasicFileItem onRemove={onRemove} name={filename}>\n      <div\n        css={css`\n          display: grid;\n          justify-items: center;\n          align-items: center;\n          grid-template-columns: repeat(3, 1fr);\n          font-weight: bold;\n        `}\n      >\n        <div>{stageName}</div>\n        <div\n          css={css`\n            display: grid;\n            grid-auto-flow: column;\n            grid-column-gap: 1rem;\n          `}\n        >\n          {icons}\n        </div>\n        <div>{duration}</div>\n      </div>\n    </BasicFileItem>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { ProcessedFile } from \"store/types\";\n\nimport { FileItem } from \"./FileItem\";\n\nexport interface FileListProps {\n  files: ProcessedFile[];\n  onRemove: (filename: string) => void;\n}\n\nexport const FileList: React.FC<FileListProps> = (props) => {\n  const { files, onRemove } = props;\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-template-columns: 100%;\n        grid-row-gap: 1rem;\n      `}\n    >\n      {files.map((f) => (\n        <FileItem key={f.filename} file={f} onRemove={() => onRemove(f.filename)} />\n      ))}\n    </div>\n  );\n};\n","export enum PortColor {\n  P1 = \"#f52e2e\",\n  P2 = \"#5463ff\",\n  P3 = \"#ffc717\",\n  P4 = \"#1f9e40\",\n}\n\nexport function getPortColor(portNumber: number): string {\n  switch (portNumber) {\n    case 1:\n      return PortColor.P1;\n    case 2:\n      return PortColor.P2;\n    case 3:\n      return PortColor.P3;\n    case 4:\n      return PortColor.P4;\n    default:\n      return PortColor.P1;\n  }\n}\n","import generateStats, { filterGames } from \"lib/stats\";\nimport { get } from \"lodash\";\n\nimport { getPortColor } from \"./portColor\";\nimport { GameDetails } from \"./readFile\";\n\nconst extractNameAndCode = (playerPort: number, details: GameDetails) => {\n  const settings = details.settings;\n  const metadata = details.metadata;\n  const index = playerPort - 1;\n  const player = settings.players.find((player) => player.playerIndex === index);\n  const playerTag = player ? player.nametag : null;\n  const netplayName: string | null = get(metadata, [\"players\", index, \"names\", \"netplay\"], null);\n  const netplayCode: string | null = get(metadata, [\"players\", index, \"names\", \"code\"], null);\n  const name = playerTag || netplayName || \"\";\n  return [name, netplayCode || \"\"] as const;\n};\n\nexport function processStats(gameDetails: GameDetails[]): Record<string, any> {\n  const filtered = filterGames(gameDetails);\n  if (!filtered || filtered.length === 0) {\n    throw new Error(\"No valid games\");\n  }\n\n  const { games, summary } = generateStats(filtered);\n  const params: Record<string, any> = {}; // \"mckm1\": , \"mckm2\", \"mcno1\", \"mcno2\", \"opk1\", \"opk2\", \"tdd1\", \"tdd2\", \"dpo1\", \"dpo2\", \"ipm1\", \"ipm2\", \"akp1\", \"akp2\", \"nw1\", \"nw2\"};\n\n  // Set character info\n  const lastGame = games[games.length - 1];\n  const leftPlayer = lastGame.players[0];\n  const rightPlayer = lastGame.players[1];\n  params.leftColor = getPortColor(leftPlayer.port);\n  params.rightColor = getPortColor(rightPlayer.port);\n\n  params.char1 = leftPlayer.characterId;\n  params.char2 = rightPlayer.characterId;\n  params.color1 = leftPlayer.characterColor;\n  params.color2 = rightPlayer.characterColor;\n\n  // Set name tags\n  const lastGameDetails = filtered[filtered.length - 1];\n  const [leftTag, leftCode] = extractNameAndCode(leftPlayer.port, lastGameDetails);\n  const [rightTag, rightCode] = extractNameAndCode(rightPlayer.port, lastGameDetails);\n  params.name1 = leftTag.toUpperCase() || leftPlayer.characterName;\n  params.name2 = rightTag.toUpperCase() || rightPlayer.characterName;\n  params.sub1 = leftCode;\n  params.sub2 = rightCode;\n\n  // Set game info\n  params.gt = games.length; // Set the total number of games\n\n  (games as any[]).forEach((game, i) => {\n    // console.log(\"processing game: \", game);\n    const gameKey = `g${i + 1}`;\n    const stageId: number = game.stage.id;\n    const gameDuration: string = game.duration;\n    const playerInfo = game.players.map((p: any) => [p.characterId, p.characterColor, p.gameResult].join(\",\"));\n    const gameValue = [stageId, gameDuration, ...playerInfo].join(\",\");\n    // console.log(`${gameKey} : ${gameValue}`);\n    params[gameKey] = gameValue;\n  });\n\n  // Set the stat values\n  (summary as any[]).forEach((s) => {\n    switch (s.id) {\n      case \"openingsPerKill\": {\n        params.opk1 = s.results[0].simple.text;\n        params.opk2 = s.results[1].simple.text;\n        break;\n      }\n      case \"damagePerOpening\": {\n        params.dpo1 = s.results[0].simple.text;\n        params.dpo2 = s.results[1].simple.text;\n        break;\n      }\n      case \"neutralWins\": {\n        params.nw1 = s.results[0].simple.text;\n        params.nw2 = s.results[1].simple.text;\n        break;\n      }\n      case \"killMoves\": {\n        // console.log(s);\n        const playerRes = s.results[0].result[0];\n        const opponentRes = s.results[1].result[0];\n        params.mckm1 = `${playerRes.shortName.toUpperCase()} - ${playerRes.count}`;\n        params.mckm2 = `${opponentRes.shortName.toUpperCase()} - ${opponentRes.count}`;\n        break;\n      }\n      case \"neutralOpenerMoves\": {\n        const playerRes = s.results[0].result[0];\n        const opponentRes = s.results[1].result[0];\n        params.mcno1 = `${playerRes.shortName.toUpperCase()} - ${playerRes.count}`;\n        params.mcno2 = `${opponentRes.shortName.toUpperCase()} - ${opponentRes.count}`;\n        break;\n      }\n      case \"inputsPerMinute\": {\n        params.ipm1 = s.results[0].simple.text;\n        params.ipm2 = s.results[1].simple.text;\n        break;\n      }\n      case \"avgKillPercent\": {\n        params.akp1 = s.results[0].simple.text;\n        params.akp2 = s.results[1].simple.text;\n        break;\n      }\n      case \"damageDone\": {\n        params.tdd1 = s.results[0].simple.text;\n        params.tdd2 = s.results[1].simple.text;\n        break;\n      }\n    }\n  });\n\n  console.log(\"returning these params: \", params);\n  return params;\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { DropPad } from \"components/DropPad\";\nimport { ErrorMessage } from \"components/ErrorMessage\";\nimport { FileList } from \"components/FileList\";\nimport { processStats } from \"lib/processStats\";\nimport { GameDetails, readFileAsGameDetails } from \"lib/readFile\";\nimport { generateSearchParams } from \"lib/searchParams\";\nimport React, { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { AppContext, Types } from \"../store\";\n\nconst ProcessButton = styled.button<{\n  backgroundColor: string;\n  color: string;\n}>`\n  background: ${(p) => p.backgroundColor};\n  border: none;\n  color: ${(p) => p.color};\n  cursor: pointer;\n  font: inherit;\n  padding: 1rem 0rem;\n  width: 100%;\n  font-weight: 700;\n  font-size: 3rem;\n  opacity: 0.8;\n  transition: opacity 0.2s ease-in-out;\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n  &:hover:enabled {\n    opacity: 1;\n  }\n`;\n\nexport const FileListInput: React.FC<{ buttonColor: string }> = ({ buttonColor }) => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(AppContext);\n  const [error, setError] = React.useState<any>(null);\n\n  const onClick = () => {\n    try {\n      const gameDetails = state.files.filter((f) => f.details !== null).map((f) => f.details as GameDetails);\n      const params = processStats(gameDetails);\n      const search = \"?\" + generateSearchParams(params).toString();\n      history.push({\n        pathname: \"/render\",\n        search,\n      });\n    } catch (err) {\n      console.error(error);\n      setError(err);\n    }\n  };\n\n  const onRemove = (filename: string) => {\n    dispatch({\n      type: Types.REMOVE_FILE,\n      payload: {\n        filename,\n      },\n    });\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      // Track how long processing takes\n      const startTime = new Date().getTime();\n\n      // First add all the files to the store\n      dispatch({\n        type: Types.ADD_FILES,\n        payload: {\n          files: acceptedFiles,\n        },\n      });\n\n      const promises = acceptedFiles.map(async (file) => {\n        try {\n          const details = await readFileAsGameDetails(file);\n          dispatch({\n            type: Types.SET_DETAILS,\n            payload: {\n              filename: file.name,\n              details,\n            },\n          });\n        } catch (err) {\n          console.error(error);\n          dispatch({\n            type: Types.SET_ERROR,\n            payload: {\n              filename: file.name,\n              error: err,\n            },\n          });\n        }\n      });\n\n      // Print the time taken when complete\n      Promise.all(promises).then(() => {\n        const time = new Date().getTime() - startTime;\n        console.log(`Finished processing in ${time}ms`);\n      });\n    },\n    [dispatch, error]\n  );\n\n  const finishedProcessing = !state.files.find((f) => f.loading);\n  const buttonText =\n    state.files.length === 0 ? \"NO FILES ADDED\" : finishedProcessing ? \"GENERATE STATS\" : \"PLEASE WAIT\";\n  return (\n    <div\n      css={css`\n        display: flex;\n        flex-direction: column;\n        flex-wrap: nowrap;\n        width: 100%;\n        height: 100%;\n      `}\n    >\n      <DropPad accept=\".slp\" onDrop={onDrop} />\n      <div\n        css={css`\n          overflow: auto;\n          display: flex;\n          flex-direction: column;\n          margin: 1rem 0;\n        `}\n      >\n        <FileList files={state.files} onRemove={onRemove} />\n      </div>\n      <ProcessButton\n        backgroundColor={buttonColor}\n        color=\"white\"\n        disabled={state.files.length === 0 || !finishedProcessing}\n        onClick={onClick}\n      >\n        {buttonText}\n      </ProcessButton>\n      {error && <ErrorMessage>{error.message}</ErrorMessage>}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { ExternalLink as A } from \"components/ExternalLink\";\nimport { Header } from \"components/Header\";\nimport { FileListInput } from \"containers/FileListInput\";\nimport React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AppContext, Types } from \"store\";\nimport { hasOpacity } from \"styles/opacity\";\nimport { defaultTheme, GlobalTheme } from \"styles/theme\";\n\nconst linkStyle = css`\n  display: block;\n  text-align: center;\n  text-decoration: none;\n  color: ${defaultTheme.secondaryColor};\n  background: white;\n  padding: 1rem 0rem;\n  width: 100%;\n  font-weight: 700;\n  font-size: 2.3rem;\n  cursor: pointer;\n  ${hasOpacity(0.8)};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  padding: 0 2rem;\n`;\n\nexport const MainView: React.FC = () => {\n  const { dispatch } = useContext(AppContext);\n  const primaryColor = localStorage.getItem(\"primaryColor\") || defaultTheme.primaryColor;\n  const secondaryColor = localStorage.getItem(\"secondaryColor\") || defaultTheme.secondaryColor;\n\n  const clearAll = () => {\n    dispatch({\n      type: Types.CLEAR_ALL,\n    });\n  };\n\n  return (\n    <div\n      css={css`\n        height: 100%;\n        width: 100%;\n        max-width: 80rem;\n        margin: 0 auto;\n      `}\n    >\n      <GlobalTheme primaryColor={primaryColor} secondaryColor={secondaryColor} />\n      <Container>\n        <div\n          css={css`\n            flex: none;\n          `}\n        >\n          <Header\n            onClick={clearAll}\n            title=\"Refresh page\"\n            css={css`\n              cursor: pointer;\n              font-size: 4rem;\n            `}\n          >\n            Slippi Stats\n            <br />\n            Graphic Generator\n          </Header>\n        </div>\n        <div\n          css={css`\n            flex: 1;\n            display: flex;\n            flex-direction: column;\n            overflow: auto;\n          `}\n        >\n          <FileListInput buttonColor={primaryColor} />\n        </div>\n        <div\n          css={css`\n            flex: none;\n            display: grid;\n            grid-template-columns: repeat(3, 1fr);\n            grid-column-gap: 1rem;\n            padding: 2rem 0;\n          `}\n        >\n          <Link css={linkStyle} to=\"/random\" title=\"Show random sample stats\">\n            DEMO\n          </Link>\n          <A css={linkStyle} title=\"Need help?\" href=\"https://github.com/vinceau/slippi-stats#faq\">\n            FAQ\n          </A>\n          <A css={linkStyle} title=\"Send love\" href=\"https://twitter.com/_vinceau\">\n            AUTHOR\n          </A>\n        </div>\n      </Container>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport Copy from \"react-copy-to-clipboard\";\n\nexport interface CopyToClipboardProps {\n  text: string;\n  onCopyText?: string;\n  onCopyTimeoutMs?: number;\n}\n\nexport const CopyToClipboard: React.FC<CopyToClipboardProps> = (props) => {\n  const [copied, setCopied] = React.useState(false);\n  const timeoutMs = props.onCopyTimeoutMs || 2000;\n  const copyText = props.onCopyText || \"copied!\";\n\n  const onCopy = () => {\n    setCopied(true);\n    setTimeout(() => setCopied(false), timeoutMs);\n  };\n\n  if (copied) {\n    return <span>{copyText}</span>;\n  }\n\n  return (\n    <span\n      css={css`\n        cursor: pointer;\n        &:hover {\n          text-decoration: underline;\n        }\n      `}\n    >\n      <Copy text={props.text} onCopy={onCopy}>\n        {props.children}\n      </Copy>\n    </span>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport obsImage from \"../styles/images/obs.png\";\n\ninterface OBSLayerOptions {\n  \"layer-name\": string;\n  \"layer-width\": number;\n  \"layer-height\": number;\n}\n\nfunction generateLink(options?: Partial<OBSLayerOptions>): string {\n  let location = window.location.href;\n  for (const [key, val] of Object.entries(options || {})) {\n    location += `&${key}=${val}`;\n  }\n  return location;\n}\n\nconst Draggable = styled.a`\n  color: #cccccc;\n  border: solid 0.2rem white;\n  background-color: #333333;\n  display: inline-block;\n  text-decoration: none;\n  padding: 1.5rem 3rem;\n  cursor: move;\n  border-radius: 0.3rem;\n  display: flex;\n  align-items: center;\n  text-transform: uppercase;\n  font-weight: bold;\n`;\n\nexport const OBSDragButton: React.FC<{ options?: Partial<OBSLayerOptions> }> = (props) => {\n  const wrapperRef = React.useRef(null);\n  const location = generateLink(props.options);\n  const pos = 30;\n  const handleDragStart = (e: any) => {\n    const img = new Image();\n    img.src = obsImage;\n    // Customize the visible 'thumbnail' while dragging\n    e.dataTransfer.setDragImage(img, pos, pos);\n    // Set the data type, and the value. You specifically want text/uri-list.\n    e.dataTransfer.setData(\"text/uri-list\", e.target.href);\n  };\n  const handleDragEnd = (e: any) => e.target.blur();\n  return (\n    <Draggable\n      href={location}\n      onDragStart={(e) => handleDragStart(e)}\n      onDragEnd={(e) => handleDragEnd(e)}\n      onClick={(e) => e.preventDefault()}\n      ref={wrapperRef}\n    >\n      <img style={{ width: \"3rem\", marginRight: \"1rem\" }} src={obsImage} alt=\"OBS Logo\" /> Drag me into OBS\n    </Draggable>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport function useParam(key: string, defaultValue = \"\") {\n  const [value, setValue] = useState<string>(defaultValue);\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const currentValue = params.get(key);\n    if (currentValue !== value) {\n      setValue(currentValue || defaultValue);\n    }\n  }, [key, defaultValue, location, value]);\n\n  const setParam = (val: string) => {\n    const params = new URLSearchParams(location.search);\n    params.set(key, val);\n    const search = \"?\" + params.toString();\n    history.push({\n      pathname: location.pathname,\n      search,\n    });\n  };\n\n  return [value, setParam] as const;\n}\n","// From: https://usehooks.com/useKeyPress/\n\nimport { useEffect, useState } from \"react\";\n\nexport function useKeyPress(targetKey: any) {\n  // State for keeping track of whether key is pressed\n\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // Add event listeners\n\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n\n    function downHandler({ key }: any) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n\n    // If released key is our target key then set to false\n\n    const upHandler = ({ key }: any) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n\n    window.addEventListener(\"keyup\", upHandler);\n\n    // Remove event listeners on cleanup\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [targetKey]); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}\n","// From: https://usehooks.com/useOnClickOutside/\n\nimport { useEffect } from \"react\";\n\nexport function useOnClickOutside(ref: any, handler: any) {\n  useEffect(\n    () => {\n      const listener = (event: any) => {\n        // Do nothing if clicking ref's element or descendent elements\n\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n\n      document.addEventListener(\"touchstart\", listener);\n\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    },\n\n    // Add ref and handler to effect dependencies\n\n    // It's worth noting that because passed in handler is a new ...\n\n    // ... function on every render that will cause this effect ...\n\n    // ... callback/cleanup to run every render. It's not a big deal ...\n\n    // ... but to optimize you can wrap handler in useCallback before ...\n\n    // ... passing it into this hook.\n\n    [ref, handler]\n  );\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useOnClickOutside } from \"lib/hooks\";\nimport React, { useRef } from \"react\";\nimport { ChromePicker } from \"react-color\";\nimport { hasOpacity } from \"styles/opacity\";\n\nconst ColorSquare = styled.div<{\n  size: string;\n  color: string;\n}>`\n  cursor: pointer;\n  height: ${(p) => p.size};\n  width: ${(p) => p.size};\n  border-radius: 0.5rem;\n  border: solid 0.1rem rgba(255, 255, 255, 0.2);\n  background-color: ${(p) => p.color};\n`;\n\nconst ResetButton = styled.div`\n  position: absolute;\n  transform: translateX(-50%);\n  margin-top: 0.2rem;\n  margin-left: 50%;\n  font-size: 1.1rem;\n  cursor: pointer;\n  padding: 0.2rem 0.5rem;\n  ${hasOpacity(0.5)};\n`;\n\nexport const ColorPicker: React.FC<{\n  value: string;\n  defaultColor?: string;\n  onChange: (val: string) => void;\n}> = ({ value, onChange, defaultColor }) => {\n  const [show, setShow] = React.useState(false);\n  const wrapperRef = useRef(null);\n  const showReset = defaultColor && value !== defaultColor;\n\n  useOnClickOutside(wrapperRef, () => {\n    if (show) {\n      setShow(false);\n    }\n  });\n\n  const onClick = () => {\n    if (!show) {\n      setShow(true);\n    }\n  };\n\n  const resetClick = () => {\n    if (defaultColor) {\n      onChange(defaultColor);\n    }\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <ColorSquare color={value} size=\"5rem\" ref={wrapperRef} onClick={onClick}>\n        {show && (\n          <div\n            css={css`\n              position: absolute;\n              z-index: 9999;\n              bottom: 0;\n            `}\n          >\n            <ChromePicker color={value} onChange={(color) => onChange(color.hex)} />\n          </div>\n        )}\n      </ColorSquare>\n      {showReset && <ResetButton onClick={resetClick}>RESET</ResetButton>}\n    </div>\n  );\n};\n","/** @jsx jsx */ import { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { ColorPicker } from \"components/ColorPicker\";\nimport React from \"react\";\n\nconst ColorContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 1rem;\n  justify-items: center;\n  align-items: center;\n`;\n\nconst ColorLabel = styled.div`\n  font-weight: 600;\n  font-size: 1.6rem;\n`;\n\nexport interface DualColorPickerProps {\n  leftLabel: string;\n  rightLabel: string;\n  leftColor: string;\n  rightColor: string;\n  defaultLeftColor?: string;\n  defaultRightColor?: string;\n  onLeftColorChange: (color: string) => void;\n  onRightColorChange: (color: string) => void;\n}\n\nexport const DualColorPicker: React.FC<DualColorPickerProps> = (props) => {\n  const {\n    defaultLeftColor,\n    defaultRightColor,\n    leftLabel,\n    rightLabel,\n    leftColor,\n    rightColor,\n    onLeftColorChange,\n    onRightColorChange,\n  } = props;\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-column-gap: 2.5rem;\n        grid-template-columns: repeat(2, 1fr);\n      `}\n    >\n      <ColorContainer\n        css={css`\n          justify-self: end;\n        `}\n      >\n        <ColorLabel>{leftLabel}</ColorLabel>\n        <div>\n          <ColorPicker value={leftColor} onChange={onLeftColorChange} defaultColor={defaultLeftColor} />\n        </div>\n      </ColorContainer>\n      <ColorContainer\n        css={css`\n          justify-self: start;\n        `}\n      >\n        <div>\n          <ColorPicker value={rightColor} onChange={onRightColorChange} defaultColor={defaultRightColor} />\n        </div>\n        <ColorLabel>{rightLabel}</ColorLabel>\n      </ColorContainer>\n    </div>\n  );\n};\n","/** @jsx jsx */ import { css, jsx } from \"@emotion/core\";\nimport { DualColorPicker } from \"components/ColorPicker\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nexport interface DualColorPanelProps {\n  panelLabel: string;\n  leftLabel: string;\n  leftColorParam: string;\n  leftDefault: string;\n  rightLabel: string;\n  rightColorParam: string;\n  rightDefault: string;\n}\n\nexport const DualColorPanel: React.FC<DualColorPanelProps> = (props) => {\n  const { panelLabel, leftLabel, leftColorParam, leftDefault, rightLabel, rightColorParam, rightDefault } = props;\n  const existingLeftColor = localStorage.getItem(leftColorParam);\n  const existingRightColor = localStorage.getItem(rightColorParam);\n  const [leftColor, setLeftColor] = useParam(leftColorParam, existingLeftColor || leftDefault);\n  const [rightColor, setRightColor] = useParam(rightColorParam, existingRightColor || rightDefault);\n\n  const onLeftColorChange = (color: string) => {\n    localStorage.setItem(leftColorParam, color);\n    setLeftColor(color);\n  };\n\n  const onRightColorChange = (color: string) => {\n    localStorage.setItem(rightColorParam, color);\n    setRightColor(color);\n  };\n\n  return (\n    <Panel title={panelLabel}>\n      <DualColorPicker\n        leftLabel={leftLabel}\n        rightLabel={rightLabel}\n        leftColor={leftColor}\n        rightColor={rightColor}\n        defaultLeftColor={leftDefault}\n        defaultRightColor={rightDefault}\n        onLeftColorChange={onLeftColorChange}\n        onRightColorChange={onRightColorChange}\n      />\n    </Panel>\n  );\n};\n\nconst Panel: React.FC<{ title: string }> = (props) => {\n  return (\n    <div>\n      <div\n        css={css`\n          text-align: center;\n          margin-bottom: 2rem;\n          font-weight: 800;\n          font-size: 2rem;\n        `}\n      >\n        {props.title}\n      </div>\n      {props.children}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { characters as characterUtil } from \"@slippi/slippi-js\";\nimport { CopyToClipboard } from \"components/CopyToClipboard\";\nimport { ExternalLink as A } from \"components/ExternalLink\";\nimport { OBSDragButton } from \"components/OBSDragButton\";\nimport { useOnClickOutside, useParam } from \"lib/hooks\";\nimport { PortColor } from \"lib/portColor\";\nimport React from \"react\";\nimport { hasOpacity } from \"styles/opacity\";\nimport { defaultTheme } from \"styles/theme\";\n\nimport { DualColorPanel } from \"./Panel\";\n\nconst Content = styled.div`\n  padding-top: 2rem;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n`;\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Heading = styled.h2`\n  display: block;\n  position: absolute;\n  width: 100%;\n  top: 0;\n  transform: translateY(-100%);\n  background-color: inherit;\n  margin: 0;\n  text-align: center;\n  padding: 1rem 0;\n  font-size: 2rem;\n  &::after {\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.2), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 10%;\n    bottom: 0;\n  }\n`;\n\nconst Outer = styled.div`\n  position: fixed;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  background-color: black;\n  opacity: 0.2;\n  z-index: 10;\n  &.closed:hover {\n    cursor: pointer;\n    opacity: 0.8;\n  }\n  &.open {\n    opacity: 1;\n    transform: translateY(-100%);\n    .close-button {\n      opacity: 1;\n    }\n  }\n  transition: all 0.2s ease-in-out;\n  .close-button {\n    z-index: 10;\n    position: absolute;\n    right: 3rem;\n    top: 1rem;\n    opacity: 0;\n    transition: opacity 0.2s ease-in-out;\n    color: black;\n    background-color: white;\n    padding: 0.2rem 1rem;\n    font-weight: bold;\n    font-size: 2.5rem;\n    cursor: pointer;\n    transform: translateY(-100%);\n  }\n`;\n\nexport const Options: React.FC = () => {\n  const [open, setOpen] = React.useState(false);\n  const [char1] = useParam(\"char1\");\n  const [char2] = useParam(\"char2\");\n\n  const charName1 = characterUtil.getCharacterShortName(+char1);\n  const charName2 = characterUtil.getCharacterShortName(+char2);\n  const obsLayerName = `Slippi Stats - ${charName1} v ${charName2}`;\n\n  const outerRef = React.useRef(null);\n\n  useOnClickOutside(outerRef, () => {\n    if (open) {\n      setOpen(false);\n    }\n  });\n\n  const showOptions = () => {\n    if (!open) {\n      setOpen(true);\n    }\n  };\n\n  const closeOptions = () => setOpen(false);\n\n  return (\n    <Outer className={open ? \"open\" : \"closed\"} ref={outerRef} onClick={showOptions}>\n      <div className=\"close-button\" onClick={closeOptions} title=\"Close\">\n        ✕\n      </div>\n      <Heading>OPTIONS</Heading>\n      <Content>\n        <Column>\n          <DualColorPanel\n            panelLabel=\"PLAYER COLOR\"\n            leftLabel=\"LEFT\"\n            rightLabel=\"RIGHT\"\n            leftDefault={PortColor.P1}\n            leftColorParam=\"leftColor\"\n            rightColorParam=\"rightColor\"\n            rightDefault={PortColor.P2}\n          />\n        </Column>\n        <Column>\n          <div\n            css={css`\n              margin-top: 1rem;\n            `}\n          >\n            <OBSDragButton options={{ \"layer-name\": obsLayerName, \"layer-width\": 1920, \"layer-height\": 1080 }} />\n            <div\n              css={css`\n                margin-top: 0.5rem;\n                text-align: center;\n                font-size: 1.2rem;\n                ${hasOpacity(0.5)};\n              `}\n            >\n              <CopyToClipboard text={window.location.href}>\n                <span>copy link to clipboard</span>\n              </CopyToClipboard>\n            </div>\n          </div>\n          <div\n            css={css`\n              font-size: 1.5rem;\n              margin: 2rem 0;\n              ${hasOpacity(0.5)}\n              a:hover {\n                text-decoration: underline;\n              }\n            `}\n          >\n            Made with love by <A href=\"https://twitter.com/_vinceau\">Vince Au</A>\n          </div>\n        </Column>\n        <Column>\n          <DualColorPanel\n            panelLabel=\"THEME COLOR\"\n            leftLabel=\"PRIMARY\"\n            rightLabel=\"SECONDARY\"\n            leftDefault={defaultTheme.primaryColor}\n            leftColorParam=\"primaryColor\"\n            rightColorParam=\"secondaryColor\"\n            rightDefault={defaultTheme.secondaryColor}\n          />\n        </Column>\n      </Content>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useParam } from \"lib/hooks\";\nimport { getCharacterVSScreen, Side } from \"lib/resources\";\nimport React from \"react\";\n\nexport interface CharDisplayProps {\n  colorParam: string;\n  charParam: string;\n  align: Side;\n  theme: string;\n}\n\n// Some characters have their faces to the right so it get cut off\n// so adjust the alignment so you can properly see their faces.\nconst RIGHT_CHAR_ALIGNMENT = new Map<string, string>();\nRIGHT_CHAR_ALIGNMENT.set(\"5\", \"right top\"); // Bowser\nRIGHT_CHAR_ALIGNMENT.set(\"19\", \"right top\"); // Sheik\nRIGHT_CHAR_ALIGNMENT.set(\"23\", \"left 80%\"); // Roy\n\nfunction getAlignment(facing: Side, char: string, defaultAlignment: string): string {\n  if (facing === \"left\") {\n    return defaultAlignment;\n  }\n\n  // We so far only care about the right hand side of the VS-screen\n  const customCharAlign = RIGHT_CHAR_ALIGNMENT.get(char);\n  if (customCharAlign) {\n    return customCharAlign;\n  }\n\n  return defaultAlignment;\n}\n\nexport const CharDisplay: React.FC<CharDisplayProps> = (props) => {\n  const { colorParam, charParam, align, theme } = props;\n  const [color] = useParam(colorParam);\n  const [char] = useParam(charParam);\n  const facing: Side = align === \"left\" ? \"right\" : \"left\";\n  const imgSrc = getCharacterVSScreen(facing, char, color);\n  const alignment = getAlignment(facing, char, `${align} top`);\n  return (\n    <div\n      css={css`\n        height: 80%;\n        width: 100%;\n        position: relative;\n        background: radial-gradient(circle at center -30%, ${theme}, transparent);\n        &::after {\n          content: ' ';\n          position: absolute;\n          height: 100%;\n          width: 100%;\n          background-image: url(\"${imgSrc}\");\n          background-repeat: no-repeat;\n          background-size: cover;\n          background-position: ${alignment};\n        }\n      `}\n    ></div>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Block = styled.div<{\n  color: string;\n  backgroundColor: string;\n}>`\n  color: ${(p) => p.color};\n  background-color: ${(p) => p.backgroundColor};\n  text-align: center;\n  padding: 0.3em 0;\n  font-size: 1.2em;\n  box-shadow: 0.2em 0.2em 0.2em black;\n`;\n","// From: https://dev.to/joelmturner/build-an-inline-edit-text-input-with-react-hooks-4nah\n\nimport \"./index.scss\";\n\nimport { useKeyPress, useOnClickOutside } from \"lib/hooks\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nexport interface InlineEditProps {\n  text: string;\n  textAlign?: \"left\" | \"right\";\n  onSetText: (text: string) => void;\n  onBlur?: () => void;\n  onFocus?: () => void;\n  placeholder?: string;\n}\n\nexport const InlineEdit: React.FC<InlineEditProps> = (props) => {\n  const { text, onSetText, textAlign, placeholder } = props;\n  const [isInputActive, _setIsInputActive] = useState(false);\n  const [inputValue, setInputValue] = useState(text);\n\n  const setIsInputActive = React.useCallback(\n    (isActive: boolean) => {\n      if (isActive !== isInputActive) {\n        // Value has changed\n        if (isActive && props.onFocus) {\n          props.onFocus();\n        }\n\n        if (!isActive && props.onBlur) {\n          props.onBlur();\n        }\n      }\n      _setIsInputActive(isActive);\n    },\n    [isInputActive, props]\n  );\n\n  const wrapperRef = useRef(null);\n  const textRef = useRef(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const tab = useKeyPress(\"Tab\");\n  const enter = useKeyPress(\"Enter\");\n  const esc = useKeyPress(\"Escape\");\n\n  useEffect(() => {\n    setInputValue(text);\n  }, [text]);\n\n  // check to see if the user clicked outside of this component\n  useOnClickOutside(wrapperRef, () => {\n    if (isInputActive) {\n      onSetText(inputValue);\n      setIsInputActive(false);\n    }\n  });\n\n  // focus the cursor in the input field on edit start\n  useEffect(() => {\n    if (isInputActive && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isInputActive]);\n\n  useEffect(() => {\n    if (isInputActive) {\n      // if Enter or tab is pressed, save the text and case the editor\n      if (enter || tab) {\n        onSetText(inputValue);\n        setIsInputActive(false);\n      }\n      // if Escape is pressed, revert the text and close the editor\n      if (esc) {\n        setInputValue(props.text);\n        setIsInputActive(false);\n      }\n    }\n  }, [tab, enter, esc, isInputActive, onSetText, setIsInputActive, inputValue, props.text]); // watch for key presses\n\n  return (\n    <span className=\"inline-text\" ref={wrapperRef}>\n      <span\n        ref={textRef}\n        onClick={() => setIsInputActive(true)}\n        className={`inline-text_copy inline-text_copy--${!isInputActive ? \"active\" : \"hidden\"}`}\n      >\n        {props.text || placeholder}\n      </span>\n      <input\n        ref={inputRef}\n        style={{ textAlign, maxWidth: \"100%\" }}\n        value={inputValue}\n        onChange={(e) => {\n          setInputValue(e.target.value);\n        }}\n        className={`inline-text_input inline-text_input--${isInputActive ? \"active\" : \"hidden\"}`}\n      />\n    </span>\n  );\n};\n\nInlineEdit.defaultProps = {\n  text: \"\",\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onSetText: () => {},\n};\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { hasOpacity } from \"styles/opacity\";\n\nimport { InlineEdit } from \"../InlineEdit\";\nimport { Block } from \"./Block\";\n\nexport interface EditBlockProps {\n  color: string;\n  backgroundColor: string;\n  value: string;\n  placeholder?: string;\n  onEdit: (val: string) => void;\n}\n\nexport const EditBlock: React.FC<EditBlockProps> = ({ onEdit, backgroundColor, value, color }) => {\n  return (\n    <Block color={color} backgroundColor={backgroundColor}>\n      <InlineEdit text={value} onSetText={onEdit} />\n    </Block>\n  );\n};\n\nconst OptionalBlock = styled(Block)<{\n  show?: boolean;\n}>`\n  ${(p) => hasOpacity(p.show ? 1 : 0)};\n  position: relative;\n  &:hover {\n    z-index: 10;\n  }\n`;\n\nexport const OptionalEditBlock: React.FC<EditBlockProps> = ({ onEdit, backgroundColor, value, color, placeholder }) => {\n  const [focused, setFocused] = React.useState(false);\n  const show = focused || Boolean(value);\n  return (\n    <OptionalBlock show={show} color={color} backgroundColor={backgroundColor}>\n      <InlineEdit\n        text={value}\n        onSetText={onEdit}\n        onFocus={() => setFocused(true)}\n        onBlur={() => setFocused(false)}\n        placeholder={placeholder}\n      />\n    </OptionalBlock>\n  );\n};\n\nOptionalEditBlock.defaultProps = {\n  placeholder: \"click to edit\",\n};\n","import styled from \"@emotion/styled\";\nimport { OptionalEditBlock } from \"components/Block\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nconst Name = styled.div`\n  font-size: 150%;\n  font-weight: 800;\n`;\n\nconst Subtitle = styled.div<{\n  show?: boolean;\n}>`\n  margin-top: -0.3rem;\n  margin-left: auto;\n  margin-right: auto;\n  width: 80%;\n  font-weight: 600;\n`;\n\nexport interface NameBlockProps {\n  nameParam: string;\n  subtitleParam: string;\n  primaryColor: string;\n}\n\nexport const NameBlock: React.FC<NameBlockProps> = ({ nameParam, subtitleParam, primaryColor }) => {\n  const [name, setName] = useParam(nameParam);\n  const [sub, setSub] = useParam(subtitleParam);\n  return (\n    <div>\n      <Name>\n        <OptionalEditBlock value={name} onEdit={setName} color=\"white\" backgroundColor={primaryColor} />\n      </Name>\n      <Subtitle>\n        <OptionalEditBlock value={sub} onEdit={setSub} color=\"black\" backgroundColor=\"white\" />\n      </Subtitle>\n    </div>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport { getCharacterPortrait } from \"lib/resources\";\nimport React from \"react\";\n\nconst Outer = styled.div<{\n  borderColor: string;\n  onClick?: any;\n}>`\n  position: relative;\n  display: block;\n  border: solid 0.1rem ${(p) => p.borderColor};\n  height: 5rem;\n  width: 100%;\n  max-width: 10rem;\n  ${(p) => (p.onClick ? \"cursor: pointer;\" : \"\")}\n`;\n\nconst BaseHeadImage = styled.div`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  &::after {\n    content: \" \";\n    height: 100%;\n    background-repeat: no-repeat;\n    background-size: cover;\n    position: absolute;\n  }\n`;\n\nconst HeadImage = styled(BaseHeadImage)<{\n  backgroundColor?: string;\n  imageSrc: string;\n  side: \"left\" | \"right\";\n  waypoint: number;\n  dim?: boolean;\n}>`\n  ${(p) => {\n    const invWaypoint = 100 - p.waypoint;\n    return `\n      ${p.side === \"right\" ? `clip-path: polygon(${p.waypoint}% 0, 100% 0, 100% 100%, ${invWaypoint}% 100%);` : \"\"}\n      ${p.dim ? \"filter: brightness(25%);\" : \"\"}\n      ${p.backgroundColor ? `background: radial-gradient(circle at center -30%, ${p.backgroundColor}, black);` : \"\"}\n      &::after {\n        width: ${p.waypoint}%;\n        background-image: url(\"${p.imageSrc}\");\n        background-position: top ${p.side};\n        ${p.side === \"right\" ? `left: ${invWaypoint}%;` : \"transform: scaleX(-1);\"}\n      }\n    `;\n  }}\n`;\n\nexport interface HeadToHeadProps {\n  char1: number | string;\n  color1: string;\n  result1: string;\n  char2: number | string;\n  color2: string;\n  result2: string;\n  leftColor: string;\n  rightColor: string;\n  borderColor?: string;\n  onClick?: () => void;\n}\n\nexport const HeadToHead: React.FC<HeadToHeadProps> = ({\n  char1,\n  color1,\n  result1,\n  char2,\n  color2,\n  result2,\n  leftColor,\n  rightColor,\n  borderColor,\n  onClick,\n}) => {\n  const waypoint = 55;\n  const p1 = getCharacterPortrait(char1, color1);\n  const p2 = getCharacterPortrait(char2, color2);\n\n  const clickHandler = () => {\n    if (onClick) {\n      onClick();\n    }\n  };\n\n  return (\n    <Outer borderColor={borderColor || \"transparent\"} onClick={clickHandler}>\n      <HeadImage backgroundColor={leftColor} imageSrc={p1} waypoint={waypoint} side=\"left\" dim={result1 === \"loser\"} />\n      <HeadImage\n        backgroundColor={rightColor}\n        imageSrc={p2}\n        waypoint={waypoint}\n        side=\"right\"\n        dim={result2 === \"loser\"}\n      />\n    </Outer>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport { getStageIcon } from \"lib/resources\";\nimport React from \"react\";\n\nconst Text = styled.span`\n  font-size: 2.5rem;\n  font-weight: bold;\n  opacity: 0.7;\n  text-shadow: 2px 2px 2px black;\n`;\n\nconst Outer = styled.div<{\n  src: string;\n  borderColor: string;\n}>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  height: 9rem;\n  width: 100%;\n  border: solid 1px ${(p) => p.borderColor};\n  z-index: 0;\n\n  &::after {\n    content: ' ';\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-image: url(\"${(p) => p.src}\");\n    background-repeat: no-repeat;\n    background-size: 105% auto;\n    background-position: center;\n    filter: blur(2px) brightness(30%);\n    z-index: -1;\n  }\n`;\n\ninterface StageTimerProps {\n  stageId: string | number;\n  duration: string;\n  borderColor?: string;\n}\n\nexport const StageTimer: React.FC<StageTimerProps> = ({ stageId, duration, borderColor }) => {\n  const stageIcon = getStageIcon(stageId);\n  return (\n    <Outer src={stageIcon} borderColor={borderColor || \"transparent\"}>\n      <Text>{duration}</Text>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { HeadToHead } from \"components/HeadToHead\";\nimport { StageTimer } from \"components/StageTimer\";\nimport { GameInfo } from \"lib/hooks\";\nimport React from \"react\";\n\nexport interface GameResultProps {\n  gameInfo: GameInfo | null;\n  onGameInfoChange: (info: Partial<GameInfo>) => void;\n  leftColor: string;\n  rightColor: string;\n  winningSide?: string;\n}\n\nconst switchResult = (res: string): string => {\n  return res === \"winner\" ? \"loser\" : res === \"loser\" ? \"winner\" : res;\n};\n\nexport const GameResult: React.FC<GameResultProps> = (props) => {\n  const { gameInfo, onGameInfoChange } = props;\n  if (!gameInfo) {\n    return null;\n  }\n\n  const gameWinner = gameInfo.result1 === \"winner\" ? \"left\" : gameInfo.result2 === \"winner\" ? \"right\" : \"\";\n  const highlight = props.winningSide === gameWinner;\n\n  const { stageId, duration, ...rest } = gameInfo;\n  const borderColor = `rgba(255, 255, 255, ${highlight ? 1 : 0.2})`;\n\n  const onClick = () => {\n    onGameInfoChange({\n      result1: switchResult(gameInfo.result1),\n      result2: switchResult(gameInfo.result2),\n    });\n  };\n\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-template-columns: 100%;\n        justify-items: center;\n        width: 100%;\n        max-width: 18rem;\n        grid-row-gap: 2rem;\n      `}\n    >\n      <HeadToHead\n        onClick={onClick}\n        leftColor={props.leftColor}\n        rightColor={props.rightColor}\n        borderColor={borderColor}\n        {...rest}\n      />\n      <StageTimer stageId={stageId} duration={duration} borderColor={borderColor} />\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { GameInfo } from \"lib/hooks\";\nimport React from \"react\";\n\nimport { GameResult } from \"./GameResult\";\n\nexport const GameDisplay: React.FC<{\n  games: Array<GameInfo | null>;\n  updateGameInfo: (gameNumber: number, gameInfo: Partial<GameInfo>) => void;\n  leftColor: string;\n  rightColor: string;\n  winningSide?: string;\n}> = (props) => {\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-column-gap: 2rem;\n        grid-template-columns: repeat(${props.games.length}, 1fr);\n        justify-items: center;\n      `}\n    >\n      {props.games.map((game, i) => (\n        <GameResult\n          key={`game${i}`}\n          gameInfo={game}\n          onGameInfoChange={(info) => props.updateGameInfo(i + 1, info)}\n          leftColor={props.leftColor}\n          rightColor={props.rightColor}\n          winningSide={props.winningSide}\n        />\n      ))}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport { Block } from \"./Block\";\n\nexport interface StatProps {\n  label: string;\n  color: string;\n  backgroundColor: string;\n  leftComponent: React.ReactNode;\n  rightComponent: React.ReactNode;\n}\n\nconst StatLabel = styled(Block)`\n  padding: 0.3em 2.5em;\n  font-weight: 700;\n  font-size: 1.2em;\n  justify-self: center;\n`;\n\nconst StatContent = styled.div`\n  width: 100%;\n  font-weight: 800;\n  font-size: 2.3em;\n`;\n\nconst TextContent = styled(StatContent)`\n  font-size: 1.4em;\n`;\n\nconst OuterStat = styled.div`\n  display: grid;\n  grid-template-columns: 20% 60% 20%;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.4), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nconst Stat: React.FC<StatProps> = (props) => {\n  const { label, backgroundColor, color, leftComponent, rightComponent } = props;\n  return (\n    <OuterStat>\n      <div\n        css={css`\n          width: 100%;\n          justify-self: start;\n        `}\n      >\n        {leftComponent}\n      </div>\n      <StatLabel backgroundColor={backgroundColor} color={color}>\n        {label}\n      </StatLabel>\n      <div\n        css={css`\n          width: 100%;\n          justify-self: end;\n          text-align: right;\n        `}\n      >\n        {rightComponent}\n      </div>\n    </OuterStat>\n  );\n};\n\nStat.defaultProps = {\n  color: \"black\",\n  backgroundColor: \"white\",\n};\n\nexport const NumberStat: React.FC<StatProps> = (props) => {\n  const { leftComponent, rightComponent, ...rest } = props;\n  return (\n    <Stat\n      leftComponent={<StatContent>{leftComponent}</StatContent>}\n      rightComponent={<StatContent>{rightComponent}</StatContent>}\n      {...rest}\n    />\n  );\n};\n\nexport const TextStat: React.FC<StatProps> = (props) => {\n  const { leftComponent, rightComponent, ...rest } = props;\n  return (\n    <Stat\n      leftComponent={<TextContent>{leftComponent}</TextContent>}\n      rightComponent={<TextContent>{rightComponent}</TextContent>}\n      {...rest}\n    />\n  );\n};\n","import { InlineEdit } from \"components/InlineEdit\";\nimport { NumberStat, TextStat } from \"components/Stat\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\nimport { Theme } from \"styles/theme\";\n\ninterface ConnectedStatProps {\n  param1: string;\n  param2: string;\n  label: string;\n}\n\nconst ConnectedNumberStat: React.FC<ConnectedStatProps> = (props) => {\n  const { param1, param2, label } = props;\n  const defaultValue = \"0\";\n  const [field1, setField1] = useParam(param1, defaultValue);\n  const [field2, setField2] = useParam(param2, defaultValue);\n  return (\n    <NumberStat\n      label={label}\n      color=\"black\"\n      backgroundColor=\"white\"\n      leftComponent={<InlineEdit text={field1} onSetText={setField1} />}\n      rightComponent={<InlineEdit text={field2} textAlign=\"right\" onSetText={setField2} />}\n    />\n  );\n};\n\nconst ConnectedTextStat: React.FC<ConnectedStatProps & Theme> = (props) => {\n  const { param1, param2, label, primaryColor } = props;\n  const defaultValue = \"-\";\n  const [field1, setField1] = useParam(param1, defaultValue);\n  const [field2, setField2] = useParam(param2, defaultValue);\n  return (\n    <TextStat\n      label={label}\n      color=\"white\"\n      backgroundColor={primaryColor}\n      leftComponent={<InlineEdit text={field1} onSetText={setField1} />}\n      rightComponent={<InlineEdit text={field2} textAlign=\"right\" onSetText={setField2} />}\n    />\n  );\n};\n\nexport const MostCommonKillMove: React.FC<Theme> = (props) => {\n  return <ConnectedTextStat param1=\"mckm1\" param2=\"mckm2\" label=\"MOST COMMON KILL MOVE\" {...props} />;\n};\n\nexport const MostCommonNeutralOpener: React.FC<Theme> = (props) => {\n  return <ConnectedTextStat param1=\"mcno1\" param2=\"mcno2\" label=\"MOST COMMON NEUTRAL OPENER\" {...props} />;\n};\n\nexport const AverageKillPercent: React.FC = () => {\n  return <ConnectedNumberStat param1=\"akp1\" param2=\"akp2\" label=\"AVERAGE KILL PERCENT\" />;\n};\n\nexport const NeutralWins: React.FC = () => {\n  return <ConnectedNumberStat param1=\"nw1\" param2=\"nw2\" label=\"NEUTRAL WINS\" />;\n};\n\nexport const DamagePerOpening: React.FC = () => {\n  return <ConnectedNumberStat param1=\"dpo1\" param2=\"dpo2\" label=\"DAMAGE / OPENING\" />;\n};\n\nexport const InputsPerMinute: React.FC = () => {\n  return <ConnectedNumberStat param1=\"ipm1\" param2=\"ipm2\" label=\"INPUTS / MINUTE\" />;\n};\n\nexport const OpeningsPerKill: React.FC = () => {\n  return <ConnectedNumberStat param1=\"opk1\" param2=\"opk2\" label=\"OPENINGS / KILL\" />;\n};\n\nexport const TotalDamageDone: React.FC = () => {\n  return <ConnectedNumberStat param1=\"tdd1\" param2=\"tdd2\" label=\"TOTAL DAMAGE DONE\" />;\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { Block } from \"components/Block\";\nimport { GameDisplay } from \"components/GameDisplay\";\nimport { useGames } from \"lib/hooks\";\nimport React from \"react\";\n\nimport {\n  AverageKillPercent,\n  MostCommonKillMove,\n  MostCommonNeutralOpener,\n  NeutralWins,\n  OpeningsPerKill,\n  TotalDamageDone,\n} from \"./Statistics\";\n\nconst Divider = styled.div`\n  content: \" \";\n  display: block;\n  height: 0.1rem;\n  width: 100%;\n  margin-top: 0.7rem;\n  background-color: rgba(255, 255, 255, 0.05);\n`;\n\nconst ScoreBlock = styled(Block)`\n  padding: 0.5rem 4rem;\n  font-size: 5rem;\n  font-weight: 800;\n  position: absolute;\n  bottom: -6rem;\n  left: 50%;\n  transform: translateX(-50%);\n`;\n\nexport const StatDisplay: React.FC<{\n  primaryColor: string;\n  secondaryColor: string;\n  leftColor: string;\n  rightColor: string;\n}> = (props) => {\n  const { games, score, setGame } = useGames();\n  const winningSide = score.left > score.right ? \"left\" : score.right > score.left ? \"right\" : \"\";\n  const { leftColor, rightColor, ...theme } = props;\n  return (\n    <div\n      css={css`\n        background: linear-gradient(to right, ${props.secondaryColor}, transparent, ${props.secondaryColor});\n        width: 100%;\n      `}\n    >\n      <div\n        css={css`\n          display: grid;\n          grid-template-columns: 100%;\n          grid-row-gap: 2rem;\n          margin: 4rem;\n        `}\n      >\n        <MostCommonKillMove {...theme} />\n        <MostCommonNeutralOpener {...theme} />\n        <Divider />\n        <OpeningsPerKill />\n        <TotalDamageDone />\n        <AverageKillPercent />\n        <NeutralWins />\n        <Divider />\n        <GameDisplay\n          games={games}\n          updateGameInfo={setGame}\n          winningSide={winningSide}\n          leftColor={leftColor}\n          rightColor={rightColor}\n        />\n      </div>\n      <ScoreBlock color=\"white\" backgroundColor={props.primaryColor}>\n        {`${score.left} - ${score.right}`}\n      </ScoreBlock>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport interface GameInfo {\n  stageId: string;\n  duration: string;\n  char1: string;\n  color1: string;\n  result1: string;\n  char2: string;\n  color2: string;\n  result2: string;\n}\n\nexport function useGames() {\n  const [games, setGames] = useState<Array<GameInfo | null>>([]);\n  const [score, setScore] = useState<{ left: number; right: number }>({ left: 0, right: 0 });\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const gt = params.get(\"gt\") || \"0\";\n    const totalGames = parseInt(gt, 10) || 0;\n\n    let char1Score = 0;\n    let char2Score = 0;\n\n    const gameInfos: Array<GameInfo | null> = [];\n\n    for (let i = 1; i <= totalGames; i++) {\n      const gameInfoString = params.get(`g${i}`);\n\n      if (!gameInfoString) {\n        // Game is undefined\n        gameInfos.push(null);\n        continue;\n      }\n\n      // Generate the game info\n      const [stageId, duration, char1, color1, result1, char2, color2, result2] = gameInfoString.split(\",\");\n      gameInfos.push({\n        stageId,\n        duration,\n        char1,\n        color1,\n        result1,\n        char2,\n        color2,\n        result2,\n      });\n\n      // Update the scores\n      if (result1 === \"winner\") {\n        char1Score += 1;\n      }\n\n      if (result2 === \"winner\") {\n        char2Score += 1;\n      }\n    }\n\n    setGames(gameInfos);\n    setScore({ left: char1Score, right: char2Score });\n  }, [location]);\n\n  const setParam = (gameNumber: number, val: Partial<GameInfo>) => {\n    const currentGameData = games[gameNumber - 1];\n    const newValues = Object.assign({}, currentGameData, val);\n    const { stageId, duration, char1, color1, result1, char2, color2, result2 } = newValues;\n    const infoString = [stageId, duration, char1, color1, result1, char2, color2, result2].join(\",\");\n\n    const params = new URLSearchParams(location.search);\n    params.set(`g${gameNumber}`, infoString);\n    const search = \"?\" + params.toString();\n    history.push({\n      pathname: location.pathname,\n      search,\n    });\n  };\n\n  return {\n    games,\n    score,\n    setGame: setParam,\n  };\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useParam } from \"lib/hooks\";\nimport { PortColor } from \"lib/portColor\";\nimport React from \"react\";\nimport { Theme } from \"styles/theme\";\n\nimport { CharDisplay } from \"./CharDisplay\";\nimport { NameBlock } from \"./NameBlock\";\nimport { StatDisplay } from \"./StatDisplay\";\n\nconst Outer = styled.div`\n  position: relative;\n  width: 100%;\n  display: grid;\n  grid-template-columns: 20% 60% 20%;\n`;\n\nconst NameBlockContainer = styled.div<{\n  align: \"left\" | \"right\";\n}>`\n  ${(p) => `\n  width: 20%;\n  position: absolute;\n  ${p.align}: 0;\n  margin-${p.align}: 2rem;\n  bottom: 15%;\n  `}\n`;\n\nexport const RenderDisplay: React.FC<Theme> = (theme) => {\n  const [leftColor] = useParam(\"leftColor\", PortColor.P1);\n  const [rightColor] = useParam(\"rightColor\", PortColor.P2);\n  return (\n    <Outer>\n      <div\n        css={css`\n          justify-self: end;\n          width: 100%;\n        `}\n      >\n        <CharDisplay theme={leftColor} charParam=\"char1\" colorParam=\"color1\" align=\"right\" />\n      </div>\n      <StatDisplay leftColor={leftColor} rightColor={rightColor} {...theme} />\n      <div\n        css={css`\n          width: 100%;\n        `}\n      >\n        <CharDisplay theme={rightColor} charParam=\"char2\" colorParam=\"color2\" align=\"left\" />\n      </div>\n      <NameBlockContainer align=\"left\">\n        <NameBlock nameParam=\"name1\" subtitleParam=\"sub1\" {...theme} />\n      </NameBlockContainer>\n      <NameBlockContainer align=\"right\">\n        <NameBlock nameParam=\"name2\" subtitleParam=\"sub2\" {...theme} />\n      </NameBlockContainer>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { ExternalLink as A } from \"components/ExternalLink\";\nimport { Header } from \"components/Header\";\nimport { Options } from \"containers/Options\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GlobalTheme } from \"styles/theme\";\n\nimport { RenderDisplay } from \"../containers/RenderDisplay\";\nimport poweredByImage from \"../styles/images/powered-by.png\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  &:hover {\n    .settings {\n      opacity: 1;\n    }\n  }\n  .settings {\n    opacity: 0;\n    transition: opacity 0.2s ease-in-out;\n  }\n`;\n\nexport const RenderView: React.FC = () => {\n  const [primaryColor] = useParam(\"primaryColor\");\n  const [secondaryColor] = useParam(\"secondaryColor\");\n  return (\n    <div\n      css={css`\n        width: 1700px;\n        height: 980px;\n        margin: 0 auto;\n      `}\n    >\n      <Container>\n        <GlobalTheme primaryColor={primaryColor} secondaryColor={secondaryColor} />\n        <Link to=\"/\" title=\"Home\">\n          <Header>Post Match Stats</Header>\n        </Link>\n        <div\n          css={css`\n            margin-bottom: 2rem;\n          `}\n        >\n          <A href=\"https://slippi.gg\">\n            <img\n              alt=\"Powered by Slippi\"\n              title=\"Open Slippi.gg homepage\"\n              src={poweredByImage}\n              css={css`\n                max-height: 5rem;\n              `}\n            />\n          </A>\n        </div>\n        <RenderDisplay primaryColor={primaryColor} secondaryColor={secondaryColor} />\n        <div className=\"settings\">\n          <Options />\n        </div>\n      </Container>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { hot } from \"react-hot-loader/root\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { RandomView } from \"views/RandomView\";\n\nimport { AppProvider } from \"./store\";\nimport { MainView } from \"./views/MainView\";\nimport { RenderView } from \"./views/RenderView\";\n\nconst App: React.FC = () => {\n  return (\n    <AppProvider>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Route exact path=\"/\" component={MainView} />\n        <Route path=\"/render\" component={RenderView} />\n        <Route path=\"/random\" component={RandomView} />\n      </Router>\n    </AppProvider>\n  );\n};\n\nexport default hot(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./index.scss\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}