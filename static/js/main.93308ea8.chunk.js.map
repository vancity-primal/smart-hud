{"version":3,"sources":["lib/winner.ts","lib/readFile.ts","styles/images/obs.png","styles/images/powered-by.png","lib/demo.ts","styles/theme.tsx","lib/searchParams.ts","views/RandomView.tsx","store/reducers.ts","store/context.tsx","components/ExternalLink.tsx","components/Header.tsx","components/DropPad.tsx","components/ErrorMessage.tsx","lib/resources.ts","lib/stats.js","components/FileList/FileItem.tsx","components/FileList/index.tsx","lib/portColor.ts","lib/processStats.ts","containers/FileListInput.tsx","views/MainView.tsx","components/OBSDragButton.tsx","lib/hooks/useParam.ts","lib/hooks/useKeyPress.ts","lib/hooks/useOnClickOutside.ts","components/ColorPicker/ColorPicker.tsx","components/ColorPicker/DualColorPicker.tsx","containers/Options/Panel.tsx","containers/Options/index.tsx","containers/CharDisplay/index.tsx","components/Block/Block.tsx","components/InlineEdit/index.tsx","components/Block/EditBlock.tsx","containers/NameBlock.tsx","containers/ScoreBlock.tsx","components/HeadToHead.tsx","components/StageTimer.tsx","containers/GameDisplay/GameResult.tsx","lib/hooks/useGameInfo.ts","containers/GameDisplay/index.tsx","components/Stat.tsx","containers/StatDisplay/Statistics.tsx","containers/StatDisplay/index.tsx","containers/RenderDisplay.tsx","views/RenderView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["findWinner","lastFrame","Object","keys","players","map","i","post","reduce","a","b","stocksRemaining","percent","playerIndex","readFileAsSlippiGame","file","readFileAsArrayBuffer","data","arr","Int8Array","buf","Buffer","from","SlippiGame","generateGameDetails","name","game","settings","getSettings","Error","filePath","frames","getFrames","stats","getStats","metadata","getMetadata","latestFrame","getLatestFrame","gameEnd","getGameEnd","Promise","resolve","reject","fr","FileReader","onabort","onerror","readAsBinaryString","addEventListener","string","this","resultString","result","Uint8Array","length","charCodeAt","buffer","readAsArrayBuffer","module","exports","getRandomArbitrary","min","max","Math","random","getRandomInt","ceil","floor","generateDemoValues","paramMap","generateRandomCharacter","char1","color1","char2","color2","leftWins","rightWins","totalGames","gt","gameKey","leftWillWin","gameValue","generateRandomGame","join","score","winner","forEach","key","move","moveUtil","getMoveShortName","toUpperCase","generateRandomMove","toFixed","charId","charInfo","characterUtil","getCharacterInfo","colorIndex","colors","LEGAL_STAGE_IDS","playerInfos","stageIndex","generateRandomStageId","mins","secs","String","padStart","generateRandomDuration","defaultTheme","primaryColor","secondaryColor","GlobalTheme","styles","css","generateSearchParams","params","restoredParams","res","value","localStorage","getItem","getStoredValues","URLSearchParams","Types","RandomView","search","toString","to","pathname","initialState","files","AppContext","createContext","state","dispatch","mainReducer","action","type","ADD_GAME","payload","filename","details","fileToReplace","findIndex","f","loading","SET_ERROR","error","ADD_FILES","currentFiles","newFiles","filter","find","existingFile","REMOVE_FILE","CLEAR_ALL","reducer","AppProvider","children","useReducer","Provider","ExternalLink","props","target","rel","Header","styled","h1","Container","div","isDragAccept","isDragActive","getColor","DropPad","useDropzone","getRootProps","getInputProps","isDragReject","ErrorMessage","sanitize","text","replacement","toLowerCase","replace","getCharacterFolderFromId","characterId","color","character","charFolder","colorFolder","process","getCharacterFolderFromName","getCharacterName","getCharacterPortrait","folder","require","stageUtil","stages","moves","characters","moment","_","OPENINGS_PER_KILL","DAMAGE_PER_OPENING","NEUTRAL_WINS","KILL_MOVES","NEUTRAL_OPENER_MOVES","EARLY_KILLS","LATE_DEATHS","SELF_DESTRUCTS","INPUTS_PER_MINUTE","AVG_KILL_PERCENT","HIGH_DAMAGE_PUNISHES","DAMAGE_DONE","statDefininitions","id","betterDirection","recommendedRounding","calculate","games","genOverallRatioStat","killMoves","flatMap","conversions","get","conversionsForPlayer","conversion","isForPlayer","didKill","last","killMovesByMove","groupBy","killMoveCounts","first","count","moveId","getMoveName","shortName","orderedKillMoveCounts","orderBy","topKillMove","simpleText","simple","neutralMoves","isNeutralWin","openingType","neutralMovesByMove","neutralMoveCounts","orderedNeutralMoveCounts","topNeutralMove","oppStocks","stocks","stock","isOpp","hasEndPercent","endPercent","orderedOppStocks","earliestKillStock","number","take","playerStocks","isPlayer","orderedPlayerStocks","latestDeathStock","sdCounts","playerEndedStocks","oppKillConversions","sdSum","sum","total","sumBy","ratio","genSimpleFromRatio","punishes","getDamageDone","punish","startPercent","orderedPunishes","topPunish","field","fixedNum","statRatios","overallStats","keyBy","avg","averageRatios","ratios","computeStats","firstGame","orderIndices","indices","chain","clone","reverse","statKey","def","results","iIndices","port","output","generateGameInfo","orderedGames","startAt","generatePlayerInfo","player","characterColor","nametag","characterName","getCharacterColorName","getResultForPlayer","playerInfoGen","stage","stageId","getStageName","startTime","duration","convertFrameCountToDurationString","generateBtsSummary","summary","fixedStats","generateSummaryItem","fullStatOutput","statsById","statsToRandomizeById","statId","statOutput","push","sdStat","sds1","sds2","shuffled","shuffle","shuffledToInclude","frameCount","utc","as","format","BasicFileItem","onRemove","className","onClick","title","CharacterIcon","src","getCharacterStockIcon","style","height","alt","FileItem","message","stageName","frame","winnerIndex","icons","PortColor","FileList","getPortColor","portNumber","P1","P2","P3","P4","extractNameAndCode","playerPort","index","playerTag","netplayName","processStats","gameDetails","filtered","gamesByIsSingles","nonSinglesGames","some","console","log","singlesGames","gamesByPorts","ports","gamesWithSamePorts","shift","flatGames","flatten","isEmpty","filterGames","btsSummary","generateStats","lastGame","leftPlayer","rightPlayer","leftColor","rightColor","lastGameDetails","leftTag","leftCode","rightTag","rightCode","name1","name2","sub1","sub2","gameDuration","playerInfo","p","gameResult","s","opk1","opk2","dpo1","dpo2","nw1","nw2","playerRes","opponentRes","mckm1","mckm2","mcno1","mcno2","ipm1","ipm2","akp1","akp2","tdd1","tdd2","ProcessButton","button","backgroundColor","FileListInput","buttonColor","history","useHistory","useContext","React","useState","setError","onDrop","useCallback","acceptedFiles","Date","getTime","promises","all","then","time","finishedProcessing","buttonText","accept","disabled","err","linkStyle","MainView","href","Draggable","OBSDragButton","wrapperRef","useRef","location","options","window","entries","val","generateLink","onDragStart","e","img","Image","obsImage","dataTransfer","setDragImage","setData","handleDragStart","onDragEnd","blur","handleDragEnd","preventDefault","ref","width","marginRight","useParam","defaultValue","setValue","useLocation","useEffect","currentValue","setParam","set","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","removeEventListener","useOnClickOutside","handler","listener","event","current","contains","document","ColorSquare","size","ResetButton","ColorPicker","onChange","defaultColor","show","setShow","showReset","position","hex","ColorContainer","ColorLabel","DualColorPicker","defaultLeftColor","defaultRightColor","leftLabel","rightLabel","onLeftColorChange","onRightColorChange","DualColorPanel","panelLabel","leftColorParam","leftDefault","rightColorParam","rightDefault","existingLeftColor","existingRightColor","setLeftColor","setRightColor","setItem","Panel","Content","Column","Heading","h2","Outer","Options","open","setOpen","charName1","getCharacterShortName","charName2","obsLayerName","outerRef","FLIP_RIGHT_CHARS","CharDisplay","colorParam","charParam","align","theme","char","facing","imgSrc","side","getCharacterVSScreen","alignment","defaultAlignment","includes","getAlignment","Block","InlineEdit","onSetText","textAlign","placeholder","isInputActive","_setIsInputActive","inputValue","setInputValue","setIsInputActive","isActive","onFocus","onBlur","textRef","inputRef","tab","enter","esc","focus","maxWidth","defaultProps","OptionalBlock","OptionalEditBlock","onEdit","focused","setFocused","Boolean","Name","Subtitle","NameBlock","nameParam","subtitleParam","setName","sub","setSub","StyledBlock","ScoreBlock","setScore","borderColor","BaseHeadImage","HeadImage","invWaypoint","waypoint","dim","imageSrc","HeadToHead","result1","result2","p1","p2","Text","span","StageTimer","stageIcon","getStageIcon","switchResult","GameResult","gameInfoString","setGameInfoString","gameInfo","setGameInfo","split","newValues","assign","infoString","useGameInfo","gameWinner","highlight","winningSide","rest","GameDisplay","parseInt","StatLabel","StatContent","TextContent","OuterStat","Stat","label","leftComponent","rightComponent","NumberStat","TextStat","ConnectedNumberStat","param1","param2","field1","setField1","field2","setField2","ConnectedTextStat","MostCommonKillMove","MostCommonNeutralOpener","AverageKillPercent","NeutralWins","OpeningsPerKill","TotalDamageDone","Divider","StatDisplay","NameBlockContainer","RenderDisplay","RenderView","poweredByImage","hot","basename","exact","path","component","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.93308ea8.chunk.js","sourcesContent":["import { FrameEntryType } from \"@slippi/slippi-js\";\n\n/**\n * Given the last frame of the game, determine the winner first based on stock count\n * then based on remaining percent.\n * If percents are tied, return the player with the lower port number by default.\n *\n * @returns the player index of the winner\n */\nexport const findWinner = (lastFrame: FrameEntryType): number => {\n  const postFrameEntries = Object.keys(lastFrame.players).map((i: any) => (lastFrame.players[i] as any).post);\n  const winnerPostFrame = postFrameEntries.reduce((a, b) => {\n    // Determine winner based on stock count\n    if (a.stocksRemaining > b.stocksRemaining) {\n      return a;\n    }\n    if (a.stocksRemaining < b.stocksRemaining) {\n      return b;\n    }\n\n    // Stocks are the same so determine winner based off remaining percent\n    if (a.percent < b.percent) {\n      return a;\n    }\n    if (a.percent > b.percent) {\n      return b;\n    }\n\n    // Just return a by default\n    return a;\n  });\n\n  return winnerPostFrame.playerIndex;\n};\n","import {\n  FrameEntryType,\n  FramesType,\n  GameEndType,\n  GameStartType,\n  MetadataType,\n  SlippiGame,\n  StatsType,\n} from \"@slippi/slippi-js\";\n\nexport interface GameDetails {\n  filePath: string;\n  settings: GameStartType;\n  frames: FramesType;\n  stats: StatsType;\n  metadata: MetadataType;\n  latestFrame: FrameEntryType | null;\n  gameEnd: GameEndType | null;\n}\n\nexport async function readFileAsSlippiGame(file: File): Promise<SlippiGame> {\n  const data = (await readFileAsArrayBuffer(file)) as ArrayBuffer;\n  const arr = new Int8Array(data);\n  const buf = Buffer.from(arr);\n  return new SlippiGame(buf);\n}\n\nexport function generateGameDetails(name: string, game: SlippiGame): GameDetails {\n  // For a valid SLP game, at the very least we should have valid settings\n  const settings = game.getSettings();\n  if (!settings) {\n    throw new Error(`Invalid SLP file. Could not find game settings in file: ${name}`);\n  }\n\n  return {\n    filePath: name,\n    settings,\n    frames: game.getFrames(),\n    stats: game.getStats(),\n    metadata: game.getMetadata(),\n    latestFrame: game.getLatestFrame(),\n    gameEnd: game.getGameEnd(),\n  };\n}\n\nasync function readFileAsArrayBuffer(file: File): Promise<string | ArrayBufferLike> {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onabort = () => reject(\"file reading was aborted\");\n    fr.onerror = () => reject(\"file reading has failed\");\n    if (fr.readAsBinaryString) {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          const string = (this as any).resultString != null ? (this as any).resultString : this.result;\n          const result = new Uint8Array(string.length);\n          for (let i = 0; i < string.length; i++) {\n            result[i] = string.charCodeAt(i);\n          }\n          resolve(result.buffer);\n        },\n        false\n      );\n      fr.readAsBinaryString(file);\n    } else {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          if (this.result) {\n            resolve(this.result);\n          } else {\n            reject(\"no data read\");\n          }\n        },\n        false\n      );\n      fr.readAsArrayBuffer(file);\n    }\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/obs.f3f8c219.png\";","module.exports = __webpack_public_path__ + \"static/media/powered-by.61867ea8.png\";","import { characters as characterUtil, moves as moveUtil } from \"@slippi/slippi-js\";\n\n/*\n * Random functions are taken from: https://stackoverflow.com/questions/1527803/generating-random-whole-numbers-in-javascript-in-a-specific-range\n */\n\n/**\n * Returns a random number between min (inclusive) and max (exclusive)\n */\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\n/**\n * Returns a random integer between min (inclusive) and max (inclusive).\n * The value is no lower than min (or the next integer greater than min\n * if min isn't an integer) and no greater than max (or the next integer\n * lower than max if max isn't an integer).\n * Using Math.round() will give you a non-uniform distribution!\n */\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function generateDemoValues(): Record<string, any> {\n  const paramMap: Record<string, any> = {};\n\n  // Set names\n  paramMap.name1 = \"FOLLOW\";\n  paramMap.name2 = \"ON\";\n  paramMap.sub1 = \"@_vinceau\";\n  paramMap.sub2 = \"TWITTER\";\n\n  // Set colors\n  const [char1, color1] = generateRandomCharacter();\n  const [char2, color2] = generateRandomCharacter();\n  paramMap.char1 = char1;\n  paramMap.color1 = color1;\n  paramMap.char2 = char2;\n  paramMap.color2 = color2;\n\n  // Track game wins\n  let leftWins = 0;\n  let rightWins = 0;\n\n  // Random games\n  const totalGames = getRandomInt(3, 5);\n  paramMap.gt = totalGames;\n  for (let i = 1; i <= totalGames; i++) {\n    const gameKey = `g${i}`;\n    const leftWillWin = Math.random() < 0.5;\n    const leftPlayerInfo = [char1, color1, leftWillWin ? \"winner\" : \"loser\"].join(\",\");\n    const rightPlayerInfo = [char2, color2, leftWillWin ? \"loser\" : \"winner\"].join(\",\");\n    const gameValue = generateRandomGame([leftPlayerInfo, rightPlayerInfo]);\n    paramMap[gameKey] = gameValue;\n\n    if (leftWillWin) {\n      leftWins += 1;\n    } else {\n      rightWins += 1;\n    }\n  }\n\n  // Set score\n  paramMap.score = `${leftWins} - ${rightWins}`;\n  // Set winner\n  if (leftWins !== rightWins) {\n    paramMap.winner = leftWins > rightWins ? \"left\" : \"right\";\n  }\n\n  // Random moves\n  [\"mckm1\", \"mckm2\", \"mcno1\", \"mcno2\"].forEach((key) => {\n    paramMap[key] = generateRandomMove();\n  });\n\n  // Random openings per kill\n  [\"opk1\", \"opk2\"].forEach((key) => {\n    paramMap[key] = getRandomArbitrary(5, 15).toFixed(1);\n  });\n\n  // Total damage done\n  [\"tdd1\", \"tdd2\"].forEach((key) => {\n    paramMap[key] = getRandomArbitrary(1000, 2000).toFixed(1);\n  });\n\n  // Average kill percent\n  [\"akp1\", \"akp2\"].forEach((key) => {\n    paramMap[key] = getRandomArbitrary(50, 200).toFixed(1);\n  });\n\n  // Neutral wins\n  [\"nw1\", \"nw2\"].forEach((key) => {\n    paramMap[key] = getRandomInt(30, 80);\n  });\n\n  return paramMap;\n}\n\nfunction generateRandomMove(): string {\n  const move = getRandomInt(7, 21);\n  const name = moveUtil.getMoveShortName(move).toUpperCase();\n  return `${name} - ${move}`;\n}\n\nfunction generateRandomCharacter() {\n  const charId = getRandomInt(0, 25);\n  const charInfo = characterUtil.getCharacterInfo(charId);\n  const colorIndex = getRandomInt(0, charInfo.colors.length - 1);\n  const color = charInfo.colors[colorIndex];\n  return [charId, color] as const;\n}\n\nconst LEGAL_STAGE_IDS = [2, 3, 8, 28, 31, 32];\n\nfunction generateRandomStageId(): number {\n  const stageIndex = getRandomInt(0, LEGAL_STAGE_IDS.length - 1);\n  return LEGAL_STAGE_IDS[stageIndex];\n}\n\nfunction generateRandomDuration(): string {\n  const mins = getRandomInt(0, 7);\n  const secs = String(getRandomInt(0, 60)).padStart(2, \"0\");\n  return `${mins}:${secs}`;\n}\n\nfunction generateRandomGame(playerInfos: string[]): string {\n  const stageId = generateRandomStageId();\n  const gameDuration = generateRandomDuration();\n  const gameValue = [stageId, gameDuration, ...playerInfos].join(\",\");\n  return gameValue;\n}\n","/** @jsx jsx */\nimport { css, Global, jsx } from \"@emotion/core\";\n\nexport interface Theme {\n  primaryColor: string;\n  secondaryColor: string;\n}\n\nexport const defaultTheme: Theme = {\n  primaryColor: \"#286163\",\n  secondaryColor: \"#121020\",\n};\n\nexport const GlobalTheme: React.FC<Theme> = ({ primaryColor, secondaryColor }) => {\n  return (\n    <Global\n      styles={css`\n        body.themed {\n          background: radial-gradient(circle at center -30%, ${primaryColor}, ${secondaryColor});\n        }\n      `}\n    />\n  );\n};\n","import { defaultTheme } from \"styles/theme\";\n\nfunction getStoredValues(keys: string[]): Record<string, string | null> {\n  const res: Record<string, string | null> = {};\n  keys.forEach((key) => {\n    const value = localStorage.getItem(key);\n    if (value) {\n      res[key] = value;\n    }\n  });\n  return res;\n}\n\nexport function generateSearchParams(params: Record<string, any>): URLSearchParams {\n  const restoredParams = getStoredValues([\"primaryColor\", \"secondaryColor\", \"leftColor\", \"rightColor\"]);\n  const searchParams = new URLSearchParams({\n    ...defaultTheme,\n    ...restoredParams,\n    ...params,\n  });\n  return searchParams;\n}\n","import { generateDemoValues } from \"lib/demo\";\nimport { generateSearchParams } from \"lib/searchParams\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nexport const RandomView: React.FC = () => {\n  const params = generateDemoValues();\n  const search = \"?\" + generateSearchParams(params).toString();\n  return (\n    <Redirect\n      to={{\n        pathname: \"/render\",\n        search,\n      }}\n    />\n  );\n};\n","import SlippiGame from \"@slippi/slippi-js\";\nimport { GameDetails } from \"lib/readFile\";\n\nimport { InitialStateType, ProcessedFile } from \"./types\";\n\ntype ActionMap<M extends { [index: string]: any }> = {\n  [Key in keyof M]: M[Key] extends undefined\n    ? {\n        type: Key;\n      }\n    : {\n        type: Key;\n        payload: M[Key];\n      };\n};\n\nexport enum Types {\n  ADD_GAME = \"ADD_GAME\",\n  SET_ERROR = \"SET_ERROR\",\n  ADD_FILES = \"ADD_FILES\",\n  REMOVE_FILE = \"REMOVE_FILE\",\n  CLEAR_ALL = \"CLEAR_ALL\",\n}\n\ntype ActionPayload = {\n  [Types.ADD_GAME]: {\n    filename: string;\n    game: SlippiGame;\n    details: GameDetails;\n  };\n  [Types.SET_ERROR]: {\n    filename: string;\n    error: any;\n  };\n  [Types.ADD_FILES]: {\n    files: File[];\n  };\n  [Types.REMOVE_FILE]: {\n    filename: string;\n  };\n  [Types.CLEAR_ALL]: never;\n};\n\nexport type ReducerActions = ActionMap<ActionPayload>[keyof ActionMap<ActionPayload>];\n\nexport const reducer = (state: InitialStateType, action: ReducerActions) => {\n  switch (action.type) {\n    case Types.ADD_GAME: {\n      const { filename, details } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.filename === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].details = details;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.SET_ERROR: {\n      const { filename, error } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.filename === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].error = error;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.ADD_FILES: {\n      const { files } = action.payload;\n      const currentFiles = state.files;\n      let newFiles: ProcessedFile[] = files.map((f) => ({\n        filename: f.name,\n        loading: true,\n        details: null,\n      }));\n\n      // Make sure there are no duplicate filenames\n      newFiles = newFiles.filter((f) => !currentFiles.find((existingFile) => f.filename === existingFile.filename));\n\n      return {\n        ...state,\n        files: [...currentFiles, ...newFiles],\n      };\n    }\n    case Types.REMOVE_FILE: {\n      const { filename } = action.payload;\n      const files = state.files.filter((f) => f.filename !== filename);\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.CLEAR_ALL: {\n      return {\n        ...state,\n        files: [],\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { createContext, Dispatch, useReducer } from \"react\";\n\nimport { reducer, ReducerActions } from \"./reducers\";\nimport { InitialStateType } from \"./types\";\n\nconst initialState: InitialStateType = {\n  files: [],\n};\n\nconst AppContext = createContext<{\n  state: InitialStateType;\n  dispatch: Dispatch<ReducerActions>;\n}>({\n  state: initialState,\n  dispatch: () => null,\n});\n\nconst mainReducer = (state: InitialStateType, action: ReducerActions) => reducer(state, action);\n\nconst AppProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(mainReducer, initialState);\n\n  return <AppContext.Provider value={{ state, dispatch }}>{children}</AppContext.Provider>;\n};\n\nexport { AppProvider, AppContext };\n","import React from \"react\";\n\nexport const ExternalLink: React.FC<React.HTMLProps<HTMLAnchorElement>> = (props) => {\n  return (\n    <a target=\"_blank\" rel=\"noopener noreferrer\" {...props}>\n      {props.children}\n    </a>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Header = styled.h1`\n  text-transform: uppercase;\n  font-weight: 800;\n  font-size: 5.5rem;\n  margin: 2rem;\n  padding-bottom: 1rem;\n  position: relative;\n  text-align: center;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.2), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translateX(-50%);\n    bottom: 0;\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { DropzoneOptions, useDropzone } from \"react-dropzone\";\n\nconst getColor = (props: any) => {\n  if (props.isDragAccept) {\n    return \"#00e676\";\n  }\n  if (props.isDragActive) {\n    return \"#2196f3\";\n  }\n  return \"#eeeeee\";\n};\n\nconst Container = styled.div`\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-width: 2px;\n  border-color: ${(props) => getColor(props)};\n  border-style: dashed;\n  background-color: rgba(0, 0, 0, 0.3);\n  color: white;\n  outline: none;\n  transition: border 0.24s ease-in-out;\n  p {\n    text-align: center;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n`;\n\nexport const DropPad: React.FC<Partial<DropzoneOptions>> = (props) => {\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone(props);\n\n  return (\n    <Container {...getRootProps({ isDragActive, isDragAccept, isDragReject })}>\n      <input {...getInputProps()} />\n      <p>Drag SLP files here or click to select</p>\n    </Container>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\n\nexport const ErrorMessage: React.FC = (props) => {\n  return (\n    <span\n      css={css`\n        color: #bf2600;\n        font-weight: bold;\n      `}\n    >\n      ERROR: {props.children}\n    </span>\n  );\n};\n","import { characters as characterUtil, stages as stageUtil } from \"@slippi/slippi-js\";\n\nexport type Side = \"left\" | \"right\";\n\nfunction sanitize(text: string, replacement = \"-\"): string {\n  return text.toLowerCase().replace(/[. &]+/gi, replacement);\n}\n\nfunction getCharacterFolderFromId(characterId: string | number, color?: string) {\n  const characterName = characterUtil.getCharacterName(+characterId);\n  return getCharacterFolderFromName(characterName, color);\n}\n\nfunction getCharacterFolderFromName(character: string, color = \"Default\") {\n  const charFolder = sanitize(character);\n  const colorFolder = sanitize(color);\n  return `${process.env.PUBLIC_URL}/images/characters/${charFolder}/${colorFolder}`;\n}\n\nexport function getCharacterPortrait(characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/portrait.png`;\n}\n\nexport function getCharacterVSScreen(side: Side, characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/vs-${side}.png`;\n}\n\nexport function getCharacterStockIcon(characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/stock.png`;\n}\n\nexport function getStageIcon(stageId: string | number): string {\n  const stageName = stageUtil.getStageName(+stageId);\n  return `${process.env.PUBLIC_URL}/images/stages/${stageName}.png`;\n}\n","/* eslint-disable */\n\n/*\n * Taken from: https://github.com/project-slippi/slippi-set-stats/blob/master/main.js\n */\n\nconst { stages: stageUtil, moves: moveUtil, characters: characterUtil } = require(\"@slippi/slippi-js\");\nconst moment = require(\"moment\");\nconst _ = require(\"lodash\");\nconst { findWinner } = require(\"./winner\");\n\nconst stats = {\n  OPENINGS_PER_KILL: \"openingsPerKill\",\n  DAMAGE_PER_OPENING: \"damagePerOpening\",\n  NEUTRAL_WINS: \"neutralWins\",\n  KILL_MOVES: \"killMoves\",\n  NEUTRAL_OPENER_MOVES: \"neutralOpenerMoves\",\n  EARLY_KILLS: \"earlyKills\",\n  LATE_DEATHS: \"lateDeaths\",\n  SELF_DESTRUCTS: \"selfDestructs\",\n  INPUTS_PER_MINUTE: \"inputsPerMinute\",\n  AVG_KILL_PERCENT: \"avgKillPercent\",\n  HIGH_DAMAGE_PUNISHES: \"highDamagePunishes\",\n  DAMAGE_DONE: \"damageDone\",\n};\n\nconst statDefininitions = {\n  [stats.OPENINGS_PER_KILL]: {\n    id: stats.OPENINGS_PER_KILL,\n    name: \"Openings / Kill\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"openingsPerKill\", 1);\n    },\n  },\n  [stats.DAMAGE_PER_OPENING]: {\n    id: stats.DAMAGE_PER_OPENING,\n    name: \"Damage / Opening\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", 1);\n    },\n  },\n  [stats.NEUTRAL_WINS]: {\n    id: stats.NEUTRAL_WINS,\n    name: \"Neutral Wins\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 0,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"neutralWinRatio\", 0, \"count\");\n    },\n  },\n  [stats.KILL_MOVES]: {\n    id: stats.KILL_MOVES,\n    name: \"Most Common Kill Move\",\n    type: \"text\",\n    calculate: (games, playerIndex) => {\n      const killMoves = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const conversionsForPlayer = _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const didKill = conversion.didKill;\n          return isForPlayer && didKill;\n        });\n\n        return _.map(conversionsForPlayer, (conversion) => {\n          return _.last(conversion.moves);\n        });\n      });\n\n      const killMovesByMove = _.groupBy(killMoves, \"moveId\");\n      const killMoveCounts = _.map(killMovesByMove, (moves) => {\n        const move = _.first(moves);\n        return {\n          count: moves.length,\n          id: move.moveId,\n          name: moveUtil.getMoveName(move.moveId),\n          shortName: moveUtil.getMoveShortName(move.moveId),\n        };\n      });\n\n      const orderedKillMoveCounts = _.orderBy(killMoveCounts, [\"count\"], [\"desc\"]);\n      const topKillMove = _.first(orderedKillMoveCounts);\n      let simpleText = \"N/A\";\n      if (topKillMove) {\n        simpleText = `${topKillMove.shortName} (${topKillMove.count})`;\n      }\n\n      return {\n        result: orderedKillMoveCounts,\n        simple: {\n          text: simpleText,\n        },\n      };\n    },\n  },\n  [stats.NEUTRAL_OPENER_MOVES]: {\n    id: stats.NEUTRAL_OPENER_MOVES,\n    name: \"Most Common Neutral Opener\",\n    type: \"text\",\n    calculate: (games, playerIndex) => {\n      const neutralMoves = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const conversionsForPlayer = _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const isNeutralWin = conversion.openingType === \"neutral-win\";\n          return isForPlayer && isNeutralWin;\n        });\n\n        return _.map(conversionsForPlayer, (conversion) => {\n          return _.first(conversion.moves);\n        });\n      });\n\n      // TODO: This following code is repeated from kill move code, put in function\n\n      const neutralMovesByMove = _.groupBy(neutralMoves, \"moveId\");\n      const neutralMoveCounts = _.map(neutralMovesByMove, (moves) => {\n        const move = _.first(moves);\n        return {\n          count: moves.length,\n          id: move.moveId,\n          name: moveUtil.getMoveName(move.moveId),\n          shortName: moveUtil.getMoveShortName(move.moveId),\n        };\n      });\n\n      const orderedNeutralMoveCounts = _.orderBy(neutralMoveCounts, [\"count\"], [\"desc\"]);\n      const topNeutralMove = _.first(orderedNeutralMoveCounts);\n      let simpleText = \"N/A\";\n      if (topNeutralMove) {\n        simpleText = `${topNeutralMove.shortName} (${topNeutralMove.count})`;\n      }\n\n      return {\n        result: orderedNeutralMoveCounts,\n        simple: {\n          text: simpleText,\n        },\n      };\n    },\n  },\n  [stats.EARLY_KILLS]: {\n    id: stats.EARLY_KILLS,\n    name: \"Earliest Kill\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const oppStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isOpp = stock.playerIndex !== playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isOpp && hasEndPercent;\n        });\n      });\n\n      const orderedOppStocks = _.orderBy(oppStocks, [\"endPercent\"], [\"asc\"]);\n      const earliestKillStock = _.first(orderedOppStocks);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (earliestKillStock) {\n        simple.number = earliestKillStock.endPercent;\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedOppStocks, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.LATE_DEATHS]: {\n    id: stats.LATE_DEATHS,\n    name: \"Latest Death\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const playerStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isPlayer = stock.playerIndex === playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isPlayer && hasEndPercent;\n        });\n      });\n\n      const orderedPlayerStocks = _.orderBy(playerStocks, [\"endPercent\"], [\"desc\"]);\n      const latestDeathStock = _.first(orderedPlayerStocks);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (latestDeathStock) {\n        simple.number = latestDeathStock.endPercent;\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedPlayerStocks, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.SELF_DESTRUCTS]: {\n    id: stats.SELF_DESTRUCTS, // Only show this one if greater than 2 for one player\n    name: \"Total Self-Destructs\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 0,\n    calculate: (games, playerIndex) => {\n      const sdCounts = _.map(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        const playerEndedStocks = _.filter(stocks, (stock) => {\n          const isPlayer = stock.playerIndex === playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isPlayer && hasEndPercent;\n        });\n\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const oppKillConversions = _.filter(conversions, (conversion) => {\n          const isOpp = conversion.playerIndex !== playerIndex;\n          const didKill = conversion.didKill;\n          return isOpp && didKill;\n        });\n\n        return playerEndedStocks.length - oppKillConversions.length;\n      });\n\n      const sdSum = _.sum(sdCounts);\n\n      return {\n        result: sdSum,\n        simple: {\n          number: sdSum,\n          text: `${sdSum}`,\n        },\n      };\n    },\n  },\n  [stats.INPUTS_PER_MINUTE]: {\n    id: stats.INPUTS_PER_MINUTE,\n    name: \"Inputs / Minute\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"inputsPerMinute\", 1);\n    },\n  },\n  [stats.AVG_KILL_PERCENT]: {\n    id: stats.AVG_KILL_PERCENT,\n    name: \"Average Kill Percent\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const oppStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isOpp = stock.playerIndex !== playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isOpp && hasEndPercent;\n        });\n      });\n\n      const result = {\n        total: oppStocks.length,\n        count: _.sumBy(oppStocks, \"endPercent\") || 0,\n      };\n\n      result.ratio = result.total ? result.count / result.total : null;\n\n      return {\n        result: result,\n        simple: genSimpleFromRatio(result, 1),\n      };\n    },\n  },\n  [stats.HIGH_DAMAGE_PUNISHES]: {\n    id: stats.HIGH_DAMAGE_PUNISHES,\n    name: \"Highest Damage Punish\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const punishes = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        return _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const hasEndPercent = conversion.endPercent !== null;\n          return isForPlayer && hasEndPercent;\n        });\n      });\n\n      const getDamageDone = (punish) => punish.endPercent - punish.startPercent;\n      const orderedPunishes = _.orderBy(punishes, [getDamageDone], \"desc\");\n      const topPunish = _.first(orderedPunishes);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (topPunish) {\n        simple.number = getDamageDone(topPunish);\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedPunishes, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.DAMAGE_DONE]: {\n    id: stats.DAMAGE_DONE,\n    name: \"Total Damage Done\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", 1, \"count\");\n    },\n  },\n};\n\nfunction genOverallRatioStat(games, playerIndex, field, fixedNum, type = \"ratio\") {\n  const statRatios = _.map(games, (game) => {\n    const overallStats = _.get(game, [\"stats\", \"overall\"]);\n    const overallStatsByPlayer = _.keyBy(overallStats, \"playerIndex\");\n    const overallStatsForPlayer = overallStatsByPlayer[playerIndex];\n    return overallStatsForPlayer[field];\n  });\n\n  const avg = averageRatios(statRatios);\n  const simple = genSimpleFromRatio(avg, fixedNum, type);\n\n  return {\n    result: avg,\n    simple: simple,\n  };\n}\n\nfunction averageRatios(ratios) {\n  const result = {};\n\n  result.count = _.sumBy(ratios, \"count\") || 0;\n  result.total = _.sumBy(ratios, \"total\") || 0;\n  result.ratio = result.total ? result.count / result.total : null;\n\n  return result;\n}\n\nfunction genSimpleFromRatio(ratio, fixedNum, type = \"ratio\") {\n  const result = {};\n\n  switch (type) {\n    case \"ratio\":\n      result.number = ratio.ratio;\n      result.text = ratio.ratio !== null ? ratio.ratio.toFixed(fixedNum) : \"N/A\";\n      break;\n    case \"count\":\n      result.number = ratio.count;\n      result.text = ratio.count.toFixed(fixedNum);\n      break;\n  }\n\n  return result;\n}\n\n/*\nfunction parseFilesInFolder() {\n  const dirPath = process.cwd();\n  const dirContents = fs.readdirSync(dirPath, { withFileTypes: true });\n\n  console.log(\"Reading files in directory...\\n\");\n  const gameDetails = _.chain(dirContents).filter((item) => {\n    return item.isFile() && path.extname(item.name) === \".slp\";\n  }).map((slpItem) => {\n    const slpFilePath = path.join(dirPath, slpItem.name);\n    const game = new SlippiGame(slpFilePath);\n    return {\n      filePath: slpFilePath,\n      settings: game.getSettings(),\n      frames: game.getFrames(),\n      stats: game.getStats(),\n      metadata: game.getMetadata(),\n      latestFrame: game.getLatestFrame(),\n      gameEnd: game.getGameEnd(),\n    };\n  }).value();\n\n  return gameDetails;\n}\n*/\n\nexport function filterGames(games) {\n  // console.log(games);\n  const gamesByIsSingles = _.groupBy(games, (game) => {\n    const numberOfPlayers = game.settings.players.length;\n    return numberOfPlayers === 2;\n  });\n\n  const nonSinglesGames = _.get(gamesByIsSingles, false) || [];\n  if (_.some(nonSinglesGames)) {\n    console.log(\"The following games have been excluded because they are not singles games:\");\n    _.forEach(nonSinglesGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  const singlesGames = _.get(gamesByIsSingles, true) || [];\n  const gamesByPorts = _.chain(singlesGames)\n    .groupBy((game) => {\n      const ports = _.map(game.settings.players, \"port\");\n      return _.join(ports, \"-\");\n    })\n    .orderBy([\"length\"], [\"desc\"])\n    .value();\n\n  const gamesWithSamePorts = gamesByPorts.shift();\n  if (_.some(gamesByPorts)) {\n    console.log(\"The following games have been excluded because the player ports differ:\");\n    const flatGames = _.flatten(gamesByPorts);\n    _.forEach(flatGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  if (_.isEmpty(gamesWithSamePorts)) {\n    throw new Error(\"There were no valid games found to compute stats from.\");\n  }\n\n  console.log(`Including ${gamesWithSamePorts.length} games for stat calculation...`);\n\n  return gamesWithSamePorts;\n}\n\nfunction computeStats(games) {\n  const firstGame = _.first(games);\n  // console.log(firstGame);\n  const orderIndices = _.map(firstGame.settings.players, \"playerIndex\");\n  const reversedIndices = _.chain(orderIndices).clone().reverse().value();\n  const indices = [orderIndices, reversedIndices];\n\n  const statResults = _.flatMap(stats, (statKey) => {\n    const def = statDefininitions[statKey];\n    if (!def.calculate) {\n      return [];\n    }\n\n    const results = _.map(indices, (iIndices) => {\n      const result = def.calculate(games, iIndices[0], iIndices[1]);\n      result.port = iIndices[0] + 1;\n      return result;\n    });\n\n    const output = { ...def };\n    delete output.calculate;\n    output.results = results;\n\n    return [output];\n  });\n\n  return statResults;\n}\n\nfunction generateGameInfo(games) {\n  const getStartAt = (game) => game.metadata.startAt;\n  const orderedGames = _.orderBy(games, [getStartAt], [\"asc\"]);\n\n  const getResultForPlayer = (game, playerIndex) => {\n    const latestFrame = game.latestFrame;\n    const winner = findWinner(latestFrame);\n    return winner === playerIndex ? \"winner\" : \"loser\";\n  };\n\n  const generatePlayerInfo = (game) => (player) => {\n    // console.log(player);\n    return {\n      port: player.port,\n      characterId: player.characterId,\n      characterColor: player.characterColor,\n      nametag: player.nametag,\n      characterName: characterUtil.getCharacterName(player.characterId),\n      characterColor: characterUtil.getCharacterColorName(player.characterId, player.characterColor),\n      gameResult: getResultForPlayer(game, player.playerIndex),\n    };\n  };\n\n  return _.map(orderedGames, (game) => {\n    const playerInfoGen = generatePlayerInfo(game);\n\n    return {\n      stage: {\n        id: game.settings.stageId,\n        name: stageUtil.getStageName(game.settings.stageId),\n      },\n      players: _.map(game.settings.players, playerInfoGen),\n      startTime: game.metadata.startAt,\n      duration: convertFrameCountToDurationString(game.stats.lastFrame),\n    };\n  });\n}\n\nfunction generateBtsSummary(summary) {\n  const fixedStats = [stats.KILL_MOVES, stats.NEUTRAL_OPENER_MOVES, stats.OPENINGS_PER_KILL, stats.DAMAGE_DONE];\n\n  const randomizeCount = 2;\n\n  const generateSummaryItem = (fullStatOutput) => {\n    const type = fullStatOutput.type;\n\n    const output = { ...fullStatOutput };\n    output.results = _.map(fullStatOutput.results, (result) => _.get(result, [\"simple\", type]));\n\n    return output;\n  };\n\n  const result = [];\n\n  const statsById = _.keyBy(summary, \"id\");\n  const statsToRandomizeById = statsById;\n\n  // Add fixed stats\n  _.forEach(fixedStats, (statId) => {\n    const statOutput = statsById[statId];\n    result.push(generateSummaryItem(statOutput));\n\n    delete statsToRandomizeById[statId];\n  });\n\n  // Deal with SDs\n  const sdStat = statsById[stats.SELF_DESTRUCTS];\n  const sds1 = sdStat.results[0].simple.number;\n  const sds2 = sdStat.results[0].simple.number;\n  const shouldIncludeSds = sds1 > 1 || sds2 > 1;\n  if (!shouldIncludeSds) {\n    delete statsToRandomizeById[stats.SELF_DESTRUCTS];\n  }\n\n  const shuffled = _.shuffle(statsToRandomizeById);\n  const shuffledToInclude = _.take(shuffled, randomizeCount);\n  _.forEach(shuffledToInclude, (statOutput) => {\n    result.push(generateSummaryItem(statOutput));\n  });\n\n  return result;\n}\n\nexport function convertFrameCountToDurationString(frameCount) {\n  const duration = moment.duration(frameCount / 60, \"seconds\");\n  return moment.utc(duration.as(\"milliseconds\")).format(\"m:ss\");\n}\n\nexport default function generateOutput(games) {\n  const stats = computeStats(games);\n\n  return {\n    games: generateGameInfo(games),\n    summary: stats,\n    btsSummary: generateBtsSummary(stats),\n  };\n}\n\n// function writeToFile(output) {\n//   console.log(util.inspect(output, { depth: 6, colors: true }));\n//   fs.writeFileSync('output.json', JSON.stringify(output));\n//   console.log(\"Finished writting stats to output.json!\");\n// }\n\n// export default function (games) {\n//   const filteredGames = filterGames(games);\n//   const output = generateOutput(filteredGames);\n//   writeToFile(output);\n//   console.log(output);\n//   return output;\n// }\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { characters as characterUtil, stages as stageUtil } from \"@slippi/slippi-js\";\nimport { ErrorMessage } from \"components/ErrorMessage\";\nimport { getCharacterStockIcon } from \"lib/resources\";\nimport { convertFrameCountToDurationString } from \"lib/stats\";\nimport { findWinner } from \"lib/winner\";\nimport React from \"react\";\nimport { ProcessedFile } from \"store/types\";\nimport { defaultTheme } from \"styles/theme\";\n\nconst BasicFileItem: React.FC<{ name: string; onRemove?: () => void }> = (props) => {\n  const { onRemove, name, children } = props;\n  return (\n    <div\n      css={css`\n        padding: 1.5rem 2rem;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        color: rgba(255, 255, 255, 0.8);\n        background-color: rgba(0, 0, 0, 0.3);\n        opacity: 0.8;\n        transition: opacity 0.2s ease-in-out;\n        &:hover {\n          opacity: 1;\n          .remove-button {\n            opacity: 1;\n          }\n        }\n        .remove-button {\n          opacity: 0;\n          transition: opacity 0.2s ease-in-out;\n          background: white;\n          color: ${defaultTheme.secondaryColor};\n          border: none;\n          font-weight: bold;\n          font-size: 2.5rem;\n          cursor: pointer;\n          padding: 0.2rem 1rem;\n          margin: 0;\n        }\n      `}\n    >\n      <div\n        css={css`\n          flex: 1;\n        `}\n      >\n        <div\n          css={css`\n            font-size: 1.6rem;\n            font-weight: bold;\n            margin-bottom: 1rem;\n            font-family: monospace;\n          `}\n        >\n          {name}\n        </div>\n        <div>{children}</div>\n      </div>\n      {onRemove && (\n        <button className=\"remove-button\" onClick={onRemove} title=\"Remove\">\n          ✕\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst CharacterIcon: React.FC<{\n  charId: string | number;\n  color: string;\n  winner?: boolean;\n}> = ({ charId, color, winner }) => {\n  const src = getCharacterStockIcon(charId, color);\n  return (\n    <div\n      css={css`\n        position: relative;\n        display: inline-block;\n        margin-top: 0.5rem;\n        ${winner &&\n        `&::after {\n          position: absolute;\n          content: \" \";\n          height: 0.7rem;\n          width: 60%;\n          background-color: #ffa700;\n          left: 20%;\n          bottom: 110%;\n          clip-path: polygon(50% 0%, 75% 35%, 100% 0, 100% 100%, 0 100%, 0 0, 25% 35%);\n        }\n      `}\n      `}\n    >\n      <img src={src} style={{ height: \"3rem\" }} alt=\"stock icon\" />\n    </div>\n  );\n};\n\nexport interface FileItemProps {\n  file: ProcessedFile;\n  onRemove: () => void;\n}\n\nexport const FileItem: React.FC<FileItemProps> = (props) => {\n  const { file, onRemove } = props;\n  const { filename, loading, error, details } = file;\n  if (loading) {\n    return (\n      <BasicFileItem name={filename}>\n        <span\n          css={css`\n            font-weight: bold;\n          `}\n        >\n          LOADING...\n        </span>\n      </BasicFileItem>\n    );\n  }\n  if (error || !details) {\n    return (\n      <BasicFileItem onRemove={onRemove} name={filename}>\n        <ErrorMessage>{error.message}</ErrorMessage>\n      </BasicFileItem>\n    );\n  }\n\n  const stageName = stageUtil.getStageName(details.settings.stageId as number);\n  const players = details.settings.players;\n  const duration = details.latestFrame ? convertFrameCountToDurationString(details.latestFrame.frame) : \"N/A\";\n  const winnerIndex = details.latestFrame ? findWinner(details.latestFrame) : null;\n  const icons = players.map((player) => {\n    const winner = player.playerIndex === winnerIndex;\n    const charId = player.characterId as number;\n    const color = characterUtil.getCharacterColorName(charId, player.characterColor as number);\n    return <CharacterIcon key={`${player.port}-icon`} charId={charId} color={color} winner={winner} />;\n  });\n  return (\n    <BasicFileItem onRemove={onRemove} name={filename}>\n      <div\n        css={css`\n          display: grid;\n          justify-items: center;\n          align-items: center;\n          grid-template-columns: repeat(3, 1fr);\n          font-weight: bold;\n        `}\n      >\n        <div>{stageName}</div>\n        <div\n          css={css`\n            display: grid;\n            grid-auto-flow: column;\n            grid-column-gap: 1rem;\n          `}\n        >\n          {icons}\n        </div>\n        <div>{duration}</div>\n      </div>\n    </BasicFileItem>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { ProcessedFile } from \"store/types\";\n\nimport { FileItem } from \"./FileItem\";\n\nexport interface FileListProps {\n  files: ProcessedFile[];\n  onRemove: (filename: string) => void;\n}\n\nexport const FileList: React.FC<FileListProps> = (props) => {\n  const { files, onRemove } = props;\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-template-columns: 100%;\n        grid-row-gap: 1rem;\n        max-height: 50rem;\n        overflow-y: auto;\n      `}\n    >\n      {files.map((f) => (\n        <FileItem key={f.filename} file={f} onRemove={() => onRemove(f.filename)} />\n      ))}\n    </div>\n  );\n};\n","export enum PortColor {\n  P1 = \"#f52e2e\",\n  P2 = \"#5463ff\",\n  P3 = \"#ffc717\",\n  P4 = \"#1f9e40\",\n}\n\nexport function getPortColor(portNumber: number): string {\n  switch (portNumber) {\n    case 1:\n      return PortColor.P1;\n    case 2:\n      return PortColor.P2;\n    case 3:\n      return PortColor.P3;\n    case 4:\n      return PortColor.P4;\n    default:\n      return PortColor.P1;\n  }\n}\n","import generateStats, { filterGames } from \"lib/stats\";\nimport { get } from \"lodash\";\n\nimport { getPortColor } from \"./portColor\";\nimport { GameDetails } from \"./readFile\";\n\nconst extractNameAndCode = (playerPort: number, details: GameDetails) => {\n  const settings = details.settings;\n  const metadata = details.metadata;\n  const index = playerPort - 1;\n  const player = settings.players.find((player) => player.playerIndex === index);\n  const playerTag = player ? player.nametag : null;\n  const netplayName: string | null = get(metadata, [\"players\", index, \"names\", \"netplay\"], null);\n  const netplayCode: string | null = get(metadata, [\"players\", index, \"names\", \"code\"], null);\n  const name = playerTag || netplayName || \"\";\n  return [name, netplayCode || \"\"] as const;\n};\n\nexport function processStats(gameDetails: GameDetails[]): Record<string, any> {\n  const filtered = filterGames(gameDetails);\n  if (!filtered || filtered.length === 0) {\n    throw new Error(\"No valid games\");\n  }\n\n  const { games, summary } = generateStats(filtered);\n  const params: Record<string, any> = {}; // \"mckm1\": , \"mckm2\", \"mcno1\", \"mcno2\", \"opk1\", \"opk2\", \"tdd1\", \"tdd2\", \"dpo1\", \"dpo2\", \"ipm1\", \"ipm2\", \"akp1\", \"akp2\", \"nw1\", \"nw2\"};\n\n  // Set character info\n  const lastGame = games[games.length - 1];\n  const leftPlayer = lastGame.players[0];\n  const rightPlayer = lastGame.players[1];\n  params.leftColor = getPortColor(leftPlayer.port);\n  params.rightColor = getPortColor(rightPlayer.port);\n\n  params.char1 = leftPlayer.characterId;\n  params.char2 = rightPlayer.characterId;\n  params.color1 = leftPlayer.characterColor;\n  params.color2 = rightPlayer.characterColor;\n\n  // Set name tags\n  const lastGameDetails = filtered[filtered.length - 1];\n  const [leftTag, leftCode] = extractNameAndCode(leftPlayer.port, lastGameDetails);\n  const [rightTag, rightCode] = extractNameAndCode(rightPlayer.port, lastGameDetails);\n  params.name1 = leftTag.toUpperCase() || leftPlayer.characterName;\n  params.name2 = rightTag.toUpperCase() || rightPlayer.characterName;\n  params.sub1 = leftCode;\n  params.sub2 = rightCode;\n\n  // Set game info\n  params.gt = games.length; // Set the total number of games\n\n  // Track game wins\n  let leftWins = 0;\n  let rightWins = 0;\n\n  (games as any[]).forEach((game, i) => {\n    // console.log(\"processing game: \", game);\n    const gameKey = `g${i + 1}`;\n    const stageId: number = game.stage.id;\n    const gameDuration: string = game.duration;\n    const playerInfo = game.players.map((p: any) => [p.characterId, p.characterColor, p.gameResult].join(\",\"));\n    const gameValue = [stageId, gameDuration, ...playerInfo].join(\",\");\n    // console.log(`${gameKey} : ${gameValue}`);\n    params[gameKey] = gameValue;\n\n    // Increment win counts\n    if (game.players[0].gameResult === \"winner\") {\n      leftWins += 1;\n    } else if (game.players[1].gameResult === \"winner\") {\n      rightWins += 1;\n    }\n  });\n\n  params.score = `${leftWins} - ${rightWins}`;\n  if (leftWins !== rightWins) {\n    params.winner = leftWins > rightWins ? \"left\" : \"right\";\n  }\n\n  // Set the stat values\n  (summary as any[]).forEach((s) => {\n    switch (s.id) {\n      case \"openingsPerKill\": {\n        params.opk1 = s.results[0].simple.text;\n        params.opk2 = s.results[1].simple.text;\n        break;\n      }\n      case \"damagePerOpening\": {\n        params.dpo1 = s.results[0].simple.text;\n        params.dpo2 = s.results[1].simple.text;\n        break;\n      }\n      case \"neutralWins\": {\n        params.nw1 = s.results[0].simple.text;\n        params.nw2 = s.results[1].simple.text;\n        break;\n      }\n      case \"killMoves\": {\n        // console.log(s);\n        const playerRes = s.results[0].result[0];\n        const opponentRes = s.results[1].result[0];\n        params.mckm1 = `${playerRes.shortName.toUpperCase()} - ${playerRes.count}`;\n        params.mckm2 = `${opponentRes.shortName.toUpperCase()} - ${opponentRes.count}`;\n        break;\n      }\n      case \"neutralOpenerMoves\": {\n        const playerRes = s.results[0].result[0];\n        const opponentRes = s.results[1].result[0];\n        params.mcno1 = `${playerRes.shortName.toUpperCase()} - ${playerRes.count}`;\n        params.mcno2 = `${opponentRes.shortName.toUpperCase()} - ${opponentRes.count}`;\n        break;\n      }\n      case \"inputsPerMinute\": {\n        params.ipm1 = s.results[0].simple.text;\n        params.ipm2 = s.results[1].simple.text;\n        break;\n      }\n      case \"avgKillPercent\": {\n        params.akp1 = s.results[0].simple.text;\n        params.akp2 = s.results[1].simple.text;\n        break;\n      }\n      case \"damageDone\": {\n        params.tdd1 = s.results[0].simple.text;\n        params.tdd2 = s.results[1].simple.text;\n        break;\n      }\n    }\n  });\n\n  console.log(\"returning these params: \", params);\n  return params;\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { DropPad } from \"components/DropPad\";\nimport { ErrorMessage } from \"components/ErrorMessage\";\nimport { FileList } from \"components/FileList\";\nimport { processStats } from \"lib/processStats\";\nimport { GameDetails, generateGameDetails, readFileAsSlippiGame } from \"lib/readFile\";\nimport { generateSearchParams } from \"lib/searchParams\";\nimport React, { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { AppContext, Types } from \"../store\";\n\nconst ProcessButton = styled.button<{\n  backgroundColor: string;\n  color: string;\n}>`\n  background: ${(p) => p.backgroundColor};\n  border: none;\n  color: ${(p) => p.color};\n  cursor: pointer;\n  font: inherit;\n  padding: 1rem 0rem;\n  width: 100%;\n  font-weight: 700;\n  font-size: 3rem;\n  opacity: 0.8;\n  transition: opacity 0.2s ease-in-out;\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n  &:hover:enabled {\n    opacity: 1;\n  }\n`;\n\nexport const FileListInput: React.FC<{ buttonColor: string }> = ({ buttonColor }) => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(AppContext);\n  const [error, setError] = React.useState<any>(null);\n\n  const onClick = () => {\n    try {\n      const gameDetails = state.files.filter((f) => f.details !== null).map((f) => f.details as GameDetails);\n      const params = processStats(gameDetails);\n      const search = \"?\" + generateSearchParams(params).toString();\n      history.push({\n        pathname: \"/render\",\n        search,\n      });\n    } catch (err) {\n      console.error(error);\n      setError(err);\n    }\n  };\n\n  const onRemove = (filename: string) => {\n    dispatch({\n      type: Types.REMOVE_FILE,\n      payload: {\n        filename,\n      },\n    });\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      // Track how long processing takes\n      const startTime = new Date().getTime();\n\n      // First add all the files to the store\n      dispatch({\n        type: Types.ADD_FILES,\n        payload: {\n          files: acceptedFiles,\n        },\n      });\n\n      const promises = acceptedFiles.map(async (file) => {\n        try {\n          const game = await readFileAsSlippiGame(file);\n          const details = generateGameDetails(file.name, game);\n          dispatch({\n            type: Types.ADD_GAME,\n            payload: {\n              filename: file.name,\n              game,\n              details,\n            },\n          });\n        } catch (err) {\n          console.error(error);\n          dispatch({\n            type: Types.SET_ERROR,\n            payload: {\n              filename: file.name,\n              error: err,\n            },\n          });\n        }\n      });\n\n      // Print the time taken when complete\n      Promise.all(promises).then(() => {\n        const time = new Date().getTime() - startTime;\n        console.log(`Finished processing in ${time}ms`);\n      });\n    },\n    [dispatch, error]\n  );\n\n  const finishedProcessing = !state.files.find((f) => f.loading);\n  const buttonText =\n    state.files.length === 0 ? \"NO FILES ADDED\" : finishedProcessing ? \"GENERATE STATS\" : \"PLEASE WAIT\";\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-template-columns: 100%;\n        grid-row-gap: 1rem;\n      `}\n    >\n      <DropPad accept=\".slp\" onDrop={onDrop} />\n      <FileList files={state.files} onRemove={onRemove} />\n      <ProcessButton\n        backgroundColor={buttonColor}\n        color=\"white\"\n        disabled={state.files.length === 0 || !finishedProcessing}\n        onClick={onClick}\n      >\n        {buttonText}\n      </ProcessButton>\n      {error && <ErrorMessage>{error.message}</ErrorMessage>}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { ExternalLink as A } from \"components/ExternalLink\";\nimport { Header } from \"components/Header\";\nimport { FileListInput } from \"containers/FileListInput\";\nimport React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AppContext, Types } from \"store\";\nimport { defaultTheme, GlobalTheme } from \"styles/theme\";\n\nconst linkStyle = css`\n  display: block;\n  text-align: center;\n  text-decoration: none;\n  color: ${defaultTheme.secondaryColor};\n  background: white;\n  padding: 1rem 0rem;\n  width: 100%;\n  font-weight: 700;\n  font-size: 2.3rem;\n  cursor: pointer;\n  opacity: 0.8;\n  transition: opacity 0.2s ease-in-out;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  padding: 0 2rem;\n`;\n\nexport const MainView: React.FC = () => {\n  const { dispatch } = useContext(AppContext);\n  const primaryColor = localStorage.getItem(\"primaryColor\") || defaultTheme.primaryColor;\n  const secondaryColor = localStorage.getItem(\"secondaryColor\") || defaultTheme.secondaryColor;\n\n  const clearAll = () => {\n    dispatch({\n      type: Types.CLEAR_ALL,\n    });\n  };\n\n  return (\n    <div\n      css={css`\n        height: 100%;\n        width: 100%;\n        max-width: 80rem;\n        margin: 0 auto;\n      `}\n    >\n      <GlobalTheme primaryColor={primaryColor} secondaryColor={secondaryColor} />\n      <Container>\n        <div\n          css={css`\n            flex: none;\n          `}\n        >\n          <Header\n            onClick={clearAll}\n            title=\"Refresh page\"\n            css={css`\n              cursor: pointer;\n              font-size: 4rem;\n            `}\n          >\n            Slippi Stats\n            <br />\n            Graphic Generator\n          </Header>\n        </div>\n        <div\n          css={css`\n            flex: auto;\n          `}\n        >\n          <FileListInput buttonColor={primaryColor} />\n        </div>\n        <div\n          css={css`\n            flex: none;\n            display: grid;\n            grid-template-columns: repeat(3, 1fr);\n            grid-column-gap: 1rem;\n            padding: 2rem 0;\n          `}\n        >\n          <Link css={linkStyle} to=\"/random\" title=\"Show random sample stats\">\n            DEMO\n          </Link>\n          <A css={linkStyle} title=\"Fork this on Github\" href=\"https://github.com/vinceau/slippi-stats\">\n            GITHUB\n          </A>\n          <A css={linkStyle} title=\"Send love\" href=\"https://twitter.com/_vinceau\">\n            AUTHOR\n          </A>\n        </div>\n      </Container>\n    </div>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport obsImage from \"../styles/images/obs.png\";\n\ninterface OBSLayerOptions {\n  \"layer-name\": string;\n  \"layer-width\": number;\n  \"layer-height\": number;\n}\n\nfunction generateLink(options?: Partial<OBSLayerOptions>): string {\n  let location = window.location.href;\n  for (const [key, val] of Object.entries(options || {})) {\n    location += `&${key}=${val}`;\n  }\n  return location;\n}\n\nconst Draggable = styled.a`\n  color: #cccccc;\n  border: solid 0.2rem white;\n  background-color: #333333;\n  display: inline-block;\n  text-decoration: none;\n  padding: 1.5rem 3rem;\n  cursor: move;\n  border-radius: 0.3rem;\n  display: flex;\n  align-items: center;\n  text-transform: uppercase;\n  font-weight: bold;\n`;\n\nexport const OBSDragButton: React.FC<{ options?: Partial<OBSLayerOptions> }> = (props) => {\n  const wrapperRef = React.useRef(null);\n  const location = generateLink(props.options);\n  const pos = 30;\n  const handleDragStart = (e: any) => {\n    const img = new Image();\n    img.src = obsImage;\n    // Customize the visible 'thumbnail' while dragging\n    e.dataTransfer.setDragImage(img, pos, pos);\n    // Set the data type, and the value. You specifically want text/uri-list.\n    e.dataTransfer.setData(\"text/uri-list\", e.target.href);\n  };\n  const handleDragEnd = (e: any) => e.target.blur();\n  return (\n    <Draggable\n      href={location}\n      onDragStart={(e) => handleDragStart(e)}\n      onDragEnd={(e) => handleDragEnd(e)}\n      onClick={(e) => e.preventDefault()}\n      ref={wrapperRef}\n    >\n      <img style={{ width: \"3rem\", marginRight: \"1rem\" }} src={obsImage} alt=\"OBS Logo\" /> Drag me into OBS\n    </Draggable>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport function useParam(key: string, defaultValue = \"\") {\n  const [value, setValue] = useState<string>(defaultValue);\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const currentValue = params.get(key);\n    if (currentValue !== value) {\n      setValue(currentValue || defaultValue);\n    }\n  }, [key, defaultValue, location, value]);\n\n  const setParam = (val: string) => {\n    const params = new URLSearchParams(location.search);\n    params.set(key, val);\n    const search = \"?\" + params.toString();\n    history.push({\n      pathname: location.pathname,\n      search,\n    });\n  };\n\n  return [value, setParam] as const;\n}\n","// From: https://usehooks.com/useKeyPress/\n\nimport { useEffect, useState } from \"react\";\n\nexport function useKeyPress(targetKey: any) {\n  // State for keeping track of whether key is pressed\n\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // Add event listeners\n\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n\n    function downHandler({ key }: any) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n\n    // If released key is our target key then set to false\n\n    const upHandler = ({ key }: any) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n\n    window.addEventListener(\"keyup\", upHandler);\n\n    // Remove event listeners on cleanup\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [targetKey]); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}\n","// From: https://usehooks.com/useOnClickOutside/\n\nimport { useEffect } from \"react\";\n\nexport function useOnClickOutside(ref: any, handler: any) {\n  useEffect(\n    () => {\n      const listener = (event: any) => {\n        // Do nothing if clicking ref's element or descendent elements\n\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n\n      document.addEventListener(\"touchstart\", listener);\n\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    },\n\n    // Add ref and handler to effect dependencies\n\n    // It's worth noting that because passed in handler is a new ...\n\n    // ... function on every render that will cause this effect ...\n\n    // ... callback/cleanup to run every render. It's not a big deal ...\n\n    // ... but to optimize you can wrap handler in useCallback before ...\n\n    // ... passing it into this hook.\n\n    [ref, handler]\n  );\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useOnClickOutside } from \"lib/hooks\";\nimport React, { useRef } from \"react\";\nimport { ChromePicker } from \"react-color\";\n\nconst ColorSquare = styled.div<{\n  size: string;\n  color: string;\n}>`\n  cursor: pointer;\n  height: ${(p) => p.size};\n  width: ${(p) => p.size};\n  border-radius: 0.5rem;\n  background-color: ${(p) => p.color};\n`;\n\nconst ResetButton = styled.div`\n  position: absolute;\n  transform: translateX(-50%);\n  margin-top: 0.2rem;\n  margin-left: 50%;\n  font-size: 1.1rem;\n  cursor: pointer;\n  padding: 0.2rem 0.5rem;\n  opacity: 0.5;\n  transition: opacity 0.2s ease-in-out;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const ColorPicker: React.FC<{\n  value: string;\n  defaultColor?: string;\n  onChange: (val: string) => void;\n}> = ({ value, onChange, defaultColor }) => {\n  const [show, setShow] = React.useState(false);\n  const wrapperRef = useRef(null);\n  const showReset = defaultColor && value !== defaultColor;\n\n  useOnClickOutside(wrapperRef, () => {\n    if (show) {\n      setShow(false);\n    }\n  });\n\n  const onClick = () => {\n    if (!show) {\n      setShow(true);\n    }\n  };\n\n  const resetClick = () => {\n    if (defaultColor) {\n      onChange(defaultColor);\n    }\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <ColorSquare color={value} size=\"5rem\" ref={wrapperRef} onClick={onClick}>\n        {show && (\n          <div\n            css={css`\n              position: absolute;\n              z-index: 9999;\n              bottom: 0;\n            `}\n          >\n            <ChromePicker color={value} onChange={(color) => onChange(color.hex)} />\n          </div>\n        )}\n      </ColorSquare>\n      {showReset && <ResetButton onClick={resetClick}>RESET</ResetButton>}\n    </div>\n  );\n};\n","/** @jsx jsx */ import { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { ColorPicker } from \"components/ColorPicker\";\nimport React from \"react\";\n\nconst ColorContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 1rem;\n  justify-items: center;\n  align-items: center;\n`;\n\nconst ColorLabel = styled.div`\n  font-weight: 600;\n  font-size: 1.6rem;\n`;\n\nexport interface DualColorPickerProps {\n  leftLabel: string;\n  rightLabel: string;\n  leftColor: string;\n  rightColor: string;\n  defaultLeftColor?: string;\n  defaultRightColor?: string;\n  onLeftColorChange: (color: string) => void;\n  onRightColorChange: (color: string) => void;\n}\n\nexport const DualColorPicker: React.FC<DualColorPickerProps> = (props) => {\n  const {\n    defaultLeftColor,\n    defaultRightColor,\n    leftLabel,\n    rightLabel,\n    leftColor,\n    rightColor,\n    onLeftColorChange,\n    onRightColorChange,\n  } = props;\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-column-gap: 2.5rem;\n        grid-template-columns: repeat(2, 1fr);\n      `}\n    >\n      <ColorContainer\n        css={css`\n          justify-self: end;\n        `}\n      >\n        <ColorLabel>{leftLabel}</ColorLabel>\n        <div>\n          <ColorPicker value={leftColor} onChange={onLeftColorChange} defaultColor={defaultLeftColor} />\n        </div>\n      </ColorContainer>\n      <ColorContainer\n        css={css`\n          justify-self: start;\n        `}\n      >\n        <div>\n          <ColorPicker value={rightColor} onChange={onRightColorChange} defaultColor={defaultRightColor} />\n        </div>\n        <ColorLabel>{rightLabel}</ColorLabel>\n      </ColorContainer>\n    </div>\n  );\n};\n","/** @jsx jsx */ import { css, jsx } from \"@emotion/core\";\nimport { DualColorPicker } from \"components/ColorPicker\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nexport interface DualColorPanelProps {\n  panelLabel: string;\n  leftLabel: string;\n  leftColorParam: string;\n  leftDefault: string;\n  rightLabel: string;\n  rightColorParam: string;\n  rightDefault: string;\n}\n\nexport const DualColorPanel: React.FC<DualColorPanelProps> = (props) => {\n  const { panelLabel, leftLabel, leftColorParam, leftDefault, rightLabel, rightColorParam, rightDefault } = props;\n  const existingLeftColor = localStorage.getItem(leftColorParam);\n  const existingRightColor = localStorage.getItem(rightColorParam);\n  const [leftColor, setLeftColor] = useParam(leftColorParam, existingLeftColor || leftDefault);\n  const [rightColor, setRightColor] = useParam(rightColorParam, existingRightColor || rightDefault);\n\n  const onLeftColorChange = (color: string) => {\n    localStorage.setItem(leftColorParam, color);\n    setLeftColor(color);\n  };\n\n  const onRightColorChange = (color: string) => {\n    localStorage.setItem(rightColorParam, color);\n    setRightColor(color);\n  };\n\n  return (\n    <Panel title={panelLabel}>\n      <DualColorPicker\n        leftLabel={leftLabel}\n        rightLabel={rightLabel}\n        leftColor={leftColor}\n        rightColor={rightColor}\n        defaultLeftColor={leftDefault}\n        defaultRightColor={rightDefault}\n        onLeftColorChange={onLeftColorChange}\n        onRightColorChange={onRightColorChange}\n      />\n    </Panel>\n  );\n};\n\nconst Panel: React.FC<{ title: string }> = (props) => {\n  return (\n    <div>\n      <div\n        css={css`\n          text-align: center;\n          margin-bottom: 2rem;\n          font-weight: 800;\n          font-size: 2rem;\n        `}\n      >\n        {props.title}\n      </div>\n      {props.children}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { characters as characterUtil } from \"@slippi/slippi-js\";\nimport { ExternalLink as A } from \"components/ExternalLink\";\nimport { OBSDragButton } from \"components/OBSDragButton\";\nimport { useOnClickOutside, useParam } from \"lib/hooks\";\nimport { PortColor } from \"lib/portColor\";\nimport React from \"react\";\nimport { defaultTheme } from \"styles/theme\";\n\nimport { DualColorPanel } from \"./Panel\";\n\nconst Content = styled.div`\n  padding-top: 2rem;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n`;\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Heading = styled.h2`\n  display: block;\n  position: absolute;\n  width: 100%;\n  top: 0;\n  transform: translateY(-100%);\n  background-color: inherit;\n  margin: 0;\n  text-align: center;\n  padding: 1rem 0;\n  font-size: 2rem;\n  &::after {\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.2), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 10%;\n    bottom: 0;\n  }\n`;\n\nconst Outer = styled.div`\n  position: fixed;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  background-color: black;\n  opacity: 0.2;\n  z-index: 10;\n  &.closed:hover {\n    cursor: pointer;\n    opacity: 0.8;\n  }\n  &.open {\n    opacity: 1;\n    transform: translateY(-100%);\n    .close-button {\n      opacity: 1;\n    }\n  }\n  transition: all 0.2s ease-in-out;\n  .close-button {\n    z-index: 10;\n    position: absolute;\n    right: 3rem;\n    top: 1rem;\n    opacity: 0;\n    transition: opacity 0.2s ease-in-out;\n    color: black;\n    background-color: white;\n    padding: 0.2rem 1rem;\n    font-weight: bold;\n    font-size: 2.5rem;\n    cursor: pointer;\n    transform: translateY(-100%);\n  }\n`;\n\nexport const Options: React.FC = () => {\n  const [open, setOpen] = React.useState(false);\n  const [char1] = useParam(\"char1\");\n  const [char2] = useParam(\"char2\");\n\n  const charName1 = characterUtil.getCharacterShortName(+char1);\n  const charName2 = characterUtil.getCharacterShortName(+char2);\n  const obsLayerName = `Slippi Stats - ${charName1} v ${charName2}`;\n\n  const outerRef = React.useRef(null);\n\n  useOnClickOutside(outerRef, () => {\n    if (open) {\n      setOpen(false);\n    }\n  });\n\n  const showOptions = () => {\n    if (!open) {\n      setOpen(true);\n    }\n  };\n\n  const closeOptions = () => setOpen(false);\n\n  return (\n    <Outer className={open ? \"open\" : \"closed\"} ref={outerRef} onClick={showOptions}>\n      <div className=\"close-button\" onClick={closeOptions} title=\"Close\">\n        ✕\n      </div>\n      <Heading>OPTIONS</Heading>\n      <Content>\n        <Column>\n          <DualColorPanel\n            panelLabel=\"PLAYER COLOR\"\n            leftLabel=\"LEFT\"\n            rightLabel=\"RIGHT\"\n            leftDefault={PortColor.P1}\n            leftColorParam=\"leftColor\"\n            rightColorParam=\"rightColor\"\n            rightDefault={PortColor.P2}\n          />\n        </Column>\n        <Column>\n          <div\n            css={css`\n              margin-top: 1rem;\n            `}\n          >\n            <OBSDragButton options={{ \"layer-name\": obsLayerName, \"layer-width\": 1920, \"layer-height\": 1080 }} />\n          </div>\n          <div\n            css={css`\n              font-size: 1.5rem;\n              padding: 2rem 0;\n              opacity: 0.5;\n              transition: opacity 0.1s ease-in-out;\n              &:hover {\n                opacity: 1;\n              }\n              a:hover {\n                text-decoration: underline;\n              }\n            `}\n          >\n            Made with love by <A href=\"https://twitter.com/_vinceau\">Vince Au</A>\n          </div>\n        </Column>\n        <Column>\n          <DualColorPanel\n            panelLabel=\"THEME COLOR\"\n            leftLabel=\"PRIMARY\"\n            rightLabel=\"SECONDARY\"\n            leftDefault={defaultTheme.primaryColor}\n            leftColorParam=\"primaryColor\"\n            rightColorParam=\"secondaryColor\"\n            rightDefault={defaultTheme.secondaryColor}\n          />\n        </Column>\n      </Content>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useParam } from \"lib/hooks\";\nimport { getCharacterVSScreen, Side } from \"lib/resources\";\nimport React from \"react\";\n\nexport interface CharDisplayProps {\n  colorParam: string;\n  charParam: string;\n  align: Side;\n  theme: string;\n}\n\n// Some characters have their faces to the right so it get cut off.\n// e.g. Sheik and Bowser\n// So make sure we return the desired alignment\nconst FLIP_RIGHT_CHARS = [\"19\", \"5\"];\n\nfunction getAlignment(facing: Side, char: string, defaultAlignment: Side): Side {\n  if (facing === \"left\") {\n    return defaultAlignment;\n  }\n\n  // We so far only care about the right hand side of the VS-screen\n  if (FLIP_RIGHT_CHARS.includes(char)) {\n    return \"right\";\n  }\n\n  return defaultAlignment;\n}\n\nexport const CharDisplay: React.FC<CharDisplayProps> = (props) => {\n  const { colorParam, charParam, align, theme } = props;\n  const [color] = useParam(colorParam);\n  const [char] = useParam(charParam);\n  const facing: Side = align === \"left\" ? \"right\" : \"left\";\n  const imgSrc = getCharacterVSScreen(facing, char, color);\n  const alignment = getAlignment(facing, char, align);\n  return (\n    <div\n      css={css`\n        height: 80%;\n        width: 100%;\n        position: relative;\n        background: radial-gradient(circle at center -30%, ${theme}, transparent);\n        &::after {\n          content: ' ';\n          position: absolute;\n          height: 100%;\n          width: 100%;\n          background-image: url(\"${imgSrc}\");\n          background-repeat: no-repeat;\n          background-size: cover;\n          background-position: top ${alignment};\n        }\n      `}\n    ></div>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Block = styled.div<{\n  color: string;\n  backgroundColor: string;\n}>`\n  color: ${(p) => p.color};\n  background-color: ${(p) => p.backgroundColor};\n  text-align: center;\n  padding: 0.3em 0;\n  font-size: 1.2em;\n  box-shadow: 0.2em 0.2em 0.2em black;\n`;\n","// From: https://dev.to/joelmturner/build-an-inline-edit-text-input-with-react-hooks-4nah\n\nimport \"./index.scss\";\n\nimport { useKeyPress, useOnClickOutside } from \"lib/hooks\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nexport interface InlineEditProps {\n  text: string;\n  textAlign?: \"left\" | \"right\";\n  onSetText: (text: string) => void;\n  onBlur?: () => void;\n  onFocus?: () => void;\n  placeholder?: string;\n}\n\nexport const InlineEdit: React.FC<InlineEditProps> = (props) => {\n  const { text, onSetText, textAlign, placeholder } = props;\n  const [isInputActive, _setIsInputActive] = useState(false);\n  const [inputValue, setInputValue] = useState(text);\n\n  const setIsInputActive = React.useCallback(\n    (isActive: boolean) => {\n      if (isActive !== isInputActive) {\n        // Value has changed\n        if (isActive && props.onFocus) {\n          props.onFocus();\n        }\n\n        if (!isActive && props.onBlur) {\n          props.onBlur();\n        }\n      }\n      _setIsInputActive(isActive);\n    },\n    [isInputActive, props]\n  );\n\n  const wrapperRef = useRef(null);\n  const textRef = useRef(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const tab = useKeyPress(\"Tab\");\n  const enter = useKeyPress(\"Enter\");\n  const esc = useKeyPress(\"Escape\");\n\n  useEffect(() => {\n    setInputValue(text);\n  }, [text]);\n\n  // check to see if the user clicked outside of this component\n  useOnClickOutside(wrapperRef, () => {\n    if (isInputActive) {\n      onSetText(inputValue);\n      setIsInputActive(false);\n    }\n  });\n\n  // focus the cursor in the input field on edit start\n  useEffect(() => {\n    if (isInputActive && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isInputActive]);\n\n  useEffect(() => {\n    if (isInputActive) {\n      // if Enter or tab is pressed, save the text and case the editor\n      if (enter || tab) {\n        onSetText(inputValue);\n        setIsInputActive(false);\n      }\n      // if Escape is pressed, revert the text and close the editor\n      if (esc) {\n        setInputValue(props.text);\n        setIsInputActive(false);\n      }\n    }\n  }, [tab, enter, esc, isInputActive, onSetText, setIsInputActive, inputValue, props.text]); // watch for key presses\n\n  return (\n    <span className=\"inline-text\" ref={wrapperRef}>\n      <span\n        ref={textRef}\n        onClick={() => setIsInputActive(true)}\n        className={`inline-text_copy inline-text_copy--${!isInputActive ? \"active\" : \"hidden\"}`}\n      >\n        {props.text || placeholder}\n      </span>\n      <input\n        ref={inputRef}\n        style={{ textAlign, maxWidth: \"100%\" }}\n        value={inputValue}\n        onChange={(e) => {\n          setInputValue(e.target.value);\n        }}\n        className={`inline-text_input inline-text_input--${isInputActive ? \"active\" : \"hidden\"}`}\n      />\n    </span>\n  );\n};\n\nInlineEdit.defaultProps = {\n  text: \"\",\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onSetText: () => {},\n};\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport { InlineEdit } from \"../InlineEdit\";\nimport { Block } from \"./Block\";\n\nexport interface EditBlockProps {\n  color: string;\n  backgroundColor: string;\n  value: string;\n  placeholder?: string;\n  onEdit: (val: string) => void;\n}\n\nexport const EditBlock: React.FC<EditBlockProps> = ({ onEdit, backgroundColor, value, color }) => {\n  return (\n    <Block color={color} backgroundColor={backgroundColor}>\n      <InlineEdit text={value} onSetText={onEdit} />\n    </Block>\n  );\n};\n\nconst OptionalBlock = styled(Block)<{\n  show?: boolean;\n}>`\n  opacity: ${(p) => (p.show ? 1 : 0)};\n  transition: opacity 0.1s ease-in-out;\n  position: relative;\n  &:hover {\n    opacity: 1;\n    z-index: 10;\n  }\n`;\n\nexport const OptionalEditBlock: React.FC<EditBlockProps> = ({ onEdit, backgroundColor, value, color, placeholder }) => {\n  const [focused, setFocused] = React.useState(false);\n  const show = focused || Boolean(value);\n  return (\n    <OptionalBlock show={show} color={color} backgroundColor={backgroundColor}>\n      <InlineEdit\n        text={value}\n        onSetText={onEdit}\n        onFocus={() => setFocused(true)}\n        onBlur={() => setFocused(false)}\n        placeholder={placeholder}\n      />\n    </OptionalBlock>\n  );\n};\n\nOptionalEditBlock.defaultProps = {\n  placeholder: \"click to edit\",\n};\n","import styled from \"@emotion/styled\";\nimport { OptionalEditBlock } from \"components/Block\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nconst Name = styled.div`\n  font-size: 150%;\n  font-weight: 800;\n`;\n\nconst Subtitle = styled.div<{\n  show?: boolean;\n}>`\n  margin-top: -0.3rem;\n  margin-left: auto;\n  margin-right: auto;\n  width: 80%;\n  font-weight: 600;\n`;\n\nexport interface NameBlockProps {\n  nameParam: string;\n  subtitleParam: string;\n  primaryColor: string;\n}\n\nexport const NameBlock: React.FC<NameBlockProps> = ({ nameParam, subtitleParam, primaryColor }) => {\n  const [name, setName] = useParam(nameParam);\n  const [sub, setSub] = useParam(subtitleParam);\n  return (\n    <div>\n      <Name>\n        <OptionalEditBlock value={name} onEdit={setName} color=\"white\" backgroundColor={primaryColor} />\n      </Name>\n      <Subtitle>\n        <OptionalEditBlock value={sub} onEdit={setSub} color=\"black\" backgroundColor=\"white\" />\n      </Subtitle>\n    </div>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport { Block } from \"components/Block\";\nimport { InlineEdit } from \"components/InlineEdit\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nexport interface ScoreBlockProps {\n  primaryColor: string;\n}\n\nconst StyledBlock = styled(Block)`\n  padding: 0.5rem 4rem;\n  font-size: 5rem;\n  font-weight: 800;\n`;\n\nexport const ScoreBlock: React.FC<ScoreBlockProps> = (props) => {\n  const [score, setScore] = useParam(\"score\", \"0 - 0\");\n  return (\n    <StyledBlock color=\"white\" backgroundColor={props.primaryColor}>\n      <InlineEdit text={score} onSetText={setScore} />\n    </StyledBlock>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport { getCharacterPortrait } from \"lib/resources\";\nimport React from \"react\";\n\nconst Outer = styled.div<{\n  borderColor: string;\n  onClick?: any;\n}>`\n  position: relative;\n  display: block;\n  border: solid 0.1rem ${(p) => p.borderColor};\n  height: 5rem;\n  width: 100%;\n  max-width: 10rem;\n  ${(p) => (p.onClick ? \"cursor: pointer;\" : \"\")}\n`;\n\nconst BaseHeadImage = styled.div`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  &::after {\n    content: \" \";\n    height: 100%;\n    background-repeat: no-repeat;\n    background-size: cover;\n    position: absolute;\n  }\n`;\n\nconst HeadImage = styled(BaseHeadImage)<{\n  backgroundColor?: string;\n  imageSrc: string;\n  side: \"left\" | \"right\";\n  waypoint: number;\n  dim?: boolean;\n}>`\n  ${(p) => {\n    const invWaypoint = 100 - p.waypoint;\n    return `\n      ${p.side === \"right\" ? `clip-path: polygon(${p.waypoint}% 0, 100% 0, 100% 100%, ${invWaypoint}% 100%);` : \"\"}\n      ${p.dim ? \"filter: brightness(25%);\" : \"\"}\n      ${p.backgroundColor ? `background: radial-gradient(circle at center -30%, ${p.backgroundColor}, black);` : \"\"}\n      &::after {\n        width: ${p.waypoint}%;\n        background-image: url(\"${p.imageSrc}\");\n        background-position: top ${p.side};\n        ${p.side === \"right\" ? `left: ${invWaypoint}%;` : \"transform: scaleX(-1);\"}\n      }\n    `;\n  }}\n`;\n\nexport interface HeadToHeadProps {\n  char1: number | string;\n  color1: string;\n  result1: string;\n  char2: number | string;\n  color2: string;\n  result2: string;\n  leftColor: string;\n  rightColor: string;\n  borderColor?: string;\n  onClick?: () => void;\n}\n\nexport const HeadToHead: React.FC<HeadToHeadProps> = ({\n  char1,\n  color1,\n  result1,\n  char2,\n  color2,\n  result2,\n  leftColor,\n  rightColor,\n  borderColor,\n  onClick,\n}) => {\n  const waypoint = 55;\n  const p1 = getCharacterPortrait(char1, color1);\n  const p2 = getCharacterPortrait(char2, color2);\n\n  const clickHandler = () => {\n    if (onClick) {\n      onClick();\n    }\n  };\n\n  return (\n    <Outer borderColor={borderColor || \"transparent\"} onClick={clickHandler}>\n      <HeadImage backgroundColor={leftColor} imageSrc={p1} waypoint={waypoint} side=\"left\" dim={result1 === \"loser\"} />\n      <HeadImage\n        backgroundColor={rightColor}\n        imageSrc={p2}\n        waypoint={waypoint}\n        side=\"right\"\n        dim={result2 === \"loser\"}\n      />\n    </Outer>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport { getStageIcon } from \"lib/resources\";\nimport React from \"react\";\n\nconst Text = styled.span`\n  font-size: 2.5rem;\n  font-weight: bold;\n  opacity: 0.7;\n  text-shadow: 2px 2px 2px black;\n`;\n\nconst Outer = styled.div<{\n  src: string;\n  borderColor: string;\n}>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  height: 9rem;\n  width: 100%;\n  border: solid 1px ${(p) => p.borderColor};\n  z-index: 0;\n\n  &::after {\n    content: ' ';\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-image: url(\"${(p) => p.src}\");\n    background-repeat: no-repeat;\n    background-size: 105% auto;\n    background-position: center;\n    filter: blur(2px) brightness(30%);\n    z-index: -1;\n  }\n`;\n\ninterface StageTimerProps {\n  stageId: string | number;\n  duration: string;\n  borderColor?: string;\n}\n\nexport const StageTimer: React.FC<StageTimerProps> = ({ stageId, duration, borderColor }) => {\n  const stageIcon = getStageIcon(stageId);\n  return (\n    <Outer src={stageIcon} borderColor={borderColor || \"transparent\"}>\n      <Text>{duration}</Text>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { HeadToHead } from \"components/HeadToHead\";\nimport { StageTimer } from \"components/StageTimer\";\nimport { useGameInfo } from \"lib/hooks\";\nimport React from \"react\";\n\nexport interface GameResultProps {\n  index: number;\n  leftColor: string;\n  rightColor: string;\n  winningSide?: string;\n}\n\nconst switchResult = (res: string): string => {\n  return res === \"winner\" ? \"loser\" : res === \"loser\" ? \"winner\" : res;\n};\n\nexport const GameResult: React.FC<GameResultProps> = (props) => {\n  const [gameInfo, setGameInfo] = useGameInfo(props.index);\n  if (!gameInfo) {\n    return null;\n  }\n\n  const gameWinner = gameInfo.result1 === \"winner\" ? \"left\" : gameInfo.result2 === \"winner\" ? \"right\" : \"\";\n  const highlight = props.winningSide === gameWinner;\n\n  const { stageId, duration, ...rest } = gameInfo;\n  const borderColor = `rgba(255, 255, 255, ${highlight ? 1 : 0.2})`;\n\n  const onClick = () => {\n    setGameInfo({\n      result1: switchResult(gameInfo.result1),\n      result2: switchResult(gameInfo.result2),\n    });\n  };\n\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-template-columns: 100%;\n        justify-items: center;\n        width: 100%;\n        max-width: 18rem;\n        grid-row-gap: 2rem;\n      `}\n    >\n      <HeadToHead\n        onClick={onClick}\n        leftColor={props.leftColor}\n        rightColor={props.rightColor}\n        borderColor={borderColor}\n        {...rest}\n      />\n      <StageTimer stageId={stageId} duration={duration} borderColor={borderColor} />\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\n\nimport { useParam } from \"./useParam\";\n\nexport interface GameInfo {\n  stageId: string;\n  duration: string;\n  char1: string;\n  color1: string;\n  result1: string;\n  char2: string;\n  color2: string;\n  result2: string;\n}\n\nexport function useGameInfo(index: number) {\n  const [gameInfoString, setGameInfoString] = useParam(`g${index}`);\n  const [gameInfo, setGameInfo] = useState<GameInfo | null>(null);\n\n  useEffect(() => {\n    // The game info starts off undefined\n    if (!gameInfoString) {\n      setGameInfo(null);\n    } else {\n      const [stageId, duration, char1, color1, result1, char2, color2, result2] = gameInfoString.split(\",\");\n      setGameInfo({\n        stageId,\n        duration,\n        char1,\n        color1,\n        result1,\n        char2,\n        color2,\n        result2,\n      });\n    }\n  }, [gameInfoString]);\n\n  const setParam = (val: Partial<GameInfo>) => {\n    const newValues = Object.assign({}, gameInfo, val);\n    const { stageId, duration, char1, color1, result1, char2, color2, result2 } = newValues;\n    const infoString = [stageId, duration, char1, color1, result1, char2, color2, result2].join(\",\");\n    setGameInfoString(infoString);\n  };\n\n  return [gameInfo, setParam] as const;\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nimport { GameResult } from \"./GameResult\";\n\nexport const GameDisplay: React.FC<{\n  leftColor: string;\n  rightColor: string;\n  winningSide?: string;\n}> = (props) => {\n  const [gt] = useParam(`gt`);\n  const total = parseInt(gt, 10) || 0;\n\n  const games = [];\n  for (let i = 1; i <= total; i++) {\n    games.push(\n      <GameResult\n        key={`g${i}`}\n        index={i}\n        leftColor={props.leftColor}\n        rightColor={props.rightColor}\n        winningSide={props.winningSide}\n      />\n    );\n  }\n\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-column-gap: 2rem;\n        grid-template-columns: repeat(${total}, 1fr);\n        justify-items: center;\n      `}\n    >\n      {games}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport { Block } from \"./Block\";\n\nexport interface StatProps {\n  label: string;\n  color: string;\n  backgroundColor: string;\n  leftComponent: React.ReactNode;\n  rightComponent: React.ReactNode;\n}\n\nconst StatLabel = styled(Block)`\n  padding: 0.3em 2.5em;\n  font-weight: 700;\n  font-size: 1.2em;\n  justify-self: center;\n`;\n\nconst StatContent = styled.div`\n  width: 100%;\n  font-weight: 800;\n  font-size: 2.3em;\n`;\n\nconst TextContent = styled(StatContent)`\n  font-size: 1.4em;\n`;\n\nconst OuterStat = styled.div`\n  display: grid;\n  grid-template-columns: 20% 60% 20%;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.4), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nconst Stat: React.FC<StatProps> = (props) => {\n  const { label, backgroundColor, color, leftComponent, rightComponent } = props;\n  return (\n    <OuterStat>\n      <div\n        css={css`\n          width: 100%;\n          justify-self: start;\n        `}\n      >\n        {leftComponent}\n      </div>\n      <StatLabel backgroundColor={backgroundColor} color={color}>\n        {label}\n      </StatLabel>\n      <div\n        css={css`\n          width: 100%;\n          justify-self: end;\n          text-align: right;\n        `}\n      >\n        {rightComponent}\n      </div>\n    </OuterStat>\n  );\n};\n\nStat.defaultProps = {\n  color: \"black\",\n  backgroundColor: \"white\",\n};\n\nexport const NumberStat: React.FC<StatProps> = (props) => {\n  const { leftComponent, rightComponent, ...rest } = props;\n  return (\n    <Stat\n      leftComponent={<StatContent>{leftComponent}</StatContent>}\n      rightComponent={<StatContent>{rightComponent}</StatContent>}\n      {...rest}\n    />\n  );\n};\n\nexport const TextStat: React.FC<StatProps> = (props) => {\n  const { leftComponent, rightComponent, ...rest } = props;\n  return (\n    <Stat\n      leftComponent={<TextContent>{leftComponent}</TextContent>}\n      rightComponent={<TextContent>{rightComponent}</TextContent>}\n      {...rest}\n    />\n  );\n};\n","import { InlineEdit } from \"components/InlineEdit\";\nimport { NumberStat, TextStat } from \"components/Stat\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\nimport { Theme } from \"styles/theme\";\n\ninterface ConnectedStatProps {\n  param1: string;\n  param2: string;\n  label: string;\n}\n\nconst ConnectedNumberStat: React.FC<ConnectedStatProps> = (props) => {\n  const { param1, param2, label } = props;\n  const defaultValue = \"0\";\n  const [field1, setField1] = useParam(param1, defaultValue);\n  const [field2, setField2] = useParam(param2, defaultValue);\n  return (\n    <NumberStat\n      label={label}\n      color=\"black\"\n      backgroundColor=\"white\"\n      leftComponent={<InlineEdit text={field1} onSetText={setField1} />}\n      rightComponent={<InlineEdit text={field2} textAlign=\"right\" onSetText={setField2} />}\n    />\n  );\n};\n\nconst ConnectedTextStat: React.FC<ConnectedStatProps & Theme> = (props) => {\n  const { param1, param2, label, primaryColor } = props;\n  const defaultValue = \"-\";\n  const [field1, setField1] = useParam(param1, defaultValue);\n  const [field2, setField2] = useParam(param2, defaultValue);\n  return (\n    <TextStat\n      label={label}\n      color=\"white\"\n      backgroundColor={primaryColor}\n      leftComponent={<InlineEdit text={field1} onSetText={setField1} />}\n      rightComponent={<InlineEdit text={field2} textAlign=\"right\" onSetText={setField2} />}\n    />\n  );\n};\n\nexport const MostCommonKillMove: React.FC<Theme> = (props) => {\n  return <ConnectedTextStat param1=\"mckm1\" param2=\"mckm2\" label=\"MOST COMMON KILL MOVE\" {...props} />;\n};\n\nexport const MostCommonNeutralOpener: React.FC<Theme> = (props) => {\n  return <ConnectedTextStat param1=\"mcno1\" param2=\"mcno2\" label=\"MOST COMMON NEUTRAL OPENER\" {...props} />;\n};\n\nexport const AverageKillPercent: React.FC = () => {\n  return <ConnectedNumberStat param1=\"akp1\" param2=\"akp2\" label=\"AVERAGE KILL PERCENT\" />;\n};\n\nexport const NeutralWins: React.FC = () => {\n  return <ConnectedNumberStat param1=\"nw1\" param2=\"nw2\" label=\"NEUTRAL WINS\" />;\n};\n\nexport const DamagePerOpening: React.FC = () => {\n  return <ConnectedNumberStat param1=\"dpo1\" param2=\"dpo2\" label=\"DAMAGE / OPENING\" />;\n};\n\nexport const InputsPerMinute: React.FC = () => {\n  return <ConnectedNumberStat param1=\"ipm1\" param2=\"ipm2\" label=\"INPUTS / MINUTE\" />;\n};\n\nexport const OpeningsPerKill: React.FC = () => {\n  return <ConnectedNumberStat param1=\"opk1\" param2=\"opk2\" label=\"OPENINGS / KILL\" />;\n};\n\nexport const TotalDamageDone: React.FC = () => {\n  return <ConnectedNumberStat param1=\"tdd1\" param2=\"tdd2\" label=\"TOTAL DAMAGE DONE\" />;\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nimport { GameDisplay } from \"../GameDisplay\";\nimport {\n  AverageKillPercent,\n  MostCommonKillMove,\n  MostCommonNeutralOpener,\n  NeutralWins,\n  OpeningsPerKill,\n  TotalDamageDone,\n} from \"./Statistics\";\n\nconst Divider = styled.div`\n  content: \" \";\n  display: block;\n  height: 0.1rem;\n  width: 100%;\n  margin-top: 0.7rem;\n  background-color: rgba(255, 255, 255, 0.05);\n`;\n\nexport const StatDisplay: React.FC<{\n  primaryColor: string;\n  secondaryColor: string;\n  leftColor: string;\n  rightColor: string;\n}> = (props) => {\n  const [winningSide] = useParam(\"winner\");\n  const { leftColor, rightColor, ...theme } = props;\n  return (\n    <div\n      css={css`\n        background: linear-gradient(to right, ${props.secondaryColor}, transparent, ${props.secondaryColor});\n        width: 100%;\n      `}\n    >\n      <div\n        css={css`\n          display: grid;\n          grid-template-columns: 100%;\n          grid-row-gap: 2rem;\n          margin: 4rem;\n        `}\n      >\n        <MostCommonKillMove {...theme} />\n        <MostCommonNeutralOpener {...theme} />\n        <Divider />\n        <OpeningsPerKill />\n        <TotalDamageDone />\n        <AverageKillPercent />\n        <NeutralWins />\n        <Divider />\n        <GameDisplay winningSide={winningSide} leftColor={leftColor} rightColor={rightColor} />\n      </div>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useParam } from \"lib/hooks\";\nimport { PortColor } from \"lib/portColor\";\nimport React from \"react\";\nimport { Theme } from \"styles/theme\";\n\nimport { CharDisplay } from \"./CharDisplay\";\nimport { NameBlock } from \"./NameBlock\";\nimport { ScoreBlock } from \"./ScoreBlock\";\nimport { StatDisplay } from \"./StatDisplay\";\n\nconst Outer = styled.div`\n  position: relative;\n  width: 100%;\n  display: grid;\n  grid-template-columns: 20% 60% 20%;\n`;\n\nconst NameBlockContainer = styled.div<{\n  align: \"left\" | \"right\";\n}>`\n  ${(p) => `\n  width: 20%;\n  position: absolute;\n  ${p.align}: 0;\n  margin-${p.align}: 2rem;\n  bottom: 15%;\n  `}\n`;\n\nexport const RenderDisplay: React.FC<Theme> = (theme) => {\n  const [leftColor] = useParam(\"leftColor\", PortColor.P1);\n  const [rightColor] = useParam(\"rightColor\", PortColor.P2);\n  return (\n    <Outer>\n      <div\n        css={css`\n          justify-self: end;\n          width: 100%;\n        `}\n      >\n        <CharDisplay theme={leftColor} charParam=\"char1\" colorParam=\"color1\" align=\"right\" />\n      </div>\n      <StatDisplay leftColor={leftColor} rightColor={rightColor} {...theme} />\n      <div\n        css={css`\n          width: 100%;\n        `}\n      >\n        <CharDisplay theme={rightColor} charParam=\"char2\" colorParam=\"color2\" align=\"left\" />\n      </div>\n      <NameBlockContainer align=\"left\">\n        <NameBlock nameParam=\"name1\" subtitleParam=\"sub1\" {...theme} />\n      </NameBlockContainer>\n      <NameBlockContainer align=\"right\">\n        <NameBlock nameParam=\"name2\" subtitleParam=\"sub2\" {...theme} />\n      </NameBlockContainer>\n      <div\n        css={css`\n          position: absolute;\n          bottom: -6rem;\n          width: 100%;\n          display: flex;\n          justify-content: center;\n        `}\n      >\n        <ScoreBlock primaryColor={theme.primaryColor} />\n      </div>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { ExternalLink as A } from \"components/ExternalLink\";\nimport { Header } from \"components/Header\";\nimport { Options } from \"containers/Options\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GlobalTheme } from \"styles/theme\";\n\nimport { RenderDisplay } from \"../containers/RenderDisplay\";\nimport poweredByImage from \"../styles/images/powered-by.png\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  &:hover {\n    .settings {\n      opacity: 1;\n    }\n  }\n  .settings {\n    opacity: 0;\n    transition: opacity 0.2s ease-in-out;\n  }\n`;\n\nexport const RenderView: React.FC = () => {\n  const [primaryColor] = useParam(\"primaryColor\");\n  const [secondaryColor] = useParam(\"secondaryColor\");\n  return (\n    <div\n      css={css`\n        width: 1700px;\n        height: 980px;\n        margin: 0 auto;\n      `}\n    >\n      <Container>\n        <GlobalTheme primaryColor={primaryColor} secondaryColor={secondaryColor} />\n        <Link to=\"/\" title=\"Home\">\n          <Header>Post Match Stats</Header>\n        </Link>\n        <div\n          css={css`\n            margin-bottom: 2rem;\n          `}\n        >\n          <A href=\"https://slippi.gg\">\n            <img\n              alt=\"Powered by Slippi\"\n              title=\"Open Slippi.gg homepage\"\n              src={poweredByImage}\n              css={css`\n                max-height: 5rem;\n              `}\n            />\n          </A>\n        </div>\n        <RenderDisplay primaryColor={primaryColor} secondaryColor={secondaryColor} />\n        <div className=\"settings\">\n          <Options />\n        </div>\n      </Container>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { hot } from \"react-hot-loader/root\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { RandomView } from \"views/RandomView\";\n\nimport { AppProvider } from \"./store\";\nimport { MainView } from \"./views/MainView\";\nimport { RenderView } from \"./views/RenderView\";\n\nconst App: React.FC = () => {\n  return (\n    <AppProvider>\n      {/* We have to define the basename here as the Github pages URL segment or the SPA won't work. */}\n      <Router basename=\"/slippi-stats\">\n        <Route exact path=\"/\" component={MainView} />\n        <Route path=\"/render\" component={RenderView} />\n        <Route path=\"/random\" component={RandomView} />\n      </Router>\n    </AppProvider>\n  );\n};\n\nexport default hot(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./index.scss\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}